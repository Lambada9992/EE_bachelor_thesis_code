2023/10/08 18:13:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1234
    GPU 0: NVIDIA GeForce RTX 4070 Ti
    CUDA_HOME: None
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1234
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/10/08 18:13:23 - mmengine - INFO - Config:
_FIRST_MUTABLE = dict(
    _scope_='mmrazor',
    candidates=dict(
        mb_k3e1=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=1,
            kernel_size=3,
            type='MBBlock')),
    type='OneShotMutableOP')
_STAGE_MUTABLE = dict(
    _scope_='mmrazor',
    candidates=dict(
        identity=dict(type='Identity'),
        mb_k3e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=3,
            type='MBBlock'),
        mb_k3e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=3,
            type='MBBlock'),
        mb_k5e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=5,
            type='MBBlock'),
        mb_k5e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=5,
            type='MBBlock'),
        mb_k7e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=7,
            type='MBBlock'),
        mb_k7e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=7,
            type='MBBlock')),
    type='OneShotMutableOP')
arch_setting = [
    [
        24,
        1,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                mb_k3e1=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=1,
                    kernel_size=3,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        32,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        56,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        112,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        128,
        4,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        256,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        432,
        1,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
]
dataset_type = 'mmcls.ImageNet'
default_hooks = dict(
    checkpoint=dict(_scope_='mmcls', interval=1, type='CheckpointHook'),
    logger=dict(_scope_='mmcls', interval=100, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmcls', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmcls', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmcls', type='IterTimerHook'),
    visualization=dict(
        _scope_='mmcls', enable=False, type='VisualizationHook'))
default_scope = 'mmcls'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
find_unused_parameters = True
launcher = 'none'
load_from = 'my_nas_supernet/epoch_96.pth'
log_level = 'INFO'
model = dict(
    architecture=dict(
        _scope_='mmcls',
        backbone=dict(
            _scope_='mmrazor',
            arch_setting=[
                [
                    24,
                    1,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            mb_k3e1=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=1,
                                kernel_size=3,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    32,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    56,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    112,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    128,
                    4,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    256,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    432,
                    1,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
            ],
            first_channels=40,
            last_channels=1728,
            type='SearchableMobileNetV2',
            widen_factor=1.0),
        data_preprocessor=dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True),
        head=dict(
            in_channels=1728,
            loss=dict(
                label_smooth_val=0.1,
                loss_weight=1.0,
                mode='original',
                num_classes=1000,
                type='LabelSmoothLoss'),
            num_classes=1000,
            topk=(
                1,
                5,
            ),
            type='LinearClsHead'),
        neck=dict(type='GlobalAveragePooling'),
        type='ImageClassifier'),
    mutator=dict(type='mmrazor.NasMutator'),
    norm_training=True,
    type='mmrazor.SPOS')
nas_backbone = dict(
    _scope_='mmrazor',
    arch_setting=[
        [
            24,
            1,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    mb_k3e1=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=1,
                        kernel_size=3,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            32,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            56,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            112,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            128,
            4,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            256,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            432,
            1,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
    ],
    first_channels=40,
    last_channels=1728,
    type='SearchableMobileNetV2',
    widen_factor=1.0)
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(
        _scope_='mmrazor',
        lr=0.045,
        momentum=0.9,
        type='SGD',
        weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0.0, dwconv_decay_mult=0.0, norm_decay_mult=0.0))
param_scheduler = dict(
    _scope_='mmrazor',
    by_epoch=True,
    convert_to_iter_based=True,
    end=300,
    eta_min=0.0,
    power=1.0,
    type='PolyLR')
paramwise_cfg = dict(
    bias_decay_mult=0.0, dwconv_decay_mult=0.0, norm_decay_mult=0.0)
preprocess_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
randomness = dict(deterministic=False, seed=1234)
resume = False
supernet = dict(
    _scope_='mmcls',
    backbone=dict(
        _scope_='mmrazor',
        arch_setting=[
            [
                24,
                1,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        mb_k3e1=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=1,
                            kernel_size=3,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                32,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                56,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                112,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                128,
                4,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                256,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                432,
                1,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
        ],
        first_channels=40,
        last_channels=1728,
        type='SearchableMobileNetV2',
        widen_factor=1.0),
    data_preprocessor=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True),
    head=dict(
        in_channels=1728,
        loss=dict(
            label_smooth_val=0.1,
            loss_weight=1.0,
            mode='original',
            num_classes=1000,
            type='LabelSmoothLoss'),
        num_classes=1000,
        topk=(
            1,
            5,
        ),
        type='LinearClsHead'),
    neck=dict(type='GlobalAveragePooling'),
    type='ImageClassifier')
test_cfg = dict()
test_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/val.txt',
        data_prefix='val',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
            dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmcls', topk=(
        1,
        5,
    ), type='Accuracy')
test_pipeline = [
    dict(_scope_='mmcls', type='LoadImageFromFile'),
    dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
    dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
    dict(_scope_='mmcls', type='PackClsInputs'),
]
train_cfg = dict(
    constraints_range=dict(flops=(
        0.0,
        465.0,
    )),
    dataloader=dict(
        batch_size=56,
        dataset=dict(
            _scope_='mmrazor',
            ann_file='meta/val.txt',
            data_prefix='val',
            data_root='data/imagenet',
            pipeline=[
                dict(_scope_='mmcls', type='LoadImageFromFile'),
                dict(
                    _scope_='mmcls',
                    edge='short',
                    scale=256,
                    type='ResizeEdge'),
                dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
                dict(_scope_='mmcls', type='PackClsInputs'),
            ],
            type='mmcls.ImageNet'),
        num_workers=10,
        persistent_workers=True,
        sampler=dict(_scope_='mmrazor', shuffle=False, type='DefaultSampler')),
    evaluator=dict(_scope_='mmcls', topk=(
        1,
        5,
    ), type='Accuracy'),
    max_epochs=20,
    mutate_prob=0.1,
    num_candidates=50,
    num_crossover=25,
    num_mutation=25,
    score_key='accuracy/top1',
    top_k=10,
    type='mmrazor.EvolutionSearchLoop')
train_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/train.txt',
        data_prefix='train',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', scale=224, type='RandomResizedCrop'),
            dict(
                _scope_='mmcls',
                brightness=0.4,
                contrast=0.4,
                saturation=0.4,
                type='ColorJitter'),
            dict(
                _scope_='mmcls',
                direction='horizontal',
                prob=0.5,
                type='RandomFlip'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(_scope_='mmcls', type='LoadImageFromFile'),
    dict(_scope_='mmcls', scale=224, type='RandomResizedCrop'),
    dict(
        _scope_='mmcls',
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        type='ColorJitter'),
    dict(_scope_='mmcls', direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(_scope_='mmcls', type='PackClsInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/val.txt',
        data_prefix='val',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
            dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmcls', topk=(
        1,
        5,
    ), type='Accuracy')
vis_backends = [
    dict(_scope_='mmcls', type='LocalVisBackend'),
]
visualizer = dict(
    _scope_='mmcls',
    type='ClsVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'my_nas_search'

2023/10/08 18:13:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/10/08 18:13:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.conv1.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.conv1.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.conv2.bn.weight:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.backbone.conv2.bn.bias:weight_decay=0.0
2023/10/08 18:13:27 - mmengine - INFO - paramwise_options -- architecture.head.fc.bias:weight_decay=0.0
Name of parameter - Initialization information

architecture.backbone.conv1.conv.weight - torch.Size([40, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

architecture.backbone.conv1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([72, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([72, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([144, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.identity.downsample.conv.weight - torch.Size([32, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.identity.downsample.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.identity.downsample.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.identity.downsample.conv.weight - torch.Size([56, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.identity.downsample.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.identity.downsample.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.identity.downsample.conv.weight - torch.Size([112, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.identity.downsample.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.identity.downsample.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.identity.downsample.conv.weight - torch.Size([128, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.identity.downsample.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.identity.downsample.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.identity.downsample.conv.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.identity.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.identity.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.identity.downsample.conv.weight - torch.Size([432, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.identity.downsample.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.identity.downsample.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv2.conv.weight - torch.Size([1728, 432, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

architecture.backbone.conv2.bn.weight - torch.Size([1728]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv2.bn.bias - torch.Size([1728]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.head.fc.weight - torch.Size([1000, 1728]): 
NormalInit: mean=0, std=0.01, bias=0 

architecture.head.fc.bias - torch.Size([1000]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/10/08 18:13:29 - mmengine - INFO - Load checkpoint from my_nas_supernet/epoch_96.pth
2023/10/08 18:13:29 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/10/08 18:13:29 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/10/08 18:13:29 - mmengine - INFO - Checkpoints will be saved to /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_search.
2023/10/08 18:43:33 - mmengine - INFO - Epoch:[0/20] Candidate:[1/50] Flops: 450.855 Params: 4.761 Latency: 0.0 Score: 44.17 
2023/10/08 18:44:31 - mmengine - INFO - Epoch:[0/20] Candidate:[2/50] Flops: 464.729 Params: 4.794 Latency: 0.0 Score: 44.21 
2023/10/08 18:45:25 - mmengine - INFO - Epoch:[0/20] Candidate:[3/50] Flops: 446.747 Params: 5.275 Latency: 0.0 Score: 48.99 
2023/10/08 18:46:28 - mmengine - INFO - Epoch:[0/20] Candidate:[4/50] Flops: 452.887 Params: 4.552 Latency: 0.0 Score: 49.42 
2023/10/08 18:47:24 - mmengine - INFO - Epoch:[0/20] Candidate:[5/50] Flops: 439.562 Params: 4.836 Latency: 0.0 Score: 49.88 
2023/10/08 18:48:22 - mmengine - INFO - Epoch:[0/20] Candidate:[6/50] Flops: 462.176 Params: 5.305 Latency: 0.0 Score: 49.76 
2023/10/08 18:49:17 - mmengine - INFO - Epoch:[0/20] Candidate:[7/50] Flops: 438.766 Params: 4.363 Latency: 0.0 Score: 45.81 
2023/10/08 18:50:14 - mmengine - INFO - Epoch:[0/20] Candidate:[8/50] Flops: 455.026 Params: 5.237 Latency: 0.0 Score: 49.19 
2023/10/08 18:51:06 - mmengine - INFO - Epoch:[0/20] Candidate:[9/50] Flops: 447.913 Params: 5.432 Latency: 0.0 Score: 41.87 
2023/10/08 18:52:08 - mmengine - INFO - Epoch:[0/20] Candidate:[10/50] Flops: 457.861 Params: 5.033 Latency: 0.0 Score: 48.53 
2023/10/08 18:53:03 - mmengine - INFO - Epoch:[0/20] Candidate:[11/50] Flops: 439.91 Params: 5.059 Latency: 0.0 Score: 46.08 
2023/10/08 18:54:02 - mmengine - INFO - Epoch:[0/20] Candidate:[12/50] Flops: 454.65 Params: 4.058 Latency: 0.0 Score: 37.15 
2023/10/08 18:54:57 - mmengine - INFO - Epoch:[0/20] Candidate:[13/50] Flops: 448.309 Params: 4.424 Latency: 0.0 Score: 42.18 
2023/10/08 18:55:58 - mmengine - INFO - Epoch:[0/20] Candidate:[14/50] Flops: 458.384 Params: 4.969 Latency: 0.0 Score: 49.83 
2023/10/08 18:57:01 - mmengine - INFO - Epoch:[0/20] Candidate:[15/50] Flops: 459.796 Params: 4.076 Latency: 0.0 Score: 46.13 
2023/10/08 18:57:54 - mmengine - INFO - Epoch:[0/20] Candidate:[16/50] Flops: 441.419 Params: 5.155 Latency: 0.0 Score: 45.85 
2023/10/08 18:58:50 - mmengine - INFO - Epoch:[0/20] Candidate:[17/50] Flops: 458.886 Params: 4.018 Latency: 0.0 Score: 44.12 
2023/10/08 18:59:47 - mmengine - INFO - Epoch:[0/20] Candidate:[18/50] Flops: 459.341 Params: 3.915 Latency: 0.0 Score: 42.0 
2023/10/08 19:00:45 - mmengine - INFO - Epoch:[0/20] Candidate:[19/50] Flops: 457.626 Params: 4.632 Latency: 0.0 Score: 47.25 
2023/10/08 19:01:39 - mmengine - INFO - Epoch:[0/20] Candidate:[20/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 19:02:33 - mmengine - INFO - Epoch:[0/20] Candidate:[21/50] Flops: 441.676 Params: 4.322 Latency: 0.0 Score: 42.59 
2023/10/08 19:03:30 - mmengine - INFO - Epoch:[0/20] Candidate:[22/50] Flops: 462.58 Params: 5.217 Latency: 0.0 Score: 49.66 
2023/10/08 19:04:24 - mmengine - INFO - Epoch:[0/20] Candidate:[23/50] Flops: 462.944 Params: 4.982 Latency: 0.0 Score: 47.83 
2023/10/08 19:05:16 - mmengine - INFO - Epoch:[0/20] Candidate:[24/50] Flops: 457.754 Params: 5.815 Latency: 0.0 Score: 41.64 
2023/10/08 19:06:08 - mmengine - INFO - Epoch:[0/20] Candidate:[25/50] Flops: 434.498 Params: 5.959 Latency: 0.0 Score: 45.9 
2023/10/08 19:07:04 - mmengine - INFO - Epoch:[0/20] Candidate:[26/50] Flops: 464.023 Params: 3.68 Latency: 0.0 Score: 37.34 
2023/10/08 19:07:59 - mmengine - INFO - Epoch:[0/20] Candidate:[27/50] Flops: 451.573 Params: 5.413 Latency: 0.0 Score: 50.92 
2023/10/08 19:08:50 - mmengine - INFO - Epoch:[0/20] Candidate:[28/50] Flops: 445.104 Params: 4.993 Latency: 0.0 Score: 49.1 
2023/10/08 19:09:40 - mmengine - INFO - Epoch:[0/20] Candidate:[29/50] Flops: 386.99 Params: 4.135 Latency: 0.0 Score: 37.99 
2023/10/08 19:10:33 - mmengine - INFO - Epoch:[0/20] Candidate:[30/50] Flops: 431.161 Params: 4.721 Latency: 0.0 Score: 48.44 
2023/10/08 19:11:29 - mmengine - INFO - Epoch:[0/20] Candidate:[31/50] Flops: 452.442 Params: 5.244 Latency: 0.0 Score: 50.69 
2023/10/08 19:12:23 - mmengine - INFO - Epoch:[0/20] Candidate:[32/50] Flops: 422.355 Params: 4.442 Latency: 0.0 Score: 41.46 
2023/10/08 19:13:18 - mmengine - INFO - Epoch:[0/20] Candidate:[33/50] Flops: 446.019 Params: 5.343 Latency: 0.0 Score: 48.94 
2023/10/08 19:14:11 - mmengine - INFO - Epoch:[0/20] Candidate:[34/50] Flops: 444.213 Params: 5.713 Latency: 0.0 Score: 48.71 
2023/10/08 19:15:07 - mmengine - INFO - Epoch:[0/20] Candidate:[35/50] Flops: 456.017 Params: 4.777 Latency: 0.0 Score: 49.76 
2023/10/08 19:16:02 - mmengine - INFO - Epoch:[0/20] Candidate:[36/50] Flops: 451.338 Params: 5.811 Latency: 0.0 Score: 43.61 
2023/10/08 19:16:58 - mmengine - INFO - Epoch:[0/20] Candidate:[37/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 19:17:51 - mmengine - INFO - Epoch:[0/20] Candidate:[38/50] Flops: 434.686 Params: 4.892 Latency: 0.0 Score: 45.56 
2023/10/08 19:18:46 - mmengine - INFO - Epoch:[0/20] Candidate:[39/50] Flops: 453.9 Params: 5.558 Latency: 0.0 Score: 47.05 
2023/10/08 19:19:42 - mmengine - INFO - Epoch:[0/20] Candidate:[40/50] Flops: 457.898 Params: 4.339 Latency: 0.0 Score: 41.8 
2023/10/08 19:20:38 - mmengine - INFO - Epoch:[0/20] Candidate:[41/50] Flops: 463.026 Params: 5.197 Latency: 0.0 Score: 51.08 
2023/10/08 19:21:30 - mmengine - INFO - Epoch:[0/20] Candidate:[42/50] Flops: 386.187 Params: 4.805 Latency: 0.0 Score: 46.35 
2023/10/08 19:22:26 - mmengine - INFO - Epoch:[0/20] Candidate:[43/50] Flops: 435.761 Params: 4.712 Latency: 0.0 Score: 46.6 
2023/10/08 19:23:19 - mmengine - INFO - Epoch:[0/20] Candidate:[44/50] Flops: 424.594 Params: 5.901 Latency: 0.0 Score: 50.12 
2023/10/08 19:24:14 - mmengine - INFO - Epoch:[0/20] Candidate:[45/50] Flops: 452.542 Params: 5.518 Latency: 0.0 Score: 45.24 
2023/10/08 19:25:07 - mmengine - INFO - Epoch:[0/20] Candidate:[46/50] Flops: 399.127 Params: 4.863 Latency: 0.0 Score: 45.58 
2023/10/08 19:26:04 - mmengine - INFO - Epoch:[0/20] Candidate:[47/50] Flops: 444.834 Params: 4.398 Latency: 0.0 Score: 48.24 
2023/10/08 19:27:00 - mmengine - INFO - Epoch:[0/20] Candidate:[48/50] Flops: 449.224 Params: 3.848 Latency: 0.0 Score: 36.97 
2023/10/08 19:27:56 - mmengine - INFO - Epoch:[0/20] Candidate:[49/50] Flops: 440.421 Params: 4.507 Latency: 0.0 Score: 46.48 
2023/10/08 19:28:47 - mmengine - INFO - Epoch:[0/20] Candidate:[50/50] Flops: 453.066 Params: 5.765 Latency: 0.0 Score: 49.63 
2023/10/08 19:28:47 - mmengine - INFO - top k scores before update: []
2023/10/08 19:28:47 - mmengine - INFO - top k scores after update: [51.55, 51.21, 51.08, 50.92, 50.69, 50.12, 49.88, 49.83, 49.76, 49.76]
2023/10/08 19:29:07 - mmengine - INFO - Epoch:[1/20], top1_score: 51.55
2023/10/08 19:30:02 - mmengine - INFO - Epoch:[1/20] Candidate:[1/50] Flops: 460.247 Params: 5.137 Latency: 0.0 Score: 52.0 
2023/10/08 19:30:56 - mmengine - INFO - Epoch:[1/20] Candidate:[2/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 19:31:49 - mmengine - INFO - Epoch:[1/20] Candidate:[3/50] Flops: 436.238 Params: 4.689 Latency: 0.0 Score: 49.77 
2023/10/08 19:32:42 - mmengine - INFO - Epoch:[1/20] Candidate:[4/50] Flops: 453.953 Params: 4.72 Latency: 0.0 Score: 51.54 
2023/10/08 19:33:38 - mmengine - INFO - Epoch:[1/20] Candidate:[5/50] Flops: 443.99 Params: 4.896 Latency: 0.0 Score: 49.37 
2023/10/08 19:34:36 - mmengine - INFO - Epoch:[1/20] Candidate:[6/50] Flops: 464.537 Params: 5.549 Latency: 0.0 Score: 50.14 
2023/10/08 19:35:30 - mmengine - INFO - Epoch:[1/20] Candidate:[7/50] Flops: 445.684 Params: 5.182 Latency: 0.0 Score: 50.15 
2023/10/08 19:36:25 - mmengine - INFO - Epoch:[1/20] Candidate:[8/50] Flops: 460.238 Params: 5.306 Latency: 0.0 Score: 50.81 
2023/10/08 19:37:24 - mmengine - INFO - Epoch:[1/20] Candidate:[9/50] Flops: 422.339 Params: 4.787 Latency: 0.0 Score: 46.93 
2023/10/08 19:38:18 - mmengine - INFO - Epoch:[1/20] Candidate:[10/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 19:39:14 - mmengine - INFO - Epoch:[1/20] Candidate:[11/50] Flops: 452.442 Params: 5.244 Latency: 0.0 Score: 50.69 
2023/10/08 19:40:04 - mmengine - INFO - Epoch:[1/20] Candidate:[12/50] Flops: 404.762 Params: 5.498 Latency: 0.0 Score: 50.03 
2023/10/08 19:40:59 - mmengine - INFO - Epoch:[1/20] Candidate:[13/50] Flops: 453.9 Params: 5.391 Latency: 0.0 Score: 50.78 
2023/10/08 19:41:55 - mmengine - INFO - Epoch:[1/20] Candidate:[14/50] Flops: 451.573 Params: 5.413 Latency: 0.0 Score: 50.92 
2023/10/08 19:42:51 - mmengine - INFO - Epoch:[1/20] Candidate:[15/50] Flops: 462.176 Params: 5.305 Latency: 0.0 Score: 49.76 
2023/10/08 19:43:46 - mmengine - INFO - Epoch:[1/20] Candidate:[16/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 19:44:39 - mmengine - INFO - Epoch:[1/20] Candidate:[17/50] Flops: 425.25 Params: 5.904 Latency: 0.0 Score: 51.73 
2023/10/08 19:45:36 - mmengine - INFO - Epoch:[1/20] Candidate:[18/50] Flops: 461.972 Params: 5.192 Latency: 0.0 Score: 50.99 
2023/10/08 19:46:33 - mmengine - INFO - Epoch:[1/20] Candidate:[19/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 19:47:27 - mmengine - INFO - Epoch:[1/20] Candidate:[20/50] Flops: 439.007 Params: 4.767 Latency: 0.0 Score: 49.53 
2023/10/08 19:48:23 - mmengine - INFO - Epoch:[1/20] Candidate:[21/50] Flops: 417.065 Params: 4.66 Latency: 0.0 Score: 50.0 
2023/10/08 19:49:18 - mmengine - INFO - Epoch:[1/20] Candidate:[22/50] Flops: 422.487 Params: 4.498 Latency: 0.0 Score: 48.13 
2023/10/08 19:50:14 - mmengine - INFO - Epoch:[1/20] Candidate:[23/50] Flops: 446.618 Params: 5.014 Latency: 0.0 Score: 50.74 
2023/10/08 19:51:08 - mmengine - INFO - Epoch:[1/20] Candidate:[24/50] Flops: 442.407 Params: 5.178 Latency: 0.0 Score: 50.97 
2023/10/08 19:52:04 - mmengine - INFO - Epoch:[1/20] Candidate:[25/50] Flops: 451.84 Params: 5.241 Latency: 0.0 Score: 50.75 
2023/10/08 19:52:56 - mmengine - INFO - Epoch:[1/20] Candidate:[26/50] Flops: 410.724 Params: 4.615 Latency: 0.0 Score: 48.63 
2023/10/08 19:53:47 - mmengine - INFO - Epoch:[1/20] Candidate:[27/50] Flops: 438.264 Params: 5.54 Latency: 0.0 Score: 49.46 
2023/10/08 19:54:39 - mmengine - INFO - Epoch:[1/20] Candidate:[28/50] Flops: 390.866 Params: 5.221 Latency: 0.0 Score: 47.94 
2023/10/08 19:55:31 - mmengine - INFO - Epoch:[1/20] Candidate:[29/50] Flops: 376.482 Params: 4.736 Latency: 0.0 Score: 46.58 
2023/10/08 19:56:23 - mmengine - INFO - Epoch:[1/20] Candidate:[30/50] Flops: 373.869 Params: 4.759 Latency: 0.0 Score: 46.17 
2023/10/08 19:57:16 - mmengine - INFO - Epoch:[1/20] Candidate:[31/50] Flops: 429.822 Params: 5.096 Latency: 0.0 Score: 48.54 
2023/10/08 19:58:10 - mmengine - INFO - Epoch:[1/20] Candidate:[32/50] Flops: 394.432 Params: 4.845 Latency: 0.0 Score: 44.98 
2023/10/08 19:59:06 - mmengine - INFO - Epoch:[1/20] Candidate:[33/50] Flops: 452.442 Params: 5.244 Latency: 0.0 Score: 50.69 
2023/10/08 20:00:01 - mmengine - INFO - Epoch:[1/20] Candidate:[34/50] Flops: 427.413 Params: 4.83 Latency: 0.0 Score: 49.59 
2023/10/08 20:00:55 - mmengine - INFO - Epoch:[1/20] Candidate:[35/50] Flops: 439.562 Params: 4.836 Latency: 0.0 Score: 49.88 
2023/10/08 20:01:46 - mmengine - INFO - Epoch:[1/20] Candidate:[36/50] Flops: 401.488 Params: 5.581 Latency: 0.0 Score: 48.77 
2023/10/08 20:02:42 - mmengine - INFO - Epoch:[1/20] Candidate:[37/50] Flops: 444.238 Params: 5.148 Latency: 0.0 Score: 50.48 
2023/10/08 20:03:38 - mmengine - INFO - Epoch:[1/20] Candidate:[38/50] Flops: 452.457 Params: 5.386 Latency: 0.0 Score: 50.75 
2023/10/08 20:04:31 - mmengine - INFO - Epoch:[1/20] Candidate:[39/50] Flops: 446.189 Params: 4.924 Latency: 0.0 Score: 50.58 
2023/10/08 20:05:26 - mmengine - INFO - Epoch:[1/20] Candidate:[40/50] Flops: 447.377 Params: 5.34 Latency: 0.0 Score: 50.23 
2023/10/08 20:06:22 - mmengine - INFO - Epoch:[1/20] Candidate:[41/50] Flops: 450.811 Params: 5.428 Latency: 0.0 Score: 51.85 
2023/10/08 20:07:14 - mmengine - INFO - Epoch:[1/20] Candidate:[42/50] Flops: 438.621 Params: 5.532 Latency: 0.0 Score: 47.53 
2023/10/08 20:08:11 - mmengine - INFO - Epoch:[1/20] Candidate:[43/50] Flops: 441.767 Params: 5.026 Latency: 0.0 Score: 49.77 
2023/10/08 20:09:02 - mmengine - INFO - Epoch:[1/20] Candidate:[44/50] Flops: 398.851 Params: 4.704 Latency: 0.0 Score: 49.4 
2023/10/08 20:09:55 - mmengine - INFO - Epoch:[1/20] Candidate:[45/50] Flops: 450.805 Params: 5.701 Latency: 0.0 Score: 50.5 
2023/10/08 20:10:50 - mmengine - INFO - Epoch:[1/20] Candidate:[46/50] Flops: 418.002 Params: 4.559 Latency: 0.0 Score: 50.21 
2023/10/08 20:11:45 - mmengine - INFO - Epoch:[1/20] Candidate:[47/50] Flops: 437.304 Params: 5.149 Latency: 0.0 Score: 50.82 
2023/10/08 20:12:41 - mmengine - INFO - Epoch:[1/20] Candidate:[48/50] Flops: 460.006 Params: 5.551 Latency: 0.0 Score: 49.12 
2023/10/08 20:13:33 - mmengine - INFO - Epoch:[1/20] Candidate:[49/50] Flops: 426.805 Params: 5.853 Latency: 0.0 Score: 50.46 
2023/10/08 20:14:25 - mmengine - INFO - Epoch:[1/20] Candidate:[50/50] Flops: 411.693 Params: 5.074 Latency: 0.0 Score: 48.75 
2023/10/08 20:14:25 - mmengine - INFO - top k scores before update: [51.55, 51.21, 51.08, 50.92, 50.69, 50.12, 49.88, 49.83, 49.76, 49.76]
2023/10/08 20:14:25 - mmengine - INFO - top k scores after update: [52.0, 51.85, 51.81, 51.73, 51.55, 51.55, 51.54, 51.21, 51.21, 51.21]
2023/10/08 20:14:46 - mmengine - INFO - Epoch:[2/20], top1_score: 52.0
2023/10/08 20:15:41 - mmengine - INFO - Epoch:[2/20] Candidate:[1/50] Flops: 440.067 Params: 5.203 Latency: 0.0 Score: 51.03 
2023/10/08 20:16:35 - mmengine - INFO - Epoch:[2/20] Candidate:[2/50] Flops: 391.578 Params: 4.251 Latency: 0.0 Score: 46.3 
2023/10/08 20:17:29 - mmengine - INFO - Epoch:[2/20] Candidate:[3/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 20:18:26 - mmengine - INFO - Epoch:[2/20] Candidate:[4/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:19:23 - mmengine - INFO - Epoch:[2/20] Candidate:[5/50] Flops: 433.334 Params: 4.551 Latency: 0.0 Score: 51.51 
2023/10/08 20:20:18 - mmengine - INFO - Epoch:[2/20] Candidate:[6/50] Flops: 450.811 Params: 5.428 Latency: 0.0 Score: 51.85 
2023/10/08 20:21:15 - mmengine - INFO - Epoch:[2/20] Candidate:[7/50] Flops: 438.885 Params: 4.703 Latency: 0.0 Score: 50.95 
2023/10/08 20:22:12 - mmengine - INFO - Epoch:[2/20] Candidate:[8/50] Flops: 400.158 Params: 4.833 Latency: 0.0 Score: 50.35 
2023/10/08 20:23:07 - mmengine - INFO - Epoch:[2/20] Candidate:[9/50] Flops: 453.953 Params: 4.72 Latency: 0.0 Score: 51.54 
2023/10/08 20:24:00 - mmengine - INFO - Epoch:[2/20] Candidate:[10/50] Flops: 428.411 Params: 5.908 Latency: 0.0 Score: 51.66 
2023/10/08 20:24:54 - mmengine - INFO - Epoch:[2/20] Candidate:[11/50] Flops: 438.298 Params: 4.71 Latency: 0.0 Score: 51.56 
2023/10/08 20:25:49 - mmengine - INFO - Epoch:[2/20] Candidate:[12/50] Flops: 446.606 Params: 5.237 Latency: 0.0 Score: 50.95 
2023/10/08 20:26:44 - mmengine - INFO - Epoch:[2/20] Candidate:[13/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:27:39 - mmengine - INFO - Epoch:[2/20] Candidate:[14/50] Flops: 453.05 Params: 4.701 Latency: 0.0 Score: 51.29 
2023/10/08 20:28:33 - mmengine - INFO - Epoch:[2/20] Candidate:[15/50] Flops: 430.066 Params: 4.446 Latency: 0.0 Score: 48.36 
2023/10/08 20:29:27 - mmengine - INFO - Epoch:[2/20] Candidate:[16/50] Flops: 439.22 Params: 5.399 Latency: 0.0 Score: 51.98 
2023/10/08 20:30:25 - mmengine - INFO - Epoch:[2/20] Candidate:[17/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:31:20 - mmengine - INFO - Epoch:[2/20] Candidate:[18/50] Flops: 453.953 Params: 4.72 Latency: 0.0 Score: 51.54 
2023/10/08 20:32:16 - mmengine - INFO - Epoch:[2/20] Candidate:[19/50] Flops: 429.969 Params: 4.712 Latency: 0.0 Score: 49.55 
2023/10/08 20:33:10 - mmengine - INFO - Epoch:[2/20] Candidate:[20/50] Flops: 461.668 Params: 5.313 Latency: 0.0 Score: 51.09 
2023/10/08 20:34:04 - mmengine - INFO - Epoch:[2/20] Candidate:[21/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:34:58 - mmengine - INFO - Epoch:[2/20] Candidate:[22/50] Flops: 450.811 Params: 5.428 Latency: 0.0 Score: 51.85 
2023/10/08 20:35:51 - mmengine - INFO - Epoch:[2/20] Candidate:[23/50] Flops: 423.443 Params: 5.902 Latency: 0.0 Score: 51.6 
2023/10/08 20:36:48 - mmengine - INFO - Epoch:[2/20] Candidate:[24/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 20:37:40 - mmengine - INFO - Epoch:[2/20] Candidate:[25/50] Flops: 439.49 Params: 5.324 Latency: 0.0 Score: 49.79 
2023/10/08 20:38:37 - mmengine - INFO - Epoch:[2/20] Candidate:[26/50] Flops: 417.29 Params: 5.372 Latency: 0.0 Score: 49.89 
2023/10/08 20:39:33 - mmengine - INFO - Epoch:[2/20] Candidate:[27/50] Flops: 453.953 Params: 4.72 Latency: 0.0 Score: 51.54 
2023/10/08 20:40:29 - mmengine - INFO - Epoch:[2/20] Candidate:[28/50] Flops: 453.953 Params: 4.72 Latency: 0.0 Score: 51.54 
2023/10/08 20:41:23 - mmengine - INFO - Epoch:[2/20] Candidate:[29/50] Flops: 454.985 Params: 4.661 Latency: 0.0 Score: 51.87 
2023/10/08 20:42:14 - mmengine - INFO - Epoch:[2/20] Candidate:[30/50] Flops: 444.617 Params: 5.0 Latency: 0.0 Score: 49.63 
2023/10/08 20:43:10 - mmengine - INFO - Epoch:[2/20] Candidate:[31/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 20:44:04 - mmengine - INFO - Epoch:[2/20] Candidate:[32/50] Flops: 455.65 Params: 5.813 Latency: 0.0 Score: 52.01 
2023/10/08 20:44:58 - mmengine - INFO - Epoch:[2/20] Candidate:[33/50] Flops: 433.616 Params: 4.676 Latency: 0.0 Score: 50.93 
2023/10/08 20:45:54 - mmengine - INFO - Epoch:[2/20] Candidate:[34/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:46:52 - mmengine - INFO - Epoch:[2/20] Candidate:[35/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:47:42 - mmengine - INFO - Epoch:[2/20] Candidate:[36/50] Flops: 431.283 Params: 5.428 Latency: 0.0 Score: 49.15 
2023/10/08 20:48:35 - mmengine - INFO - Epoch:[2/20] Candidate:[37/50] Flops: 406.722 Params: 4.519 Latency: 0.0 Score: 49.1 
2023/10/08 20:49:27 - mmengine - INFO - Epoch:[2/20] Candidate:[38/50] Flops: 449.162 Params: 5.327 Latency: 0.0 Score: 51.34 
2023/10/08 20:50:21 - mmengine - INFO - Epoch:[2/20] Candidate:[39/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 20:51:18 - mmengine - INFO - Epoch:[2/20] Candidate:[40/50] Flops: 412.618 Params: 4.346 Latency: 0.0 Score: 49.9 
2023/10/08 20:52:15 - mmengine - INFO - Epoch:[2/20] Candidate:[41/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:53:07 - mmengine - INFO - Epoch:[2/20] Candidate:[42/50] Flops: 422.709 Params: 5.091 Latency: 0.0 Score: 46.2 
2023/10/08 20:54:04 - mmengine - INFO - Epoch:[2/20] Candidate:[43/50] Flops: 462.872 Params: 5.319 Latency: 0.0 Score: 51.21 
2023/10/08 20:55:01 - mmengine - INFO - Epoch:[2/20] Candidate:[44/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:55:55 - mmengine - INFO - Epoch:[2/20] Candidate:[45/50] Flops: 427.282 Params: 4.729 Latency: 0.0 Score: 50.09 
2023/10/08 20:56:53 - mmengine - INFO - Epoch:[2/20] Candidate:[46/50] Flops: 460.247 Params: 5.137 Latency: 0.0 Score: 52.0 
2023/10/08 20:57:48 - mmengine - INFO - Epoch:[2/20] Candidate:[47/50] Flops: 431.374 Params: 4.571 Latency: 0.0 Score: 50.24 
2023/10/08 20:58:46 - mmengine - INFO - Epoch:[2/20] Candidate:[48/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 20:59:39 - mmengine - INFO - Epoch:[2/20] Candidate:[49/50] Flops: 443.256 Params: 5.45 Latency: 0.0 Score: 48.56 
2023/10/08 21:00:33 - mmengine - INFO - Epoch:[2/20] Candidate:[50/50] Flops: 459.771 Params: 4.749 Latency: 0.0 Score: 51.55 
2023/10/08 21:00:33 - mmengine - INFO - top k scores before update: [52.0, 51.85, 51.81, 51.73, 51.55, 51.55, 51.54, 51.21, 51.21, 51.21]
2023/10/08 21:00:33 - mmengine - INFO - top k scores after update: [52.6, 52.01, 52.0, 52.0, 51.98, 51.87, 51.85, 51.85, 51.85, 51.81]
2023/10/08 21:00:47 - mmengine - INFO - Epoch:[3/20], top1_score: 52.6
2023/10/08 21:01:40 - mmengine - INFO - Epoch:[3/20] Candidate:[1/50] Flops: 429.173 Params: 4.988 Latency: 0.0 Score: 47.99 
2023/10/08 21:02:37 - mmengine - INFO - Epoch:[3/20] Candidate:[2/50] Flops: 455.537 Params: 4.641 Latency: 0.0 Score: 51.51 
2023/10/08 21:03:34 - mmengine - INFO - Epoch:[3/20] Candidate:[3/50] Flops: 459.802 Params: 4.662 Latency: 0.0 Score: 52.02 
2023/10/08 21:04:27 - mmengine - INFO - Epoch:[3/20] Candidate:[4/50] Flops: 417.522 Params: 5.985 Latency: 0.0 Score: 50.01 
2023/10/08 21:05:21 - mmengine - INFO - Epoch:[3/20] Candidate:[5/50] Flops: 448.396 Params: 5.409 Latency: 0.0 Score: 53.15 
2023/10/08 21:06:18 - mmengine - INFO - Epoch:[3/20] Candidate:[6/50] Flops: 460.222 Params: 5.091 Latency: 0.0 Score: 50.6 
2023/10/08 21:07:09 - mmengine - INFO - Epoch:[3/20] Candidate:[7/50] Flops: 430.954 Params: 5.024 Latency: 0.0 Score: 51.31 
2023/10/08 21:08:04 - mmengine - INFO - Epoch:[3/20] Candidate:[8/50] Flops: 460.774 Params: 5.14 Latency: 0.0 Score: 51.61 
2023/10/08 21:08:59 - mmengine - INFO - Epoch:[3/20] Candidate:[9/50] Flops: 454.032 Params: 4.642 Latency: 0.0 Score: 51.51 
2023/10/08 21:09:53 - mmengine - INFO - Epoch:[3/20] Candidate:[10/50] Flops: 455.65 Params: 5.813 Latency: 0.0 Score: 52.01 
2023/10/08 21:10:51 - mmengine - INFO - Epoch:[3/20] Candidate:[11/50] Flops: 460.247 Params: 5.137 Latency: 0.0 Score: 52.0 
2023/10/08 21:11:48 - mmengine - INFO - Epoch:[3/20] Candidate:[12/50] Flops: 454.938 Params: 5.032 Latency: 0.0 Score: 52.13 
2023/10/08 21:12:42 - mmengine - INFO - Epoch:[3/20] Candidate:[13/50] Flops: 453.386 Params: 5.441 Latency: 0.0 Score: 51.43 
2023/10/08 21:13:39 - mmengine - INFO - Epoch:[3/20] Candidate:[14/50] Flops: 459.843 Params: 5.431 Latency: 0.0 Score: 52.32 
2023/10/08 21:14:33 - mmengine - INFO - Epoch:[3/20] Candidate:[15/50] Flops: 461.822 Params: 5.086 Latency: 0.0 Score: 51.74 
2023/10/08 21:15:29 - mmengine - INFO - Epoch:[3/20] Candidate:[16/50] Flops: 452.617 Params: 5.43 Latency: 0.0 Score: 51.96 
2023/10/08 21:16:24 - mmengine - INFO - Epoch:[3/20] Candidate:[17/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:17:22 - mmengine - INFO - Epoch:[3/20] Candidate:[18/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:18:17 - mmengine - INFO - Epoch:[3/20] Candidate:[19/50] Flops: 462.414 Params: 5.969 Latency: 0.0 Score: 50.43 
2023/10/08 21:19:11 - mmengine - INFO - Epoch:[3/20] Candidate:[20/50] Flops: 456.189 Params: 4.667 Latency: 0.0 Score: 52.1 
2023/10/08 21:20:06 - mmengine - INFO - Epoch:[3/20] Candidate:[21/50] Flops: 455.65 Params: 5.813 Latency: 0.0 Score: 52.01 
2023/10/08 21:21:00 - mmengine - INFO - Epoch:[3/20] Candidate:[22/50] Flops: 454.985 Params: 4.661 Latency: 0.0 Score: 51.87 
2023/10/08 21:21:56 - mmengine - INFO - Epoch:[3/20] Candidate:[23/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:22:50 - mmengine - INFO - Epoch:[3/20] Candidate:[24/50] Flops: 455.65 Params: 5.813 Latency: 0.0 Score: 52.01 
2023/10/08 21:23:44 - mmengine - INFO - Epoch:[3/20] Candidate:[25/50] Flops: 405.383 Params: 4.574 Latency: 0.0 Score: 50.27 
2023/10/08 21:24:38 - mmengine - INFO - Epoch:[3/20] Candidate:[26/50] Flops: 409.394 Params: 4.994 Latency: 0.0 Score: 50.61 
2023/10/08 21:25:33 - mmengine - INFO - Epoch:[3/20] Candidate:[27/50] Flops: 450.811 Params: 5.428 Latency: 0.0 Score: 51.85 
2023/10/08 21:26:29 - mmengine - INFO - Epoch:[3/20] Candidate:[28/50] Flops: 423.788 Params: 4.993 Latency: 0.0 Score: 51.65 
2023/10/08 21:27:24 - mmengine - INFO - Epoch:[3/20] Candidate:[29/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 21:28:18 - mmengine - INFO - Epoch:[3/20] Candidate:[30/50] Flops: 427.031 Params: 5.252 Latency: 0.0 Score: 51.58 
2023/10/08 21:29:13 - mmengine - INFO - Epoch:[3/20] Candidate:[31/50] Flops: 439.22 Params: 5.399 Latency: 0.0 Score: 51.98 
2023/10/08 21:30:08 - mmengine - INFO - Epoch:[3/20] Candidate:[32/50] Flops: 434.861 Params: 5.398 Latency: 0.0 Score: 50.44 
2023/10/08 21:31:01 - mmengine - INFO - Epoch:[3/20] Candidate:[33/50] Flops: 419.931 Params: 5.243 Latency: 0.0 Score: 52.36 
2023/10/08 21:31:58 - mmengine - INFO - Epoch:[3/20] Candidate:[34/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:32:52 - mmengine - INFO - Epoch:[3/20] Candidate:[35/50] Flops: 390.829 Params: 5.178 Latency: 0.0 Score: 50.38 
2023/10/08 21:33:50 - mmengine - INFO - Epoch:[3/20] Candidate:[36/50] Flops: 460.247 Params: 5.137 Latency: 0.0 Score: 52.0 
2023/10/08 21:34:47 - mmengine - INFO - Epoch:[3/20] Candidate:[37/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:35:42 - mmengine - INFO - Epoch:[3/20] Candidate:[38/50] Flops: 446.813 Params: 5.126 Latency: 0.0 Score: 50.32 
2023/10/08 21:36:36 - mmengine - INFO - Epoch:[3/20] Candidate:[39/50] Flops: 434.814 Params: 4.978 Latency: 0.0 Score: 52.48 
2023/10/08 21:37:33 - mmengine - INFO - Epoch:[3/20] Candidate:[40/50] Flops: 459.73 Params: 4.974 Latency: 0.0 Score: 52.26 
2023/10/08 21:38:26 - mmengine - INFO - Epoch:[3/20] Candidate:[41/50] Flops: 433.334 Params: 4.551 Latency: 0.0 Score: 51.51 
2023/10/08 21:39:21 - mmengine - INFO - Epoch:[3/20] Candidate:[42/50] Flops: 443.297 Params: 5.03 Latency: 0.0 Score: 50.95 
2023/10/08 21:40:15 - mmengine - INFO - Epoch:[3/20] Candidate:[43/50] Flops: 450.811 Params: 5.428 Latency: 0.0 Score: 51.85 
2023/10/08 21:41:06 - mmengine - INFO - Epoch:[3/20] Candidate:[44/50] Flops: 386.924 Params: 4.505 Latency: 0.0 Score: 50.04 
2023/10/08 21:42:00 - mmengine - INFO - Epoch:[3/20] Candidate:[45/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:42:52 - mmengine - INFO - Epoch:[3/20] Candidate:[46/50] Flops: 427.711 Params: 5.286 Latency: 0.0 Score: 51.15 
2023/10/08 21:43:49 - mmengine - INFO - Epoch:[3/20] Candidate:[47/50] Flops: 442.203 Params: 4.873 Latency: 0.0 Score: 52.54 
2023/10/08 21:44:43 - mmengine - INFO - Epoch:[3/20] Candidate:[48/50] Flops: 447.242 Params: 5.431 Latency: 0.0 Score: 50.73 
2023/10/08 21:45:37 - mmengine - INFO - Epoch:[3/20] Candidate:[49/50] Flops: 454.935 Params: 4.661 Latency: 0.0 Score: 51.81 
2023/10/08 21:46:28 - mmengine - INFO - Epoch:[3/20] Candidate:[50/50] Flops: 421.916 Params: 5.42 Latency: 0.0 Score: 50.64 
2023/10/08 21:46:28 - mmengine - INFO - top k scores before update: [52.6, 52.01, 52.0, 52.0, 51.98, 51.87, 51.85, 51.85, 51.85, 51.81]
2023/10/08 21:46:28 - mmengine - INFO - top k scores after update: [53.15, 52.6, 52.6, 52.54, 52.48, 52.36, 52.32, 52.26, 52.13, 52.1]
2023/10/08 21:46:45 - mmengine - INFO - Epoch:[4/20], top1_score: 53.15
2023/10/08 21:47:42 - mmengine - INFO - Epoch:[4/20] Candidate:[1/50] Flops: 419.931 Params: 5.243 Latency: 0.0 Score: 52.36 
2023/10/08 21:48:36 - mmengine - INFO - Epoch:[4/20] Candidate:[2/50] Flops: 434.814 Params: 4.978 Latency: 0.0 Score: 52.48 
2023/10/08 21:49:30 - mmengine - INFO - Epoch:[4/20] Candidate:[3/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 21:50:26 - mmengine - INFO - Epoch:[4/20] Candidate:[4/50] Flops: 442.203 Params: 4.873 Latency: 0.0 Score: 52.54 
2023/10/08 21:51:21 - mmengine - INFO - Epoch:[4/20] Candidate:[5/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 21:52:14 - mmengine - INFO - Epoch:[4/20] Candidate:[6/50] Flops: 419.931 Params: 5.243 Latency: 0.0 Score: 52.36 
2023/10/08 21:53:09 - mmengine - INFO - Epoch:[4/20] Candidate:[7/50] Flops: 454.985 Params: 4.661 Latency: 0.0 Score: 51.87 
2023/10/08 21:54:06 - mmengine - INFO - Epoch:[4/20] Candidate:[8/50] Flops: 454.938 Params: 5.032 Latency: 0.0 Score: 52.13 
2023/10/08 21:55:03 - mmengine - INFO - Epoch:[4/20] Candidate:[9/50] Flops: 439.935 Params: 4.874 Latency: 0.0 Score: 52.05 
2023/10/08 21:56:00 - mmengine - INFO - Epoch:[4/20] Candidate:[10/50] Flops: 433.3 Params: 4.592 Latency: 0.0 Score: 47.53 
2023/10/08 21:56:54 - mmengine - INFO - Epoch:[4/20] Candidate:[11/50] Flops: 438.596 Params: 5.257 Latency: 0.0 Score: 52.56 
2023/10/08 21:57:52 - mmengine - INFO - Epoch:[4/20] Candidate:[12/50] Flops: 457.77 Params: 4.675 Latency: 0.0 Score: 51.97 
2023/10/08 21:58:47 - mmengine - INFO - Epoch:[4/20] Candidate:[13/50] Flops: 460.344 Params: 5.707 Latency: 0.0 Score: 52.72 
2023/10/08 21:59:44 - mmengine - INFO - Epoch:[4/20] Candidate:[14/50] Flops: 454.938 Params: 5.032 Latency: 0.0 Score: 52.13 
2023/10/08 22:00:38 - mmengine - INFO - Epoch:[4/20] Candidate:[15/50] Flops: 459.843 Params: 5.431 Latency: 0.0 Score: 52.32 
2023/10/08 22:01:32 - mmengine - INFO - Epoch:[4/20] Candidate:[16/50] Flops: 430.022 Params: 4.594 Latency: 0.0 Score: 50.66 
2023/10/08 22:02:25 - mmengine - INFO - Epoch:[4/20] Candidate:[17/50] Flops: 409.083 Params: 4.645 Latency: 0.0 Score: 49.09 
2023/10/08 22:03:20 - mmengine - INFO - Epoch:[4/20] Candidate:[18/50] Flops: 423.333 Params: 5.29 Latency: 0.0 Score: 52.51 
2023/10/08 22:04:12 - mmengine - INFO - Epoch:[4/20] Candidate:[19/50] Flops: 444.846 Params: 5.711 Latency: 0.0 Score: 53.24 
2023/10/08 22:05:04 - mmengine - INFO - Epoch:[4/20] Candidate:[20/50] Flops: 443.316 Params: 5.001 Latency: 0.0 Score: 52.52 
2023/10/08 22:05:55 - mmengine - INFO - Epoch:[4/20] Candidate:[21/50] Flops: 422.408 Params: 4.773 Latency: 0.0 Score: 52.34 
2023/10/08 22:06:49 - mmengine - INFO - Epoch:[4/20] Candidate:[22/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 22:07:41 - mmengine - INFO - Epoch:[4/20] Candidate:[23/50] Flops: 457.883 Params: 5.373 Latency: 0.0 Score: 52.43 
2023/10/08 22:08:38 - mmengine - INFO - Epoch:[4/20] Candidate:[24/50] Flops: 461.348 Params: 5.447 Latency: 0.0 Score: 52.44 
2023/10/08 22:09:32 - mmengine - INFO - Epoch:[4/20] Candidate:[25/50] Flops: 440.534 Params: 4.499 Latency: 0.0 Score: 51.19 
2023/10/08 22:10:29 - mmengine - INFO - Epoch:[4/20] Candidate:[26/50] Flops: 459.73 Params: 4.974 Latency: 0.0 Score: 52.26 
2023/10/08 22:11:24 - mmengine - INFO - Epoch:[4/20] Candidate:[27/50] Flops: 441.547 Params: 5.734 Latency: 0.0 Score: 53.45 
2023/10/08 22:12:22 - mmengine - INFO - Epoch:[4/20] Candidate:[28/50] Flops: 441.516 Params: 4.836 Latency: 0.0 Score: 52.22 
2023/10/08 22:13:18 - mmengine - INFO - Epoch:[4/20] Candidate:[29/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 22:14:12 - mmengine - INFO - Epoch:[4/20] Candidate:[30/50] Flops: 460.435 Params: 5.42 Latency: 0.0 Score: 53.07 
2023/10/08 22:15:04 - mmengine - INFO - Epoch:[4/20] Candidate:[31/50] Flops: 408.547 Params: 4.85 Latency: 0.0 Score: 50.51 
2023/10/08 22:15:59 - mmengine - INFO - Epoch:[4/20] Candidate:[32/50] Flops: 435.056 Params: 4.951 Latency: 0.0 Score: 52.31 
2023/10/08 22:16:53 - mmengine - INFO - Epoch:[4/20] Candidate:[33/50] Flops: 440.462 Params: 5.312 Latency: 0.0 Score: 52.8 
2023/10/08 22:17:46 - mmengine - INFO - Epoch:[4/20] Candidate:[34/50] Flops: 419.931 Params: 5.243 Latency: 0.0 Score: 52.36 
2023/10/08 22:18:40 - mmengine - INFO - Epoch:[4/20] Candidate:[35/50] Flops: 425.384 Params: 4.863 Latency: 0.0 Score: 52.51 
2023/10/08 22:19:36 - mmengine - INFO - Epoch:[4/20] Candidate:[36/50] Flops: 448.396 Params: 5.409 Latency: 0.0 Score: 53.15 
2023/10/08 22:20:32 - mmengine - INFO - Epoch:[4/20] Candidate:[37/50] Flops: 419.931 Params: 5.243 Latency: 0.0 Score: 52.36 
2023/10/08 22:21:28 - mmengine - INFO - Epoch:[4/20] Candidate:[38/50] Flops: 409.541 Params: 4.473 Latency: 0.0 Score: 51.99 
2023/10/08 22:22:24 - mmengine - INFO - Epoch:[4/20] Candidate:[39/50] Flops: 439.757 Params: 5.315 Latency: 0.0 Score: 51.98 
2023/10/08 22:23:19 - mmengine - INFO - Epoch:[4/20] Candidate:[40/50] Flops: 410.582 Params: 4.94 Latency: 0.0 Score: 52.09 
2023/10/08 22:24:17 - mmengine - INFO - Epoch:[4/20] Candidate:[41/50] Flops: 399.042 Params: 4.392 Latency: 0.0 Score: 51.58 
2023/10/08 22:25:10 - mmengine - INFO - Epoch:[4/20] Candidate:[42/50] Flops: 425.732 Params: 5.331 Latency: 0.0 Score: 52.16 
2023/10/08 22:26:08 - mmengine - INFO - Epoch:[4/20] Candidate:[43/50] Flops: 441.98 Params: 4.595 Latency: 0.0 Score: 51.73 
2023/10/08 22:27:01 - mmengine - INFO - Epoch:[4/20] Candidate:[44/50] Flops: 443.611 Params: 5.327 Latency: 0.0 Score: 51.6 
2023/10/08 22:27:59 - mmengine - INFO - Epoch:[4/20] Candidate:[45/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/08 22:28:53 - mmengine - INFO - Epoch:[4/20] Candidate:[46/50] Flops: 429.997 Params: 4.976 Latency: 0.0 Score: 52.17 
2023/10/08 22:29:47 - mmengine - INFO - Epoch:[4/20] Candidate:[47/50] Flops: 459.843 Params: 5.431 Latency: 0.0 Score: 52.32 
2023/10/08 22:30:41 - mmengine - INFO - Epoch:[4/20] Candidate:[48/50] Flops: 431.873 Params: 4.948 Latency: 0.0 Score: 51.16 
2023/10/08 22:31:38 - mmengine - INFO - Epoch:[4/20] Candidate:[49/50] Flops: 456.437 Params: 5.356 Latency: 0.0 Score: 53.32 
2023/10/08 22:32:31 - mmengine - INFO - Epoch:[4/20] Candidate:[50/50] Flops: 403.768 Params: 4.857 Latency: 0.0 Score: 52.07 
2023/10/08 22:32:31 - mmengine - INFO - top k scores before update: [53.15, 52.6, 52.6, 52.54, 52.48, 52.36, 52.32, 52.26, 52.13, 52.1]
2023/10/08 22:32:31 - mmengine - INFO - top k scores after update: [54.02, 53.45, 53.32, 53.24, 53.15, 53.15, 53.07, 52.8, 52.72, 52.6]
2023/10/08 22:32:46 - mmengine - INFO - Epoch:[5/20], top1_score: 54.02
2023/10/08 22:33:41 - mmengine - INFO - Epoch:[5/20] Candidate:[1/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/08 22:34:36 - mmengine - INFO - Epoch:[5/20] Candidate:[2/50] Flops: 444.846 Params: 5.711 Latency: 0.0 Score: 53.24 
2023/10/08 22:35:30 - mmengine - INFO - Epoch:[5/20] Candidate:[3/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 22:36:26 - mmengine - INFO - Epoch:[5/20] Candidate:[4/50] Flops: 461.881 Params: 5.715 Latency: 0.0 Score: 52.29 
2023/10/08 22:37:24 - mmengine - INFO - Epoch:[5/20] Candidate:[5/50] Flops: 445.423 Params: 4.848 Latency: 0.0 Score: 52.21 
2023/10/08 22:38:20 - mmengine - INFO - Epoch:[5/20] Candidate:[6/50] Flops: 413.154 Params: 4.739 Latency: 0.0 Score: 50.53 
2023/10/08 22:39:15 - mmengine - INFO - Epoch:[5/20] Candidate:[7/50] Flops: 436.549 Params: 5.329 Latency: 0.0 Score: 52.45 
2023/10/08 22:40:11 - mmengine - INFO - Epoch:[5/20] Candidate:[8/50] Flops: 426.015 Params: 4.459 Latency: 0.0 Score: 49.42 
2023/10/08 22:41:02 - mmengine - INFO - Epoch:[5/20] Candidate:[9/50] Flops: 460.344 Params: 5.707 Latency: 0.0 Score: 52.72 
2023/10/08 22:41:56 - mmengine - INFO - Epoch:[5/20] Candidate:[10/50] Flops: 407.879 Params: 5.539 Latency: 0.0 Score: 50.46 
2023/10/08 22:42:52 - mmengine - INFO - Epoch:[5/20] Candidate:[11/50] Flops: 453.138 Params: 5.734 Latency: 0.0 Score: 53.04 
2023/10/08 22:43:46 - mmengine - INFO - Epoch:[5/20] Candidate:[12/50] Flops: 449.588 Params: 5.727 Latency: 0.0 Score: 53.21 
2023/10/08 22:44:42 - mmengine - INFO - Epoch:[5/20] Candidate:[13/50] Flops: 460.435 Params: 5.42 Latency: 0.0 Score: 53.07 
2023/10/08 22:45:38 - mmengine - INFO - Epoch:[5/20] Candidate:[14/50] Flops: 441.253 Params: 5.316 Latency: 0.0 Score: 52.89 
2023/10/08 22:46:34 - mmengine - INFO - Epoch:[5/20] Candidate:[15/50] Flops: 464.575 Params: 5.441 Latency: 0.0 Score: 53.13 
2023/10/08 22:47:30 - mmengine - INFO - Epoch:[5/20] Candidate:[16/50] Flops: 460.344 Params: 5.707 Latency: 0.0 Score: 52.72 
2023/10/08 22:48:23 - mmengine - INFO - Epoch:[5/20] Candidate:[17/50] Flops: 445.724 Params: 5.689 Latency: 0.0 Score: 52.65 
2023/10/08 22:49:18 - mmengine - INFO - Epoch:[5/20] Candidate:[18/50] Flops: 459.692 Params: 5.703 Latency: 0.0 Score: 52.97 
2023/10/08 22:50:18 - mmengine - INFO - Epoch:[5/20] Candidate:[19/50] Flops: 464.804 Params: 5.56 Latency: 0.0 Score: 53.35 
2023/10/08 22:51:11 - mmengine - INFO - Epoch:[5/20] Candidate:[20/50] Flops: 427.937 Params: 4.993 Latency: 0.0 Score: 51.91 
2023/10/08 22:52:04 - mmengine - INFO - Epoch:[5/20] Candidate:[21/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 22:52:59 - mmengine - INFO - Epoch:[5/20] Candidate:[22/50] Flops: 456.437 Params: 5.356 Latency: 0.0 Score: 53.32 
2023/10/08 22:53:56 - mmengine - INFO - Epoch:[5/20] Candidate:[23/50] Flops: 457.942 Params: 5.387 Latency: 0.0 Score: 53.48 
2023/10/08 22:54:48 - mmengine - INFO - Epoch:[5/20] Candidate:[24/50] Flops: 460.344 Params: 5.707 Latency: 0.0 Score: 52.72 
2023/10/08 22:55:44 - mmengine - INFO - Epoch:[5/20] Candidate:[25/50] Flops: 448.396 Params: 5.409 Latency: 0.0 Score: 53.15 
2023/10/08 22:56:35 - mmengine - INFO - Epoch:[5/20] Candidate:[26/50] Flops: 432.042 Params: 5.711 Latency: 0.0 Score: 52.65 
2023/10/08 22:57:32 - mmengine - INFO - Epoch:[5/20] Candidate:[27/50] Flops: 460.909 Params: 5.417 Latency: 0.0 Score: 53.07 
2023/10/08 22:58:27 - mmengine - INFO - Epoch:[5/20] Candidate:[28/50] Flops: 444.056 Params: 5.323 Latency: 0.0 Score: 53.01 
2023/10/08 22:59:25 - mmengine - INFO - Epoch:[5/20] Candidate:[29/50] Flops: 464.65 Params: 5.433 Latency: 0.0 Score: 53.26 
2023/10/08 23:00:19 - mmengine - INFO - Epoch:[5/20] Candidate:[30/50] Flops: 439.39 Params: 5.225 Latency: 0.0 Score: 52.55 
2023/10/08 23:01:11 - mmengine - INFO - Epoch:[5/20] Candidate:[31/50] Flops: 445.837 Params: 5.413 Latency: 0.0 Score: 52.9 
2023/10/08 23:02:06 - mmengine - INFO - Epoch:[5/20] Candidate:[32/50] Flops: 419.796 Params: 5.207 Latency: 0.0 Score: 52.41 
2023/10/08 23:03:00 - mmengine - INFO - Epoch:[5/20] Candidate:[33/50] Flops: 445.078 Params: 5.703 Latency: 0.0 Score: 53.47 
2023/10/08 23:03:55 - mmengine - INFO - Epoch:[5/20] Candidate:[34/50] Flops: 432.011 Params: 5.317 Latency: 0.0 Score: 52.67 
2023/10/08 23:04:48 - mmengine - INFO - Epoch:[5/20] Candidate:[35/50] Flops: 428.602 Params: 5.309 Latency: 0.0 Score: 52.66 
2023/10/08 23:05:45 - mmengine - INFO - Epoch:[5/20] Candidate:[36/50] Flops: 449.193 Params: 5.333 Latency: 0.0 Score: 52.9 
2023/10/08 23:06:41 - mmengine - INFO - Epoch:[5/20] Candidate:[37/50] Flops: 444.846 Params: 5.711 Latency: 0.0 Score: 53.24 
2023/10/08 23:07:34 - mmengine - INFO - Epoch:[5/20] Candidate:[38/50] Flops: 460.344 Params: 5.707 Latency: 0.0 Score: 52.72 
2023/10/08 23:08:25 - mmengine - INFO - Epoch:[5/20] Candidate:[39/50] Flops: 440.39 Params: 5.659 Latency: 0.0 Score: 52.97 
2023/10/08 23:09:18 - mmengine - INFO - Epoch:[5/20] Candidate:[40/50] Flops: 444.182 Params: 5.396 Latency: 0.0 Score: 52.95 
2023/10/08 23:10:14 - mmengine - INFO - Epoch:[5/20] Candidate:[41/50] Flops: 445.329 Params: 5.33 Latency: 0.0 Score: 52.81 
2023/10/08 23:11:09 - mmengine - INFO - Epoch:[5/20] Candidate:[42/50] Flops: 444.846 Params: 5.711 Latency: 0.0 Score: 53.24 
2023/10/08 23:12:01 - mmengine - INFO - Epoch:[5/20] Candidate:[43/50] Flops: 392.39 Params: 5.207 Latency: 0.0 Score: 51.83 
2023/10/08 23:12:53 - mmengine - INFO - Epoch:[5/20] Candidate:[44/50] Flops: 441.115 Params: 5.316 Latency: 0.0 Score: 52.72 
2023/10/08 23:13:47 - mmengine - INFO - Epoch:[5/20] Candidate:[45/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 23:14:42 - mmengine - INFO - Epoch:[5/20] Candidate:[46/50] Flops: 424.387 Params: 5.295 Latency: 0.0 Score: 52.6 
2023/10/08 23:15:38 - mmengine - INFO - Epoch:[5/20] Candidate:[47/50] Flops: 420.586 Params: 4.827 Latency: 0.0 Score: 52.16 
2023/10/08 23:16:30 - mmengine - INFO - Epoch:[5/20] Candidate:[48/50] Flops: 396.577 Params: 4.713 Latency: 0.0 Score: 51.43 
2023/10/08 23:17:22 - mmengine - INFO - Epoch:[5/20] Candidate:[49/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/08 23:18:18 - mmengine - INFO - Epoch:[5/20] Candidate:[50/50] Flops: 448.396 Params: 5.409 Latency: 0.0 Score: 53.15 
2023/10/08 23:18:18 - mmengine - INFO - top k scores before update: [54.02, 53.45, 53.32, 53.24, 53.15, 53.15, 53.07, 52.8, 52.72, 52.6]
2023/10/08 23:18:18 - mmengine - INFO - top k scores after update: [54.02, 54.02, 53.72, 53.48, 53.47, 53.45, 53.35, 53.32, 53.32, 53.26]
2023/10/08 23:18:34 - mmengine - INFO - Epoch:[6/20], top1_score: 54.02
2023/10/08 23:19:32 - mmengine - INFO - Epoch:[6/20] Candidate:[1/50] Flops: 437.085 Params: 4.901 Latency: 0.0 Score: 52.12 
2023/10/08 23:20:27 - mmengine - INFO - Epoch:[6/20] Candidate:[2/50] Flops: 446.653 Params: 5.187 Latency: 0.0 Score: 52.39 
2023/10/08 23:21:24 - mmengine - INFO - Epoch:[6/20] Candidate:[3/50] Flops: 464.804 Params: 5.56 Latency: 0.0 Score: 53.35 
2023/10/08 23:22:20 - mmengine - INFO - Epoch:[6/20] Candidate:[4/50] Flops: 429.593 Params: 5.257 Latency: 0.0 Score: 51.75 
2023/10/08 23:23:17 - mmengine - INFO - Epoch:[6/20] Candidate:[5/50] Flops: 449.491 Params: 5.197 Latency: 0.0 Score: 51.13 
2023/10/08 23:24:17 - mmengine - INFO - Epoch:[6/20] Candidate:[6/50] Flops: 452.733 Params: 5.057 Latency: 0.0 Score: 52.65 
2023/10/08 23:25:15 - mmengine - INFO - Epoch:[6/20] Candidate:[7/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/08 23:26:11 - mmengine - INFO - Epoch:[6/20] Candidate:[8/50] Flops: 464.804 Params: 5.56 Latency: 0.0 Score: 53.35 
2023/10/08 23:27:08 - mmengine - INFO - Epoch:[6/20] Candidate:[9/50] Flops: 443.413 Params: 5.319 Latency: 0.0 Score: 53.25 
2023/10/08 23:28:04 - mmengine - INFO - Epoch:[6/20] Candidate:[10/50] Flops: 464.65 Params: 5.433 Latency: 0.0 Score: 53.26 
2023/10/08 23:28:59 - mmengine - INFO - Epoch:[6/20] Candidate:[11/50] Flops: 435.761 Params: 5.616 Latency: 0.0 Score: 52.49 
2023/10/08 23:29:56 - mmengine - INFO - Epoch:[6/20] Candidate:[12/50] Flops: 443.379 Params: 4.547 Latency: 0.0 Score: 49.46 
2023/10/08 23:30:52 - mmengine - INFO - Epoch:[6/20] Candidate:[13/50] Flops: 450.717 Params: 5.336 Latency: 0.0 Score: 52.97 
2023/10/08 23:31:47 - mmengine - INFO - Epoch:[6/20] Candidate:[14/50] Flops: 447.543 Params: 5.548 Latency: 0.0 Score: 51.5 
2023/10/08 23:32:40 - mmengine - INFO - Epoch:[6/20] Candidate:[15/50] Flops: 445.078 Params: 5.703 Latency: 0.0 Score: 53.47 
2023/10/08 23:33:35 - mmengine - INFO - Epoch:[6/20] Candidate:[16/50] Flops: 455.835 Params: 5.344 Latency: 0.0 Score: 53.12 
2023/10/08 23:34:30 - mmengine - INFO - Epoch:[6/20] Candidate:[17/50] Flops: 462.276 Params: 6.093 Latency: 0.0 Score: 53.64 
2023/10/08 23:35:28 - mmengine - INFO - Epoch:[6/20] Candidate:[18/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/08 23:36:21 - mmengine - INFO - Epoch:[6/20] Candidate:[19/50] Flops: 432.98 Params: 5.237 Latency: 0.0 Score: 51.83 
2023/10/08 23:37:12 - mmengine - INFO - Epoch:[6/20] Candidate:[20/50] Flops: 419.909 Params: 5.387 Latency: 0.0 Score: 51.57 
2023/10/08 23:38:09 - mmengine - INFO - Epoch:[6/20] Candidate:[21/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/08 23:39:06 - mmengine - INFO - Epoch:[6/20] Candidate:[22/50] Flops: 457.93 Params: 5.075 Latency: 0.0 Score: 53.12 
2023/10/08 23:40:01 - mmengine - INFO - Epoch:[6/20] Candidate:[23/50] Flops: 425.221 Params: 5.3 Latency: 0.0 Score: 52.9 
2023/10/08 23:40:56 - mmengine - INFO - Epoch:[6/20] Candidate:[24/50] Flops: 418.68 Params: 5.309 Latency: 0.0 Score: 52.69 
2023/10/08 23:41:51 - mmengine - INFO - Epoch:[6/20] Candidate:[25/50] Flops: 461.872 Params: 5.788 Latency: 0.0 Score: 53.44 
2023/10/08 23:42:44 - mmengine - INFO - Epoch:[6/20] Candidate:[26/50] Flops: 463.913 Params: 5.727 Latency: 0.0 Score: 53.39 
2023/10/08 23:43:39 - mmengine - INFO - Epoch:[6/20] Candidate:[27/50] Flops: 440.644 Params: 5.715 Latency: 0.0 Score: 53.29 
2023/10/08 23:44:33 - mmengine - INFO - Epoch:[6/20] Candidate:[28/50] Flops: 424.466 Params: 5.344 Latency: 0.0 Score: 53.03 
2023/10/08 23:45:28 - mmengine - INFO - Epoch:[6/20] Candidate:[29/50] Flops: 456.393 Params: 5.451 Latency: 0.0 Score: 53.66 
2023/10/08 23:46:23 - mmengine - INFO - Epoch:[6/20] Candidate:[30/50] Flops: 451.031 Params: 5.387 Latency: 0.0 Score: 53.78 
2023/10/08 23:47:18 - mmengine - INFO - Epoch:[6/20] Candidate:[31/50] Flops: 458.824 Params: 5.34 Latency: 0.0 Score: 52.27 
2023/10/08 23:48:09 - mmengine - INFO - Epoch:[6/20] Candidate:[32/50] Flops: 443.63 Params: 5.649 Latency: 0.0 Score: 53.36 
2023/10/08 23:49:02 - mmengine - INFO - Epoch:[6/20] Candidate:[33/50] Flops: 421.602 Params: 5.537 Latency: 0.0 Score: 52.55 
2023/10/08 23:49:59 - mmengine - INFO - Epoch:[6/20] Candidate:[34/50] Flops: 450.579 Params: 5.394 Latency: 0.0 Score: 53.62 
2023/10/08 23:50:56 - mmengine - INFO - Epoch:[6/20] Candidate:[35/50] Flops: 456.867 Params: 5.232 Latency: 0.0 Score: 53.0 
2023/10/08 23:51:49 - mmengine - INFO - Epoch:[6/20] Candidate:[36/50] Flops: 460.84 Params: 5.495 Latency: 0.0 Score: 53.38 
2023/10/08 23:52:43 - mmengine - INFO - Epoch:[6/20] Candidate:[37/50] Flops: 439.17 Params: 5.555 Latency: 0.0 Score: 52.97 
2023/10/08 23:53:39 - mmengine - INFO - Epoch:[6/20] Candidate:[38/50] Flops: 439.653 Params: 5.407 Latency: 0.0 Score: 53.64 
2023/10/08 23:54:35 - mmengine - INFO - Epoch:[6/20] Candidate:[39/50] Flops: 436.204 Params: 5.7 Latency: 0.0 Score: 53.14 
2023/10/08 23:55:27 - mmengine - INFO - Epoch:[6/20] Candidate:[40/50] Flops: 456.437 Params: 5.356 Latency: 0.0 Score: 53.32 
2023/10/08 23:56:20 - mmengine - INFO - Epoch:[6/20] Candidate:[41/50] Flops: 453.373 Params: 5.751 Latency: 0.0 Score: 53.39 
2023/10/08 23:57:17 - mmengine - INFO - Epoch:[6/20] Candidate:[42/50] Flops: 456.437 Params: 5.356 Latency: 0.0 Score: 53.32 
2023/10/08 23:58:11 - mmengine - INFO - Epoch:[6/20] Candidate:[43/50] Flops: 456.437 Params: 5.356 Latency: 0.0 Score: 53.32 
2023/10/08 23:59:08 - mmengine - INFO - Epoch:[6/20] Candidate:[44/50] Flops: 448.716 Params: 5.72 Latency: 0.0 Score: 53.35 
2023/10/09 00:00:00 - mmengine - INFO - Epoch:[6/20] Candidate:[45/50] Flops: 434.215 Params: 5.322 Latency: 0.0 Score: 53.18 
2023/10/09 00:00:55 - mmengine - INFO - Epoch:[6/20] Candidate:[46/50] Flops: 437.602 Params: 5.333 Latency: 0.0 Score: 53.26 
2023/10/09 00:01:52 - mmengine - INFO - Epoch:[6/20] Candidate:[47/50] Flops: 453.756 Params: 5.41 Latency: 0.0 Score: 53.39 
2023/10/09 00:02:48 - mmengine - INFO - Epoch:[6/20] Candidate:[48/50] Flops: 445.674 Params: 5.337 Latency: 0.0 Score: 53.54 
2023/10/09 00:03:42 - mmengine - INFO - Epoch:[6/20] Candidate:[49/50] Flops: 460.793 Params: 5.351 Latency: 0.0 Score: 53.21 
2023/10/09 00:04:36 - mmengine - INFO - Epoch:[6/20] Candidate:[50/50] Flops: 443.206 Params: 5.441 Latency: 0.0 Score: 53.27 
2023/10/09 00:04:36 - mmengine - INFO - top k scores before update: [54.02, 54.02, 53.72, 53.48, 53.47, 53.45, 53.35, 53.32, 53.32, 53.26]
2023/10/09 00:04:36 - mmengine - INFO - top k scores after update: [54.03, 54.02, 54.02, 54.02, 53.78, 53.72, 53.72, 53.66, 53.64, 53.64]
2023/10/09 00:04:51 - mmengine - INFO - Epoch:[7/20], top1_score: 54.03
2023/10/09 00:05:46 - mmengine - INFO - Epoch:[7/20] Candidate:[1/50] Flops: 454.038 Params: 5.501 Latency: 0.0 Score: 53.38 
2023/10/09 00:06:40 - mmengine - INFO - Epoch:[7/20] Candidate:[2/50] Flops: 436.793 Params: 5.285 Latency: 0.0 Score: 52.7 
2023/10/09 00:07:31 - mmengine - INFO - Epoch:[7/20] Candidate:[3/50] Flops: 399.318 Params: 5.481 Latency: 0.0 Score: 49.09 
2023/10/09 00:08:24 - mmengine - INFO - Epoch:[7/20] Candidate:[4/50] Flops: 449.45 Params: 5.379 Latency: 0.0 Score: 53.74 
2023/10/09 00:09:21 - mmengine - INFO - Epoch:[7/20] Candidate:[5/50] Flops: 454.038 Params: 5.432 Latency: 0.0 Score: 52.74 
2023/10/09 00:10:17 - mmengine - INFO - Epoch:[7/20] Candidate:[6/50] Flops: 460.677 Params: 5.742 Latency: 0.0 Score: 53.58 
2023/10/09 00:11:13 - mmengine - INFO - Epoch:[7/20] Candidate:[7/50] Flops: 438.524 Params: 5.119 Latency: 0.0 Score: 50.93 
2023/10/09 00:12:11 - mmengine - INFO - Epoch:[7/20] Candidate:[8/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:13:04 - mmengine - INFO - Epoch:[7/20] Candidate:[9/50] Flops: 449.224 Params: 5.378 Latency: 0.0 Score: 53.81 
2023/10/09 00:14:01 - mmengine - INFO - Epoch:[7/20] Candidate:[10/50] Flops: 448.393 Params: 5.192 Latency: 0.0 Score: 50.76 
2023/10/09 00:14:55 - mmengine - INFO - Epoch:[7/20] Candidate:[11/50] Flops: 460.47 Params: 6.084 Latency: 0.0 Score: 53.57 
2023/10/09 00:15:49 - mmengine - INFO - Epoch:[7/20] Candidate:[12/50] Flops: 387.558 Params: 4.766 Latency: 0.0 Score: 50.87 
2023/10/09 00:16:45 - mmengine - INFO - Epoch:[7/20] Candidate:[13/50] Flops: 432.139 Params: 4.811 Latency: 0.0 Score: 52.68 
2023/10/09 00:17:42 - mmengine - INFO - Epoch:[7/20] Candidate:[14/50] Flops: 446.596 Params: 5.399 Latency: 0.0 Score: 53.48 
2023/10/09 00:18:37 - mmengine - INFO - Epoch:[7/20] Candidate:[15/50] Flops: 439.791 Params: 4.988 Latency: 0.0 Score: 52.39 
2023/10/09 00:19:33 - mmengine - INFO - Epoch:[7/20] Candidate:[16/50] Flops: 443.435 Params: 5.383 Latency: 0.0 Score: 53.25 
2023/10/09 00:20:30 - mmengine - INFO - Epoch:[7/20] Candidate:[17/50] Flops: 447.343 Params: 5.368 Latency: 0.0 Score: 53.49 
2023/10/09 00:21:28 - mmengine - INFO - Epoch:[7/20] Candidate:[18/50] Flops: 431.914 Params: 4.819 Latency: 0.0 Score: 52.94 
2023/10/09 00:22:25 - mmengine - INFO - Epoch:[7/20] Candidate:[19/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/09 00:23:22 - mmengine - INFO - Epoch:[7/20] Candidate:[20/50] Flops: 448.998 Params: 4.841 Latency: 0.0 Score: 52.81 
2023/10/09 00:24:20 - mmengine - INFO - Epoch:[7/20] Candidate:[21/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:25:14 - mmengine - INFO - Epoch:[7/20] Candidate:[22/50] Flops: 411.693 Params: 4.838 Latency: 0.0 Score: 52.57 
2023/10/09 00:26:09 - mmengine - INFO - Epoch:[7/20] Candidate:[23/50] Flops: 439.653 Params: 5.407 Latency: 0.0 Score: 53.64 
2023/10/09 00:27:04 - mmengine - INFO - Epoch:[7/20] Candidate:[24/50] Flops: 458.337 Params: 5.675 Latency: 0.0 Score: 53.48 
2023/10/09 00:28:00 - mmengine - INFO - Epoch:[7/20] Candidate:[25/50] Flops: 454.154 Params: 4.506 Latency: 0.0 Score: 49.86 
2023/10/09 00:28:57 - mmengine - INFO - Epoch:[7/20] Candidate:[26/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/09 00:29:52 - mmengine - INFO - Epoch:[7/20] Candidate:[27/50] Flops: 461.831 Params: 5.412 Latency: 0.0 Score: 53.81 
2023/10/09 00:30:49 - mmengine - INFO - Epoch:[7/20] Candidate:[28/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:31:43 - mmengine - INFO - Epoch:[7/20] Candidate:[29/50] Flops: 439.653 Params: 5.407 Latency: 0.0 Score: 53.64 
2023/10/09 00:32:39 - mmengine - INFO - Epoch:[7/20] Candidate:[30/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:33:34 - mmengine - INFO - Epoch:[7/20] Candidate:[31/50] Flops: 461.831 Params: 5.412 Latency: 0.0 Score: 53.81 
2023/10/09 00:34:28 - mmengine - INFO - Epoch:[7/20] Candidate:[32/50] Flops: 441.158 Params: 5.438 Latency: 0.0 Score: 53.51 
2023/10/09 00:35:21 - mmengine - INFO - Epoch:[7/20] Candidate:[33/50] Flops: 456.468 Params: 5.428 Latency: 0.0 Score: 53.93 
2023/10/09 00:36:18 - mmengine - INFO - Epoch:[7/20] Candidate:[34/50] Flops: 449.45 Params: 5.379 Latency: 0.0 Score: 53.73 
2023/10/09 00:37:13 - mmengine - INFO - Epoch:[7/20] Candidate:[35/50] Flops: 449.45 Params: 5.379 Latency: 0.0 Score: 53.74 
2023/10/09 00:38:11 - mmengine - INFO - Epoch:[7/20] Candidate:[36/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:39:04 - mmengine - INFO - Epoch:[7/20] Candidate:[37/50] Flops: 461.831 Params: 5.412 Latency: 0.0 Score: 53.99 
2023/10/09 00:39:59 - mmengine - INFO - Epoch:[7/20] Candidate:[38/50] Flops: 439.427 Params: 5.413 Latency: 0.0 Score: 53.55 
2023/10/09 00:40:56 - mmengine - INFO - Epoch:[7/20] Candidate:[39/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:41:53 - mmengine - INFO - Epoch:[7/20] Candidate:[40/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:42:48 - mmengine - INFO - Epoch:[7/20] Candidate:[41/50] Flops: 439.427 Params: 5.413 Latency: 0.0 Score: 53.55 
2023/10/09 00:43:43 - mmengine - INFO - Epoch:[7/20] Candidate:[42/50] Flops: 456.468 Params: 5.428 Latency: 0.0 Score: 53.93 
2023/10/09 00:44:40 - mmengine - INFO - Epoch:[7/20] Candidate:[43/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:45:35 - mmengine - INFO - Epoch:[7/20] Candidate:[44/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/09 00:46:33 - mmengine - INFO - Epoch:[7/20] Candidate:[45/50] Flops: 461.831 Params: 5.412 Latency: 0.0 Score: 53.99 
2023/10/09 00:47:29 - mmengine - INFO - Epoch:[7/20] Candidate:[46/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:48:24 - mmengine - INFO - Epoch:[7/20] Candidate:[47/50] Flops: 461.831 Params: 5.412 Latency: 0.0 Score: 53.99 
2023/10/09 00:49:17 - mmengine - INFO - Epoch:[7/20] Candidate:[48/50] Flops: 457.974 Params: 5.459 Latency: 0.0 Score: 53.89 
2023/10/09 00:50:12 - mmengine - INFO - Epoch:[7/20] Candidate:[49/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/09 00:51:10 - mmengine - INFO - Epoch:[7/20] Candidate:[50/50] Flops: 460.25 Params: 5.404 Latency: 0.0 Score: 53.72 
2023/10/09 00:51:10 - mmengine - INFO - top k scores before update: [54.03, 54.02, 54.02, 54.02, 53.78, 53.72, 53.72, 53.66, 53.64, 53.64]
2023/10/09 00:51:10 - mmengine - INFO - top k scores after update: [54.03, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02]
2023/10/09 00:51:30 - mmengine - INFO - Epoch:[8/20], top1_score: 54.03
2023/10/09 00:52:29 - mmengine - INFO - Epoch:[8/20] Candidate:[1/50] Flops: 445.963 Params: 5.02 Latency: 0.0 Score: 53.0 
2023/10/09 00:53:25 - mmengine - INFO - Epoch:[8/20] Candidate:[2/50] Flops: 445.198 Params: 5.228 Latency: 0.0 Score: 53.13 
2023/10/09 00:54:23 - mmengine - INFO - Epoch:[8/20] Candidate:[3/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 00:55:20 - mmengine - INFO - Epoch:[8/20] Candidate:[4/50] Flops: 448.973 Params: 5.01 Latency: 0.0 Score: 53.09 
2023/10/09 00:56:16 - mmengine - INFO - Epoch:[8/20] Candidate:[5/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 00:57:11 - mmengine - INFO - Epoch:[8/20] Candidate:[6/50] Flops: 451.821 Params: 5.391 Latency: 0.0 Score: 53.97 
2023/10/09 00:58:08 - mmengine - INFO - Epoch:[8/20] Candidate:[7/50] Flops: 451.203 Params: 5.58 Latency: 0.0 Score: 52.95 
2023/10/09 00:59:03 - mmengine - INFO - Epoch:[8/20] Candidate:[8/50] Flops: 462.358 Params: 5.415 Latency: 0.0 Score: 53.87 
2023/10/09 01:00:02 - mmengine - INFO - Epoch:[8/20] Candidate:[9/50] Flops: 464.421 Params: 5.258 Latency: 0.0 Score: 53.45 
2023/10/09 01:00:58 - mmengine - INFO - Epoch:[8/20] Candidate:[10/50] Flops: 436.956 Params: 4.882 Latency: 0.0 Score: 53.35 
2023/10/09 01:01:53 - mmengine - INFO - Epoch:[8/20] Candidate:[11/50] Flops: 442.908 Params: 5.388 Latency: 0.0 Score: 53.23 
2023/10/09 01:02:47 - mmengine - INFO - Epoch:[8/20] Candidate:[12/50] Flops: 418.636 Params: 4.83 Latency: 0.0 Score: 52.63 
2023/10/09 01:03:43 - mmengine - INFO - Epoch:[8/20] Candidate:[13/50] Flops: 457.102 Params: 4.961 Latency: 0.0 Score: 53.4 
2023/10/09 01:04:37 - mmengine - INFO - Epoch:[8/20] Candidate:[14/50] Flops: 455.092 Params: 5.437 Latency: 0.0 Score: 52.69 
2023/10/09 01:05:36 - mmengine - INFO - Epoch:[8/20] Candidate:[15/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:06:28 - mmengine - INFO - Epoch:[8/20] Candidate:[16/50] Flops: 431.5 Params: 5.416 Latency: 0.0 Score: 51.61 
2023/10/09 01:07:24 - mmengine - INFO - Epoch:[8/20] Candidate:[17/50] Flops: 447.154 Params: 5.24 Latency: 0.0 Score: 53.27 
2023/10/09 01:08:21 - mmengine - INFO - Epoch:[8/20] Candidate:[18/50] Flops: 456.036 Params: 5.242 Latency: 0.0 Score: 53.26 
2023/10/09 01:09:16 - mmengine - INFO - Epoch:[8/20] Candidate:[19/50] Flops: 449.224 Params: 5.378 Latency: 0.0 Score: 53.81 
2023/10/09 01:10:08 - mmengine - INFO - Epoch:[8/20] Candidate:[20/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:11:06 - mmengine - INFO - Epoch:[8/20] Candidate:[21/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:12:04 - mmengine - INFO - Epoch:[8/20] Candidate:[22/50] Flops: 461.304 Params: 5.418 Latency: 0.0 Score: 53.74 
2023/10/09 01:12:59 - mmengine - INFO - Epoch:[8/20] Candidate:[23/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:13:56 - mmengine - INFO - Epoch:[8/20] Candidate:[24/50] Flops: 451.821 Params: 5.391 Latency: 0.0 Score: 53.97 
2023/10/09 01:14:52 - mmengine - INFO - Epoch:[8/20] Candidate:[25/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:15:49 - mmengine - INFO - Epoch:[8/20] Candidate:[26/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:16:44 - mmengine - INFO - Epoch:[8/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:17:40 - mmengine - INFO - Epoch:[8/20] Candidate:[28/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:18:34 - mmengine - INFO - Epoch:[8/20] Candidate:[29/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:19:30 - mmengine - INFO - Epoch:[8/20] Candidate:[30/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:20:26 - mmengine - INFO - Epoch:[8/20] Candidate:[31/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:21:21 - mmengine - INFO - Epoch:[8/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:22:14 - mmengine - INFO - Epoch:[8/20] Candidate:[33/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:23:09 - mmengine - INFO - Epoch:[8/20] Candidate:[34/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:24:04 - mmengine - INFO - Epoch:[8/20] Candidate:[35/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:25:02 - mmengine - INFO - Epoch:[8/20] Candidate:[36/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:25:57 - mmengine - INFO - Epoch:[8/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:26:54 - mmengine - INFO - Epoch:[8/20] Candidate:[38/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:27:49 - mmengine - INFO - Epoch:[8/20] Candidate:[39/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:28:46 - mmengine - INFO - Epoch:[8/20] Candidate:[40/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:29:42 - mmengine - INFO - Epoch:[8/20] Candidate:[41/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:30:40 - mmengine - INFO - Epoch:[8/20] Candidate:[42/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:31:37 - mmengine - INFO - Epoch:[8/20] Candidate:[43/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:32:33 - mmengine - INFO - Epoch:[8/20] Candidate:[44/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:33:28 - mmengine - INFO - Epoch:[8/20] Candidate:[45/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:34:22 - mmengine - INFO - Epoch:[8/20] Candidate:[46/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:35:20 - mmengine - INFO - Epoch:[8/20] Candidate:[47/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:36:15 - mmengine - INFO - Epoch:[8/20] Candidate:[48/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:37:09 - mmengine - INFO - Epoch:[8/20] Candidate:[49/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:38:07 - mmengine - INFO - Epoch:[8/20] Candidate:[50/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:38:07 - mmengine - INFO - top k scores before update: [54.03, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02, 54.02]
2023/10/09 01:38:07 - mmengine - INFO - top k scores after update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.02, 54.02, 54.02, 54.02]
2023/10/09 01:38:25 - mmengine - INFO - Epoch:[9/20], top1_score: 54.03
2023/10/09 01:39:22 - mmengine - INFO - Epoch:[9/20] Candidate:[1/50] Flops: 454.424 Params: 5.127 Latency: 0.0 Score: 50.78 
2023/10/09 01:40:17 - mmengine - INFO - Epoch:[9/20] Candidate:[2/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:41:12 - mmengine - INFO - Epoch:[9/20] Candidate:[3/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:42:05 - mmengine - INFO - Epoch:[9/20] Candidate:[4/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:43:01 - mmengine - INFO - Epoch:[9/20] Candidate:[5/50] Flops: 447.957 Params: 5.411 Latency: 0.0 Score: 53.19 
2023/10/09 01:43:57 - mmengine - INFO - Epoch:[9/20] Candidate:[6/50] Flops: 395.649 Params: 4.374 Latency: 0.0 Score: 48.59 
2023/10/09 01:44:55 - mmengine - INFO - Epoch:[9/20] Candidate:[7/50] Flops: 441.146 Params: 4.995 Latency: 0.0 Score: 52.74 
2023/10/09 01:45:50 - mmengine - INFO - Epoch:[9/20] Candidate:[8/50] Flops: 446.794 Params: 5.336 Latency: 0.0 Score: 53.44 
2023/10/09 01:46:42 - mmengine - INFO - Epoch:[9/20] Candidate:[9/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:47:38 - mmengine - INFO - Epoch:[9/20] Candidate:[10/50] Flops: 427.674 Params: 5.375 Latency: 0.0 Score: 52.46 
2023/10/09 01:48:34 - mmengine - INFO - Epoch:[9/20] Candidate:[11/50] Flops: 439.954 Params: 5.301 Latency: 0.0 Score: 52.91 
2023/10/09 01:49:30 - mmengine - INFO - Epoch:[9/20] Candidate:[12/50] Flops: 462.358 Params: 5.415 Latency: 0.0 Score: 53.87 
2023/10/09 01:50:27 - mmengine - INFO - Epoch:[9/20] Candidate:[13/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:51:24 - mmengine - INFO - Epoch:[9/20] Candidate:[14/50] Flops: 462.358 Params: 5.415 Latency: 0.0 Score: 53.87 
2023/10/09 01:52:16 - mmengine - INFO - Epoch:[9/20] Candidate:[15/50] Flops: 413.076 Params: 5.323 Latency: 0.0 Score: 51.16 
2023/10/09 01:53:10 - mmengine - INFO - Epoch:[9/20] Candidate:[16/50] Flops: 403.037 Params: 4.521 Latency: 0.0 Score: 49.76 
2023/10/09 01:54:07 - mmengine - INFO - Epoch:[9/20] Candidate:[17/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:55:00 - mmengine - INFO - Epoch:[9/20] Candidate:[18/50] Flops: 431.6 Params: 5.401 Latency: 0.0 Score: 52.82 
2023/10/09 01:55:53 - mmengine - INFO - Epoch:[9/20] Candidate:[19/50] Flops: 436.956 Params: 4.882 Latency: 0.0 Score: 53.35 
2023/10/09 01:56:46 - mmengine - INFO - Epoch:[9/20] Candidate:[20/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 01:57:39 - mmengine - INFO - Epoch:[9/20] Candidate:[21/50] Flops: 431.5 Params: 5.416 Latency: 0.0 Score: 51.61 
2023/10/09 01:58:35 - mmengine - INFO - Epoch:[9/20] Candidate:[22/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 01:59:32 - mmengine - INFO - Epoch:[9/20] Candidate:[23/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:00:27 - mmengine - INFO - Epoch:[9/20] Candidate:[24/50] Flops: 458.595 Params: 5.419 Latency: 0.0 Score: 53.75 
2023/10/09 02:01:23 - mmengine - INFO - Epoch:[9/20] Candidate:[25/50] Flops: 445.198 Params: 5.228 Latency: 0.0 Score: 53.13 
2023/10/09 02:02:20 - mmengine - INFO - Epoch:[9/20] Candidate:[26/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:03:17 - mmengine - INFO - Epoch:[9/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:04:13 - mmengine - INFO - Epoch:[9/20] Candidate:[28/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:05:09 - mmengine - INFO - Epoch:[9/20] Candidate:[29/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:06:06 - mmengine - INFO - Epoch:[9/20] Candidate:[30/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:07:03 - mmengine - INFO - Epoch:[9/20] Candidate:[31/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:07:58 - mmengine - INFO - Epoch:[9/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:08:54 - mmengine - INFO - Epoch:[9/20] Candidate:[33/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:09:52 - mmengine - INFO - Epoch:[9/20] Candidate:[34/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:10:48 - mmengine - INFO - Epoch:[9/20] Candidate:[35/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:11:42 - mmengine - INFO - Epoch:[9/20] Candidate:[36/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:12:37 - mmengine - INFO - Epoch:[9/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:13:32 - mmengine - INFO - Epoch:[9/20] Candidate:[38/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:14:27 - mmengine - INFO - Epoch:[9/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:15:25 - mmengine - INFO - Epoch:[9/20] Candidate:[40/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:16:20 - mmengine - INFO - Epoch:[9/20] Candidate:[41/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:17:17 - mmengine - INFO - Epoch:[9/20] Candidate:[42/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:18:12 - mmengine - INFO - Epoch:[9/20] Candidate:[43/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:19:06 - mmengine - INFO - Epoch:[9/20] Candidate:[44/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:20:02 - mmengine - INFO - Epoch:[9/20] Candidate:[45/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:20:59 - mmengine - INFO - Epoch:[9/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:21:56 - mmengine - INFO - Epoch:[9/20] Candidate:[47/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:22:52 - mmengine - INFO - Epoch:[9/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:23:47 - mmengine - INFO - Epoch:[9/20] Candidate:[49/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 02:24:43 - mmengine - INFO - Epoch:[9/20] Candidate:[50/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:24:43 - mmengine - INFO - top k scores before update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.02, 54.02, 54.02, 54.02]
2023/10/09 02:24:43 - mmengine - INFO - top k scores after update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 02:25:02 - mmengine - INFO - Epoch:[10/20], top1_score: 54.03
2023/10/09 02:25:59 - mmengine - INFO - Epoch:[10/20] Candidate:[1/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:26:55 - mmengine - INFO - Epoch:[10/20] Candidate:[2/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:27:49 - mmengine - INFO - Epoch:[10/20] Candidate:[3/50] Flops: 460.401 Params: 5.41 Latency: 0.0 Score: 53.93 
2023/10/09 02:28:44 - mmengine - INFO - Epoch:[10/20] Candidate:[4/50] Flops: 452.661 Params: 5.806 Latency: 0.0 Score: 53.34 
2023/10/09 02:29:39 - mmengine - INFO - Epoch:[10/20] Candidate:[5/50] Flops: 460.094 Params: 4.858 Latency: 0.0 Score: 53.36 
2023/10/09 02:30:36 - mmengine - INFO - Epoch:[10/20] Candidate:[6/50] Flops: 442.134 Params: 5.312 Latency: 0.0 Score: 53.22 
2023/10/09 02:31:32 - mmengine - INFO - Epoch:[10/20] Candidate:[7/50] Flops: 418.15 Params: 4.449 Latency: 0.0 Score: 49.08 
2023/10/09 02:32:29 - mmengine - INFO - Epoch:[10/20] Candidate:[8/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.87 
2023/10/09 02:33:27 - mmengine - INFO - Epoch:[10/20] Candidate:[9/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:34:24 - mmengine - INFO - Epoch:[10/20] Candidate:[10/50] Flops: 435.912 Params: 4.742 Latency: 0.0 Score: 52.19 
2023/10/09 02:35:19 - mmengine - INFO - Epoch:[10/20] Candidate:[11/50] Flops: 461.906 Params: 5.377 Latency: 0.0 Score: 53.65 
2023/10/09 02:36:16 - mmengine - INFO - Epoch:[10/20] Candidate:[12/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:37:13 - mmengine - INFO - Epoch:[10/20] Candidate:[13/50] Flops: 459.498 Params: 5.408 Latency: 0.0 Score: 53.76 
2023/10/09 02:38:11 - mmengine - INFO - Epoch:[10/20] Candidate:[14/50] Flops: 459.799 Params: 5.374 Latency: 0.0 Score: 53.48 
2023/10/09 02:39:08 - mmengine - INFO - Epoch:[10/20] Candidate:[15/50] Flops: 446.803 Params: 5.216 Latency: 0.0 Score: 51.82 
2023/10/09 02:40:01 - mmengine - INFO - Epoch:[10/20] Candidate:[16/50] Flops: 430.496 Params: 5.234 Latency: 0.0 Score: 52.5 
2023/10/09 02:40:58 - mmengine - INFO - Epoch:[10/20] Candidate:[17/50] Flops: 409.598 Params: 4.353 Latency: 0.0 Score: 48.76 
2023/10/09 02:41:55 - mmengine - INFO - Epoch:[10/20] Candidate:[18/50] Flops: 432.139 Params: 4.811 Latency: 0.0 Score: 52.7 
2023/10/09 02:42:47 - mmengine - INFO - Epoch:[10/20] Candidate:[19/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:43:41 - mmengine - INFO - Epoch:[10/20] Candidate:[20/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:44:34 - mmengine - INFO - Epoch:[10/20] Candidate:[21/50] Flops: 458.971 Params: 5.398 Latency: 0.0 Score: 53.79 
2023/10/09 02:45:31 - mmengine - INFO - Epoch:[10/20] Candidate:[22/50] Flops: 459.498 Params: 5.408 Latency: 0.0 Score: 53.76 
2023/10/09 02:46:27 - mmengine - INFO - Epoch:[10/20] Candidate:[23/50] Flops: 452.219 Params: 5.321 Latency: 0.0 Score: 53.6 
2023/10/09 02:47:22 - mmengine - INFO - Epoch:[10/20] Candidate:[24/50] Flops: 442.683 Params: 5.387 Latency: 0.0 Score: 53.31 
2023/10/09 02:48:19 - mmengine - INFO - Epoch:[10/20] Candidate:[25/50] Flops: 461.906 Params: 5.377 Latency: 0.0 Score: 53.65 
2023/10/09 02:49:14 - mmengine - INFO - Epoch:[10/20] Candidate:[26/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:50:10 - mmengine - INFO - Epoch:[10/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:51:07 - mmengine - INFO - Epoch:[10/20] Candidate:[28/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:52:03 - mmengine - INFO - Epoch:[10/20] Candidate:[29/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:52:58 - mmengine - INFO - Epoch:[10/20] Candidate:[30/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:53:55 - mmengine - INFO - Epoch:[10/20] Candidate:[31/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:54:53 - mmengine - INFO - Epoch:[10/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:55:51 - mmengine - INFO - Epoch:[10/20] Candidate:[33/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:56:48 - mmengine - INFO - Epoch:[10/20] Candidate:[34/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:57:46 - mmengine - INFO - Epoch:[10/20] Candidate:[35/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:58:40 - mmengine - INFO - Epoch:[10/20] Candidate:[36/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 02:59:36 - mmengine - INFO - Epoch:[10/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:00:32 - mmengine - INFO - Epoch:[10/20] Candidate:[38/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:01:26 - mmengine - INFO - Epoch:[10/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:02:21 - mmengine - INFO - Epoch:[10/20] Candidate:[40/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:03:18 - mmengine - INFO - Epoch:[10/20] Candidate:[41/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:04:14 - mmengine - INFO - Epoch:[10/20] Candidate:[42/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:05:10 - mmengine - INFO - Epoch:[10/20] Candidate:[43/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:06:07 - mmengine - INFO - Epoch:[10/20] Candidate:[44/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:07:02 - mmengine - INFO - Epoch:[10/20] Candidate:[45/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:07:55 - mmengine - INFO - Epoch:[10/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:08:51 - mmengine - INFO - Epoch:[10/20] Candidate:[47/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:09:44 - mmengine - INFO - Epoch:[10/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:10:42 - mmengine - INFO - Epoch:[10/20] Candidate:[49/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:11:35 - mmengine - INFO - Epoch:[10/20] Candidate:[50/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:11:35 - mmengine - INFO - top k scores before update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 03:11:35 - mmengine - INFO - top k scores after update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 03:11:50 - mmengine - INFO - Epoch:[11/20], top1_score: 54.03
2023/10/09 03:12:46 - mmengine - INFO - Epoch:[11/20] Candidate:[1/50] Flops: 458.971 Params: 5.398 Latency: 0.0 Score: 53.86 
2023/10/09 03:13:39 - mmengine - INFO - Epoch:[11/20] Candidate:[2/50] Flops: 416.397 Params: 5.219 Latency: 0.0 Score: 52.01 
2023/10/09 03:14:37 - mmengine - INFO - Epoch:[11/20] Candidate:[3/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 03:15:33 - mmengine - INFO - Epoch:[11/20] Candidate:[4/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:16:28 - mmengine - INFO - Epoch:[11/20] Candidate:[5/50] Flops: 445.95 Params: 5.243 Latency: 0.0 Score: 53.27 
2023/10/09 03:17:23 - mmengine - INFO - Epoch:[11/20] Candidate:[6/50] Flops: 462.207 Params: 5.423 Latency: 0.0 Score: 53.95 
2023/10/09 03:18:20 - mmengine - INFO - Epoch:[11/20] Candidate:[7/50] Flops: 444.79 Params: 5.39 Latency: 0.0 Score: 53.47 
2023/10/09 03:19:15 - mmengine - INFO - Epoch:[11/20] Candidate:[8/50] Flops: 450.356 Params: 5.304 Latency: 0.0 Score: 53.15 
2023/10/09 03:20:10 - mmengine - INFO - Epoch:[11/20] Candidate:[9/50] Flops: 425.522 Params: 5.205 Latency: 0.0 Score: 52.39 
2023/10/09 03:21:05 - mmengine - INFO - Epoch:[11/20] Candidate:[10/50] Flops: 445.95 Params: 5.243 Latency: 0.0 Score: 53.27 
2023/10/09 03:21:57 - mmengine - INFO - Epoch:[11/20] Candidate:[11/50] Flops: 460.736 Params: 5.509 Latency: 0.0 Score: 53.5 
2023/10/09 03:22:54 - mmengine - INFO - Epoch:[11/20] Candidate:[12/50] Flops: 463.788 Params: 5.399 Latency: 0.0 Score: 53.77 
2023/10/09 03:23:51 - mmengine - INFO - Epoch:[11/20] Candidate:[13/50] Flops: 432.139 Params: 4.811 Latency: 0.0 Score: 52.7 
2023/10/09 03:24:45 - mmengine - INFO - Epoch:[11/20] Candidate:[14/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:25:42 - mmengine - INFO - Epoch:[11/20] Candidate:[15/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:26:34 - mmengine - INFO - Epoch:[11/20] Candidate:[16/50] Flops: 400.227 Params: 4.807 Latency: 0.0 Score: 50.3 
2023/10/09 03:27:30 - mmengine - INFO - Epoch:[11/20] Candidate:[17/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:28:23 - mmengine - INFO - Epoch:[11/20] Candidate:[18/50] Flops: 464.7 Params: 5.456 Latency: 0.0 Score: 53.85 
2023/10/09 03:29:18 - mmengine - INFO - Epoch:[11/20] Candidate:[19/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:30:14 - mmengine - INFO - Epoch:[11/20] Candidate:[20/50] Flops: 459.799 Params: 5.374 Latency: 0.0 Score: 53.48 
2023/10/09 03:31:11 - mmengine - INFO - Epoch:[11/20] Candidate:[21/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:32:04 - mmengine - INFO - Epoch:[11/20] Candidate:[22/50] Flops: 463.236 Params: 5.449 Latency: 0.0 Score: 51.87 
2023/10/09 03:33:00 - mmengine - INFO - Epoch:[11/20] Candidate:[23/50] Flops: 425.789 Params: 4.458 Latency: 0.0 Score: 49.34 
2023/10/09 03:33:56 - mmengine - INFO - Epoch:[11/20] Candidate:[24/50] Flops: 456.788 Params: 5.41 Latency: 0.0 Score: 53.79 
2023/10/09 03:34:51 - mmengine - INFO - Epoch:[11/20] Candidate:[25/50] Flops: 464.111 Params: 5.424 Latency: 0.0 Score: 53.58 
2023/10/09 03:35:44 - mmengine - INFO - Epoch:[11/20] Candidate:[26/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:36:38 - mmengine - INFO - Epoch:[11/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:37:34 - mmengine - INFO - Epoch:[11/20] Candidate:[28/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:38:30 - mmengine - INFO - Epoch:[11/20] Candidate:[29/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:39:28 - mmengine - INFO - Epoch:[11/20] Candidate:[30/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:40:23 - mmengine - INFO - Epoch:[11/20] Candidate:[31/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:41:18 - mmengine - INFO - Epoch:[11/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:42:14 - mmengine - INFO - Epoch:[11/20] Candidate:[33/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:43:07 - mmengine - INFO - Epoch:[11/20] Candidate:[34/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:44:03 - mmengine - INFO - Epoch:[11/20] Candidate:[35/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:44:59 - mmengine - INFO - Epoch:[11/20] Candidate:[36/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:45:54 - mmengine - INFO - Epoch:[11/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:46:52 - mmengine - INFO - Epoch:[11/20] Candidate:[38/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:47:49 - mmengine - INFO - Epoch:[11/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:48:45 - mmengine - INFO - Epoch:[11/20] Candidate:[40/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:49:42 - mmengine - INFO - Epoch:[11/20] Candidate:[41/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:50:38 - mmengine - INFO - Epoch:[11/20] Candidate:[42/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:51:34 - mmengine - INFO - Epoch:[11/20] Candidate:[43/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:52:30 - mmengine - INFO - Epoch:[11/20] Candidate:[44/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:53:25 - mmengine - INFO - Epoch:[11/20] Candidate:[45/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:54:21 - mmengine - INFO - Epoch:[11/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:55:15 - mmengine - INFO - Epoch:[11/20] Candidate:[47/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:56:12 - mmengine - INFO - Epoch:[11/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:57:06 - mmengine - INFO - Epoch:[11/20] Candidate:[49/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:58:02 - mmengine - INFO - Epoch:[11/20] Candidate:[50/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 03:58:02 - mmengine - INFO - top k scores before update: [54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 03:58:02 - mmengine - INFO - top k scores after update: [54.04, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 03:58:17 - mmengine - INFO - Epoch:[12/20], top1_score: 54.04
2023/10/09 03:59:14 - mmengine - INFO - Epoch:[12/20] Candidate:[1/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:00:11 - mmengine - INFO - Epoch:[12/20] Candidate:[2/50] Flops: 461.856 Params: 5.359 Latency: 0.0 Score: 52.8 
2023/10/09 04:01:07 - mmengine - INFO - Epoch:[12/20] Candidate:[3/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:02:04 - mmengine - INFO - Epoch:[12/20] Candidate:[4/50] Flops: 459.52 Params: 5.473 Latency: 0.0 Score: 53.54 
2023/10/09 04:02:58 - mmengine - INFO - Epoch:[12/20] Candidate:[5/50] Flops: 432.202 Params: 5.39 Latency: 0.0 Score: 52.69 
2023/10/09 04:03:55 - mmengine - INFO - Epoch:[12/20] Candidate:[6/50] Flops: 444.564 Params: 5.367 Latency: 0.0 Score: 53.26 
2023/10/09 04:04:52 - mmengine - INFO - Epoch:[12/20] Candidate:[7/50] Flops: 446.151 Params: 5.402 Latency: 0.0 Score: 53.15 
2023/10/09 04:05:51 - mmengine - INFO - Epoch:[12/20] Candidate:[8/50] Flops: 462.885 Params: 4.382 Latency: 0.0 Score: 49.29 
2023/10/09 04:06:45 - mmengine - INFO - Epoch:[12/20] Candidate:[9/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:07:42 - mmengine - INFO - Epoch:[12/20] Candidate:[10/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 53.95 
2023/10/09 04:08:39 - mmengine - INFO - Epoch:[12/20] Candidate:[11/50] Flops: 428.636 Params: 4.862 Latency: 0.0 Score: 52.09 
2023/10/09 04:09:36 - mmengine - INFO - Epoch:[12/20] Candidate:[12/50] Flops: 463.524 Params: 4.45 Latency: 0.0 Score: 49.89 
2023/10/09 04:10:32 - mmengine - INFO - Epoch:[12/20] Candidate:[13/50] Flops: 462.207 Params: 5.423 Latency: 0.0 Score: 53.95 
2023/10/09 04:11:29 - mmengine - INFO - Epoch:[12/20] Candidate:[14/50] Flops: 439.641 Params: 4.964 Latency: 0.0 Score: 52.11 
2023/10/09 04:12:22 - mmengine - INFO - Epoch:[12/20] Candidate:[15/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:13:15 - mmengine - INFO - Epoch:[12/20] Candidate:[16/50] Flops: 438.386 Params: 5.208 Latency: 0.0 Score: 52.96 
2023/10/09 04:14:13 - mmengine - INFO - Epoch:[12/20] Candidate:[17/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:15:09 - mmengine - INFO - Epoch:[12/20] Candidate:[18/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:16:01 - mmengine - INFO - Epoch:[12/20] Candidate:[19/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:16:59 - mmengine - INFO - Epoch:[12/20] Candidate:[20/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 53.95 
2023/10/09 04:17:56 - mmengine - INFO - Epoch:[12/20] Candidate:[21/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:18:51 - mmengine - INFO - Epoch:[12/20] Candidate:[22/50] Flops: 460.602 Params: 5.415 Latency: 0.0 Score: 53.23 
2023/10/09 04:19:48 - mmengine - INFO - Epoch:[12/20] Candidate:[23/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:20:45 - mmengine - INFO - Epoch:[12/20] Candidate:[24/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.87 
2023/10/09 04:21:43 - mmengine - INFO - Epoch:[12/20] Candidate:[25/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:22:39 - mmengine - INFO - Epoch:[12/20] Candidate:[26/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:23:33 - mmengine - INFO - Epoch:[12/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:24:28 - mmengine - INFO - Epoch:[12/20] Candidate:[28/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:25:23 - mmengine - INFO - Epoch:[12/20] Candidate:[29/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:26:20 - mmengine - INFO - Epoch:[12/20] Candidate:[30/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:27:16 - mmengine - INFO - Epoch:[12/20] Candidate:[31/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:28:10 - mmengine - INFO - Epoch:[12/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:29:05 - mmengine - INFO - Epoch:[12/20] Candidate:[33/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:30:02 - mmengine - INFO - Epoch:[12/20] Candidate:[34/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:30:58 - mmengine - INFO - Epoch:[12/20] Candidate:[35/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:31:55 - mmengine - INFO - Epoch:[12/20] Candidate:[36/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:32:50 - mmengine - INFO - Epoch:[12/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:33:46 - mmengine - INFO - Epoch:[12/20] Candidate:[38/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:34:42 - mmengine - INFO - Epoch:[12/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:35:39 - mmengine - INFO - Epoch:[12/20] Candidate:[40/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:36:34 - mmengine - INFO - Epoch:[12/20] Candidate:[41/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:37:29 - mmengine - INFO - Epoch:[12/20] Candidate:[42/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:38:22 - mmengine - INFO - Epoch:[12/20] Candidate:[43/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:39:19 - mmengine - INFO - Epoch:[12/20] Candidate:[44/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:40:16 - mmengine - INFO - Epoch:[12/20] Candidate:[45/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:41:12 - mmengine - INFO - Epoch:[12/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:42:09 - mmengine - INFO - Epoch:[12/20] Candidate:[47/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:43:07 - mmengine - INFO - Epoch:[12/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:44:05 - mmengine - INFO - Epoch:[12/20] Candidate:[49/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 04:44:57 - mmengine - INFO - Epoch:[12/20] Candidate:[50/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:44:57 - mmengine - INFO - top k scores before update: [54.04, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 04:44:57 - mmengine - INFO - top k scores after update: [54.04, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 04:45:13 - mmengine - INFO - Epoch:[13/20], top1_score: 54.04
2023/10/09 04:46:11 - mmengine - INFO - Epoch:[13/20] Candidate:[1/50] Flops: 442.868 Params: 5.187 Latency: 0.0 Score: 50.71 
2023/10/09 04:47:07 - mmengine - INFO - Epoch:[13/20] Candidate:[2/50] Flops: 464.164 Params: 5.415 Latency: 0.0 Score: 54.16 
2023/10/09 04:48:04 - mmengine - INFO - Epoch:[13/20] Candidate:[3/50] Flops: 438.371 Params: 5.316 Latency: 0.0 Score: 53.06 
2023/10/09 04:49:00 - mmengine - INFO - Epoch:[13/20] Candidate:[4/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:49:56 - mmengine - INFO - Epoch:[13/20] Candidate:[5/50] Flops: 449.224 Params: 5.378 Latency: 0.0 Score: 53.81 
2023/10/09 04:50:52 - mmengine - INFO - Epoch:[13/20] Candidate:[6/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:51:46 - mmengine - INFO - Epoch:[13/20] Candidate:[7/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 04:52:42 - mmengine - INFO - Epoch:[13/20] Candidate:[8/50] Flops: 464.766 Params: 5.415 Latency: 0.0 Score: 53.86 
2023/10/09 04:53:38 - mmengine - INFO - Epoch:[13/20] Candidate:[9/50] Flops: 444.987 Params: 5.327 Latency: 0.0 Score: 53.56 
2023/10/09 04:54:36 - mmengine - INFO - Epoch:[13/20] Candidate:[10/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.11 
2023/10/09 04:55:29 - mmengine - INFO - Epoch:[13/20] Candidate:[11/50] Flops: 430.107 Params: 4.81 Latency: 0.0 Score: 52.86 
2023/10/09 04:56:22 - mmengine - INFO - Epoch:[13/20] Candidate:[12/50] Flops: 432.741 Params: 4.824 Latency: 0.0 Score: 52.96 
2023/10/09 04:57:18 - mmengine - INFO - Epoch:[13/20] Candidate:[13/50] Flops: 454.339 Params: 5.433 Latency: 0.0 Score: 52.98 
2023/10/09 04:58:13 - mmengine - INFO - Epoch:[13/20] Candidate:[14/50] Flops: 442.924 Params: 5.034 Latency: 0.0 Score: 52.38 
2023/10/09 04:59:07 - mmengine - INFO - Epoch:[13/20] Candidate:[15/50] Flops: 432.365 Params: 4.84 Latency: 0.0 Score: 50.42 
2023/10/09 05:00:03 - mmengine - INFO - Epoch:[13/20] Candidate:[16/50] Flops: 433.645 Params: 4.842 Latency: 0.0 Score: 53.08 
2023/10/09 05:01:00 - mmengine - INFO - Epoch:[13/20] Candidate:[17/50] Flops: 423.697 Params: 5.121 Latency: 0.0 Score: 52.1 
2023/10/09 05:01:55 - mmengine - INFO - Epoch:[13/20] Candidate:[18/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:02:50 - mmengine - INFO - Epoch:[13/20] Candidate:[19/50] Flops: 463.411 Params: 5.42 Latency: 0.0 Score: 54.02 
2023/10/09 05:03:44 - mmengine - INFO - Epoch:[13/20] Candidate:[20/50] Flops: 462.132 Params: 5.406 Latency: 0.0 Score: 53.9 
2023/10/09 05:04:39 - mmengine - INFO - Epoch:[13/20] Candidate:[21/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:05:36 - mmengine - INFO - Epoch:[13/20] Candidate:[22/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:06:32 - mmengine - INFO - Epoch:[13/20] Candidate:[23/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.83 
2023/10/09 05:07:29 - mmengine - INFO - Epoch:[13/20] Candidate:[24/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:08:26 - mmengine - INFO - Epoch:[13/20] Candidate:[25/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:09:23 - mmengine - INFO - Epoch:[13/20] Candidate:[26/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 05:10:19 - mmengine - INFO - Epoch:[13/20] Candidate:[27/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:11:14 - mmengine - INFO - Epoch:[13/20] Candidate:[28/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:12:06 - mmengine - INFO - Epoch:[13/20] Candidate:[29/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 05:13:00 - mmengine - INFO - Epoch:[13/20] Candidate:[30/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:13:53 - mmengine - INFO - Epoch:[13/20] Candidate:[31/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:14:50 - mmengine - INFO - Epoch:[13/20] Candidate:[32/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:15:47 - mmengine - INFO - Epoch:[13/20] Candidate:[33/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:16:42 - mmengine - INFO - Epoch:[13/20] Candidate:[34/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 05:17:38 - mmengine - INFO - Epoch:[13/20] Candidate:[35/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:18:35 - mmengine - INFO - Epoch:[13/20] Candidate:[36/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:19:32 - mmengine - INFO - Epoch:[13/20] Candidate:[37/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:20:30 - mmengine - INFO - Epoch:[13/20] Candidate:[38/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:21:25 - mmengine - INFO - Epoch:[13/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:22:21 - mmengine - INFO - Epoch:[13/20] Candidate:[40/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:23:14 - mmengine - INFO - Epoch:[13/20] Candidate:[41/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:24:09 - mmengine - INFO - Epoch:[13/20] Candidate:[42/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:25:04 - mmengine - INFO - Epoch:[13/20] Candidate:[43/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:26:00 - mmengine - INFO - Epoch:[13/20] Candidate:[44/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:26:57 - mmengine - INFO - Epoch:[13/20] Candidate:[45/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:27:52 - mmengine - INFO - Epoch:[13/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:28:48 - mmengine - INFO - Epoch:[13/20] Candidate:[47/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 05:29:46 - mmengine - INFO - Epoch:[13/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:30:40 - mmengine - INFO - Epoch:[13/20] Candidate:[49/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:31:37 - mmengine - INFO - Epoch:[13/20] Candidate:[50/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:31:37 - mmengine - INFO - top k scores before update: [54.04, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03, 54.03]
2023/10/09 05:31:37 - mmengine - INFO - top k scores after update: [54.19, 54.16, 54.11, 54.04, 54.04, 54.04, 54.04, 54.03, 54.03, 54.03]
2023/10/09 05:31:54 - mmengine - INFO - Epoch:[14/20], top1_score: 54.19
2023/10/09 05:32:51 - mmengine - INFO - Epoch:[14/20] Candidate:[1/50] Flops: 460.401 Params: 5.41 Latency: 0.0 Score: 53.93 
2023/10/09 05:33:45 - mmengine - INFO - Epoch:[14/20] Candidate:[2/50] Flops: 456.788 Params: 5.41 Latency: 0.0 Score: 53.79 
2023/10/09 05:34:41 - mmengine - INFO - Epoch:[14/20] Candidate:[3/50] Flops: 447.531 Params: 5.251 Latency: 0.0 Score: 53.64 
2023/10/09 05:35:36 - mmengine - INFO - Epoch:[14/20] Candidate:[4/50] Flops: 407.026 Params: 4.743 Latency: 0.0 Score: 51.23 
2023/10/09 05:36:28 - mmengine - INFO - Epoch:[14/20] Candidate:[5/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 53.96 
2023/10/09 05:37:25 - mmengine - INFO - Epoch:[14/20] Candidate:[6/50] Flops: 444.232 Params: 5.034 Latency: 0.0 Score: 53.36 
2023/10/09 05:38:20 - mmengine - INFO - Epoch:[14/20] Candidate:[7/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:39:17 - mmengine - INFO - Epoch:[14/20] Candidate:[8/50] Flops: 464.613 Params: 5.417 Latency: 0.0 Score: 53.83 
2023/10/09 05:40:13 - mmengine - INFO - Epoch:[14/20] Candidate:[9/50] Flops: 434.623 Params: 4.838 Latency: 0.0 Score: 53.13 
2023/10/09 05:41:08 - mmengine - INFO - Epoch:[14/20] Candidate:[10/50] Flops: 449.412 Params: 5.37 Latency: 0.0 Score: 53.78 
2023/10/09 05:42:05 - mmengine - INFO - Epoch:[14/20] Candidate:[11/50] Flops: 446.966 Params: 5.38 Latency: 0.0 Score: 53.77 
2023/10/09 05:43:02 - mmengine - INFO - Epoch:[14/20] Candidate:[12/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 05:44:00 - mmengine - INFO - Epoch:[14/20] Candidate:[13/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.11 
2023/10/09 05:44:57 - mmengine - INFO - Epoch:[14/20] Candidate:[14/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:45:51 - mmengine - INFO - Epoch:[14/20] Candidate:[15/50] Flops: 433.783 Params: 5.398 Latency: 0.0 Score: 52.92 
2023/10/09 05:46:43 - mmengine - INFO - Epoch:[14/20] Candidate:[16/50] Flops: 422.741 Params: 5.214 Latency: 0.0 Score: 52.41 
2023/10/09 05:47:40 - mmengine - INFO - Epoch:[14/20] Candidate:[17/50] Flops: 433.118 Params: 4.807 Latency: 0.0 Score: 52.42 
2023/10/09 05:48:38 - mmengine - INFO - Epoch:[14/20] Candidate:[18/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:49:31 - mmengine - INFO - Epoch:[14/20] Candidate:[19/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.87 
2023/10/09 05:50:29 - mmengine - INFO - Epoch:[14/20] Candidate:[20/50] Flops: 445.499 Params: 5.234 Latency: 0.0 Score: 53.06 
2023/10/09 05:51:26 - mmengine - INFO - Epoch:[14/20] Candidate:[21/50] Flops: 438.976 Params: 5.37 Latency: 0.0 Score: 52.85 
2023/10/09 05:52:22 - mmengine - INFO - Epoch:[14/20] Candidate:[22/50] Flops: 463.863 Params: 5.397 Latency: 0.0 Score: 53.73 
2023/10/09 05:53:16 - mmengine - INFO - Epoch:[14/20] Candidate:[23/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 05:54:12 - mmengine - INFO - Epoch:[14/20] Candidate:[24/50] Flops: 449.412 Params: 5.37 Latency: 0.0 Score: 53.78 
2023/10/09 05:55:08 - mmengine - INFO - Epoch:[14/20] Candidate:[25/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 05:56:03 - mmengine - INFO - Epoch:[14/20] Candidate:[26/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 53.71 
2023/10/09 05:57:01 - mmengine - INFO - Epoch:[14/20] Candidate:[27/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 05:57:54 - mmengine - INFO - Epoch:[14/20] Candidate:[28/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 05:58:51 - mmengine - INFO - Epoch:[14/20] Candidate:[29/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 05:59:47 - mmengine - INFO - Epoch:[14/20] Candidate:[30/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:00:42 - mmengine - INFO - Epoch:[14/20] Candidate:[31/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 06:01:39 - mmengine - INFO - Epoch:[14/20] Candidate:[32/50] Flops: 462.508 Params: 5.43 Latency: 0.0 Score: 54.04 
2023/10/09 06:02:37 - mmengine - INFO - Epoch:[14/20] Candidate:[33/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:03:35 - mmengine - INFO - Epoch:[14/20] Candidate:[34/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:04:32 - mmengine - INFO - Epoch:[14/20] Candidate:[35/50] Flops: 461.003 Params: 5.399 Latency: 0.0 Score: 53.75 
2023/10/09 06:05:28 - mmengine - INFO - Epoch:[14/20] Candidate:[36/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:06:25 - mmengine - INFO - Epoch:[14/20] Candidate:[37/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:07:20 - mmengine - INFO - Epoch:[14/20] Candidate:[38/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:08:13 - mmengine - INFO - Epoch:[14/20] Candidate:[39/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 06:09:10 - mmengine - INFO - Epoch:[14/20] Candidate:[40/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:10:07 - mmengine - INFO - Epoch:[14/20] Candidate:[41/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:11:03 - mmengine - INFO - Epoch:[14/20] Candidate:[42/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 06:11:59 - mmengine - INFO - Epoch:[14/20] Candidate:[43/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:12:56 - mmengine - INFO - Epoch:[14/20] Candidate:[44/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:13:52 - mmengine - INFO - Epoch:[14/20] Candidate:[45/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 54.04 
2023/10/09 06:14:48 - mmengine - INFO - Epoch:[14/20] Candidate:[46/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 06:15:42 - mmengine - INFO - Epoch:[14/20] Candidate:[47/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:16:36 - mmengine - INFO - Epoch:[14/20] Candidate:[48/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 06:17:32 - mmengine - INFO - Epoch:[14/20] Candidate:[49/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 54.03 
2023/10/09 06:18:28 - mmengine - INFO - Epoch:[14/20] Candidate:[50/50] Flops: 464.164 Params: 5.415 Latency: 0.0 Score: 54.16 
2023/10/09 06:18:28 - mmengine - INFO - top k scores before update: [54.19, 54.16, 54.11, 54.04, 54.04, 54.04, 54.04, 54.03, 54.03, 54.03]
2023/10/09 06:18:28 - mmengine - INFO - top k scores after update: [54.27, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19]
2023/10/09 06:18:44 - mmengine - INFO - Epoch:[15/20], top1_score: 54.27
2023/10/09 06:19:37 - mmengine - INFO - Epoch:[15/20] Candidate:[1/50] Flops: 431.274 Params: 5.415 Latency: 0.0 Score: 51.7 
2023/10/09 06:20:33 - mmengine - INFO - Epoch:[15/20] Candidate:[2/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 06:21:29 - mmengine - INFO - Epoch:[15/20] Candidate:[3/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.87 
2023/10/09 06:22:25 - mmengine - INFO - Epoch:[15/20] Candidate:[4/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:23:19 - mmengine - INFO - Epoch:[15/20] Candidate:[5/50] Flops: 431.876 Params: 5.427 Latency: 0.0 Score: 51.88 
2023/10/09 06:24:17 - mmengine - INFO - Epoch:[15/20] Candidate:[6/50] Flops: 460.551 Params: 5.406 Latency: 0.0 Score: 53.87 
2023/10/09 06:25:12 - mmengine - INFO - Epoch:[15/20] Candidate:[7/50] Flops: 448.697 Params: 5.375 Latency: 0.0 Score: 53.61 
2023/10/09 06:26:07 - mmengine - INFO - Epoch:[15/20] Candidate:[8/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:27:00 - mmengine - INFO - Epoch:[15/20] Candidate:[9/50] Flops: 438.562 Params: 5.794 Latency: 0.0 Score: 52.0 
2023/10/09 06:27:55 - mmengine - INFO - Epoch:[15/20] Candidate:[10/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:28:47 - mmengine - INFO - Epoch:[15/20] Candidate:[11/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:29:42 - mmengine - INFO - Epoch:[15/20] Candidate:[12/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:30:37 - mmengine - INFO - Epoch:[15/20] Candidate:[13/50] Flops: 445.467 Params: 5.38 Latency: 0.0 Score: 53.62 
2023/10/09 06:31:32 - mmengine - INFO - Epoch:[15/20] Candidate:[14/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:32:28 - mmengine - INFO - Epoch:[15/20] Candidate:[15/50] Flops: 444.263 Params: 5.395 Latency: 0.0 Score: 53.44 
2023/10/09 06:33:22 - mmengine - INFO - Epoch:[15/20] Candidate:[16/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:34:14 - mmengine - INFO - Epoch:[15/20] Candidate:[17/50] Flops: 445.96 Params: 5.489 Latency: 0.0 Score: 51.71 
2023/10/09 06:35:11 - mmengine - INFO - Epoch:[15/20] Candidate:[18/50] Flops: 412.684 Params: 4.392 Latency: 0.0 Score: 49.63 
2023/10/09 06:36:06 - mmengine - INFO - Epoch:[15/20] Candidate:[19/50] Flops: 433.482 Params: 5.116 Latency: 0.0 Score: 50.99 
2023/10/09 06:37:00 - mmengine - INFO - Epoch:[15/20] Candidate:[20/50] Flops: 460.175 Params: 5.358 Latency: 0.0 Score: 53.43 
2023/10/09 06:37:57 - mmengine - INFO - Epoch:[15/20] Candidate:[21/50] Flops: 443.959 Params: 5.598 Latency: 0.0 Score: 51.98 
2023/10/09 06:38:54 - mmengine - INFO - Epoch:[15/20] Candidate:[22/50] Flops: 448.697 Params: 5.375 Latency: 0.0 Score: 53.61 
2023/10/09 06:39:48 - mmengine - INFO - Epoch:[15/20] Candidate:[23/50] Flops: 461.605 Params: 5.411 Latency: 0.0 Score: 53.96 
2023/10/09 06:40:42 - mmengine - INFO - Epoch:[15/20] Candidate:[24/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:41:36 - mmengine - INFO - Epoch:[15/20] Candidate:[25/50] Flops: 464.992 Params: 5.421 Latency: 0.0 Score: 54.14 
2023/10/09 06:42:32 - mmengine - INFO - Epoch:[15/20] Candidate:[26/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:43:27 - mmengine - INFO - Epoch:[15/20] Candidate:[27/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:44:23 - mmengine - INFO - Epoch:[15/20] Candidate:[28/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:45:21 - mmengine - INFO - Epoch:[15/20] Candidate:[29/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:46:17 - mmengine - INFO - Epoch:[15/20] Candidate:[30/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:47:14 - mmengine - INFO - Epoch:[15/20] Candidate:[31/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:48:12 - mmengine - INFO - Epoch:[15/20] Candidate:[32/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 06:49:10 - mmengine - INFO - Epoch:[15/20] Candidate:[33/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:50:04 - mmengine - INFO - Epoch:[15/20] Candidate:[34/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:51:02 - mmengine - INFO - Epoch:[15/20] Candidate:[35/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:52:00 - mmengine - INFO - Epoch:[15/20] Candidate:[36/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:52:53 - mmengine - INFO - Epoch:[15/20] Candidate:[37/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:53:44 - mmengine - INFO - Epoch:[15/20] Candidate:[38/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:54:38 - mmengine - INFO - Epoch:[15/20] Candidate:[39/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:55:35 - mmengine - INFO - Epoch:[15/20] Candidate:[40/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:56:33 - mmengine - INFO - Epoch:[15/20] Candidate:[41/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:57:30 - mmengine - INFO - Epoch:[15/20] Candidate:[42/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:58:27 - mmengine - INFO - Epoch:[15/20] Candidate:[43/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 06:59:25 - mmengine - INFO - Epoch:[15/20] Candidate:[44/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:00:20 - mmengine - INFO - Epoch:[15/20] Candidate:[45/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:01:15 - mmengine - INFO - Epoch:[15/20] Candidate:[46/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:02:12 - mmengine - INFO - Epoch:[15/20] Candidate:[47/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:03:09 - mmengine - INFO - Epoch:[15/20] Candidate:[48/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:04:04 - mmengine - INFO - Epoch:[15/20] Candidate:[49/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:05:01 - mmengine - INFO - Epoch:[15/20] Candidate:[50/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:05:01 - mmengine - INFO - top k scores before update: [54.27, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19]
2023/10/09 07:05:01 - mmengine - INFO - top k scores after update: [54.27, 54.27, 54.27, 54.27, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19]
2023/10/09 07:05:19 - mmengine - INFO - Epoch:[16/20], top1_score: 54.27
2023/10/09 07:06:15 - mmengine - INFO - Epoch:[16/20] Candidate:[1/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:07:12 - mmengine - INFO - Epoch:[16/20] Candidate:[2/50] Flops: 458.927 Params: 5.397 Latency: 0.0 Score: 53.36 
2023/10/09 07:08:07 - mmengine - INFO - Epoch:[16/20] Candidate:[3/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:09:01 - mmengine - INFO - Epoch:[16/20] Candidate:[4/50] Flops: 450.918 Params: 5.4 Latency: 0.0 Score: 54.04 
2023/10/09 07:09:53 - mmengine - INFO - Epoch:[16/20] Candidate:[5/50] Flops: 435.288 Params: 5.429 Latency: 0.0 Score: 53.4 
2023/10/09 07:10:49 - mmengine - INFO - Epoch:[16/20] Candidate:[6/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:11:47 - mmengine - INFO - Epoch:[16/20] Candidate:[7/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:12:42 - mmengine - INFO - Epoch:[16/20] Candidate:[8/50] Flops: 443.36 Params: 5.377 Latency: 0.0 Score: 53.43 
2023/10/09 07:13:36 - mmengine - INFO - Epoch:[16/20] Candidate:[9/50] Flops: 440.29 Params: 5.291 Latency: 0.0 Score: 51.87 
2023/10/09 07:14:29 - mmengine - INFO - Epoch:[16/20] Candidate:[10/50] Flops: 442.212 Params: 5.433 Latency: 0.0 Score: 53.81 
2023/10/09 07:15:26 - mmengine - INFO - Epoch:[16/20] Candidate:[11/50] Flops: 457.488 Params: 5.087 Latency: 0.0 Score: 53.23 
2023/10/09 07:16:23 - mmengine - INFO - Epoch:[16/20] Candidate:[12/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:17:15 - mmengine - INFO - Epoch:[16/20] Candidate:[13/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 07:18:12 - mmengine - INFO - Epoch:[16/20] Candidate:[14/50] Flops: 434.171 Params: 4.845 Latency: 0.0 Score: 53.22 
2023/10/09 07:19:09 - mmengine - INFO - Epoch:[16/20] Candidate:[15/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:20:06 - mmengine - INFO - Epoch:[16/20] Candidate:[16/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:21:04 - mmengine - INFO - Epoch:[16/20] Candidate:[17/50] Flops: 461.981 Params: 5.418 Latency: 0.0 Score: 54.01 
2023/10/09 07:22:01 - mmengine - INFO - Epoch:[16/20] Candidate:[18/50] Flops: 433.72 Params: 4.819 Latency: 0.0 Score: 52.93 
2023/10/09 07:22:54 - mmengine - INFO - Epoch:[16/20] Candidate:[19/50] Flops: 461.906 Params: 5.377 Latency: 0.0 Score: 53.68 
2023/10/09 07:23:48 - mmengine - INFO - Epoch:[16/20] Candidate:[20/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:24:43 - mmengine - INFO - Epoch:[16/20] Candidate:[21/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:25:39 - mmengine - INFO - Epoch:[16/20] Candidate:[22/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:26:33 - mmengine - INFO - Epoch:[16/20] Candidate:[23/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:27:25 - mmengine - INFO - Epoch:[16/20] Candidate:[24/50] Flops: 435.288 Params: 5.429 Latency: 0.0 Score: 53.4 
2023/10/09 07:28:22 - mmengine - INFO - Epoch:[16/20] Candidate:[25/50] Flops: 458.444 Params: 5.363 Latency: 0.0 Score: 53.48 
2023/10/09 07:29:18 - mmengine - INFO - Epoch:[16/20] Candidate:[26/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:30:12 - mmengine - INFO - Epoch:[16/20] Candidate:[27/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:31:09 - mmengine - INFO - Epoch:[16/20] Candidate:[28/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:32:04 - mmengine - INFO - Epoch:[16/20] Candidate:[29/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:32:59 - mmengine - INFO - Epoch:[16/20] Candidate:[30/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:33:55 - mmengine - INFO - Epoch:[16/20] Candidate:[31/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:34:50 - mmengine - INFO - Epoch:[16/20] Candidate:[32/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:35:47 - mmengine - INFO - Epoch:[16/20] Candidate:[33/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:36:40 - mmengine - INFO - Epoch:[16/20] Candidate:[34/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:37:36 - mmengine - INFO - Epoch:[16/20] Candidate:[35/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:38:32 - mmengine - INFO - Epoch:[16/20] Candidate:[36/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:39:29 - mmengine - INFO - Epoch:[16/20] Candidate:[37/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:40:25 - mmengine - INFO - Epoch:[16/20] Candidate:[38/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:41:22 - mmengine - INFO - Epoch:[16/20] Candidate:[39/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:42:17 - mmengine - INFO - Epoch:[16/20] Candidate:[40/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:43:11 - mmengine - INFO - Epoch:[16/20] Candidate:[41/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:44:09 - mmengine - INFO - Epoch:[16/20] Candidate:[42/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:45:05 - mmengine - INFO - Epoch:[16/20] Candidate:[43/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:46:02 - mmengine - INFO - Epoch:[16/20] Candidate:[44/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:46:58 - mmengine - INFO - Epoch:[16/20] Candidate:[45/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:47:53 - mmengine - INFO - Epoch:[16/20] Candidate:[46/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:48:51 - mmengine - INFO - Epoch:[16/20] Candidate:[47/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:49:46 - mmengine - INFO - Epoch:[16/20] Candidate:[48/50] Flops: 463.186 Params: 5.419 Latency: 0.0 Score: 54.19 
2023/10/09 07:50:42 - mmengine - INFO - Epoch:[16/20] Candidate:[49/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:51:36 - mmengine - INFO - Epoch:[16/20] Candidate:[50/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:51:36 - mmengine - INFO - top k scores before update: [54.27, 54.27, 54.27, 54.27, 54.19, 54.19, 54.19, 54.19, 54.19, 54.19]
2023/10/09 07:51:36 - mmengine - INFO - top k scores after update: [54.29, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27]
2023/10/09 07:51:54 - mmengine - INFO - Epoch:[17/20], top1_score: 54.29
2023/10/09 07:52:51 - mmengine - INFO - Epoch:[17/20] Candidate:[1/50] Flops: 463.669 Params: 5.03 Latency: 0.0 Score: 53.18 
2023/10/09 07:53:48 - mmengine - INFO - Epoch:[17/20] Candidate:[2/50] Flops: 447.854 Params: 5.365 Latency: 0.0 Score: 53.78 
2023/10/09 07:54:44 - mmengine - INFO - Epoch:[17/20] Candidate:[3/50] Flops: 437.972 Params: 5.227 Latency: 0.0 Score: 53.37 
2023/10/09 07:55:42 - mmengine - INFO - Epoch:[17/20] Candidate:[4/50] Flops: 457.503 Params: 4.875 Latency: 0.0 Score: 53.72 
2023/10/09 07:56:36 - mmengine - INFO - Epoch:[17/20] Candidate:[5/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:57:33 - mmengine - INFO - Epoch:[17/20] Candidate:[6/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 07:58:29 - mmengine - INFO - Epoch:[17/20] Candidate:[7/50] Flops: 453.041 Params: 4.931 Latency: 0.0 Score: 53.17 
2023/10/09 07:59:25 - mmengine - INFO - Epoch:[17/20] Candidate:[8/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:00:21 - mmengine - INFO - Epoch:[17/20] Candidate:[9/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:01:17 - mmengine - INFO - Epoch:[17/20] Candidate:[10/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:02:15 - mmengine - INFO - Epoch:[17/20] Candidate:[11/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:03:10 - mmengine - INFO - Epoch:[17/20] Candidate:[12/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:04:07 - mmengine - INFO - Epoch:[17/20] Candidate:[13/50] Flops: 461.455 Params: 5.424 Latency: 0.0 Score: 54.02 
2023/10/09 08:05:02 - mmengine - INFO - Epoch:[17/20] Candidate:[14/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:05:56 - mmengine - INFO - Epoch:[17/20] Candidate:[15/50] Flops: 456.161 Params: 5.441 Latency: 0.0 Score: 53.06 
2023/10/09 08:06:53 - mmengine - INFO - Epoch:[17/20] Candidate:[16/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:07:48 - mmengine - INFO - Epoch:[17/20] Candidate:[17/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:08:45 - mmengine - INFO - Epoch:[17/20] Candidate:[18/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:09:39 - mmengine - INFO - Epoch:[17/20] Candidate:[19/50] Flops: 449.149 Params: 5.401 Latency: 0.0 Score: 53.72 
2023/10/09 08:10:36 - mmengine - INFO - Epoch:[17/20] Candidate:[20/50] Flops: 439.139 Params: 4.884 Latency: 0.0 Score: 53.33 
2023/10/09 08:11:30 - mmengine - INFO - Epoch:[17/20] Candidate:[21/50] Flops: 444.241 Params: 5.291 Latency: 0.0 Score: 53.26 
2023/10/09 08:12:24 - mmengine - INFO - Epoch:[17/20] Candidate:[22/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:13:21 - mmengine - INFO - Epoch:[17/20] Candidate:[23/50] Flops: 436.74 Params: 5.147 Latency: 0.0 Score: 50.98 
2023/10/09 08:14:15 - mmengine - INFO - Epoch:[17/20] Candidate:[24/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:15:07 - mmengine - INFO - Epoch:[17/20] Candidate:[25/50] Flops: 460.025 Params: 5.371 Latency: 0.0 Score: 53.45 
2023/10/09 08:16:05 - mmengine - INFO - Epoch:[17/20] Candidate:[26/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:17:00 - mmengine - INFO - Epoch:[17/20] Candidate:[27/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:17:57 - mmengine - INFO - Epoch:[17/20] Candidate:[28/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:18:54 - mmengine - INFO - Epoch:[17/20] Candidate:[29/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:19:52 - mmengine - INFO - Epoch:[17/20] Candidate:[30/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:20:48 - mmengine - INFO - Epoch:[17/20] Candidate:[31/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:21:45 - mmengine - INFO - Epoch:[17/20] Candidate:[32/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 08:22:40 - mmengine - INFO - Epoch:[17/20] Candidate:[33/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:23:36 - mmengine - INFO - Epoch:[17/20] Candidate:[34/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:24:32 - mmengine - INFO - Epoch:[17/20] Candidate:[35/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:25:25 - mmengine - INFO - Epoch:[17/20] Candidate:[36/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:26:20 - mmengine - INFO - Epoch:[17/20] Candidate:[37/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:27:16 - mmengine - INFO - Epoch:[17/20] Candidate:[38/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:28:12 - mmengine - INFO - Epoch:[17/20] Candidate:[39/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:29:10 - mmengine - INFO - Epoch:[17/20] Candidate:[40/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:30:08 - mmengine - INFO - Epoch:[17/20] Candidate:[41/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:31:05 - mmengine - INFO - Epoch:[17/20] Candidate:[42/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:32:01 - mmengine - INFO - Epoch:[17/20] Candidate:[43/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:32:56 - mmengine - INFO - Epoch:[17/20] Candidate:[44/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:33:54 - mmengine - INFO - Epoch:[17/20] Candidate:[45/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:34:50 - mmengine - INFO - Epoch:[17/20] Candidate:[46/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:35:47 - mmengine - INFO - Epoch:[17/20] Candidate:[47/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:36:43 - mmengine - INFO - Epoch:[17/20] Candidate:[48/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 08:37:37 - mmengine - INFO - Epoch:[17/20] Candidate:[49/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 08:38:33 - mmengine - INFO - Epoch:[17/20] Candidate:[50/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:38:33 - mmengine - INFO - top k scores before update: [54.29, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27]
2023/10/09 08:38:33 - mmengine - INFO - top k scores after update: [54.29, 54.29, 54.29, 54.29, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27]
2023/10/09 08:38:54 - mmengine - INFO - Epoch:[18/20], top1_score: 54.29
2023/10/09 08:39:50 - mmengine - INFO - Epoch:[18/20] Candidate:[1/50] Flops: 463.615 Params: 5.761 Latency: 0.0 Score: 53.31 
2023/10/09 08:40:44 - mmengine - INFO - Epoch:[18/20] Candidate:[2/50] Flops: 461.229 Params: 5.395 Latency: 0.0 Score: 53.8 
2023/10/09 08:41:39 - mmengine - INFO - Epoch:[18/20] Candidate:[3/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:42:34 - mmengine - INFO - Epoch:[18/20] Candidate:[4/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:43:28 - mmengine - INFO - Epoch:[18/20] Candidate:[5/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:44:24 - mmengine - INFO - Epoch:[18/20] Candidate:[6/50] Flops: 457.575 Params: 5.464 Latency: 0.0 Score: 53.02 
2023/10/09 08:45:19 - mmengine - INFO - Epoch:[18/20] Candidate:[7/50] Flops: 432.227 Params: 5.245 Latency: 0.0 Score: 52.64 
2023/10/09 08:46:14 - mmengine - INFO - Epoch:[18/20] Candidate:[8/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 08:47:09 - mmengine - INFO - Epoch:[18/20] Candidate:[9/50] Flops: 412.533 Params: 4.405 Latency: 0.0 Score: 50.02 
2023/10/09 08:48:05 - mmengine - INFO - Epoch:[18/20] Candidate:[10/50] Flops: 451.971 Params: 5.398 Latency: 0.0 Score: 54.08 
2023/10/09 08:49:02 - mmengine - INFO - Epoch:[18/20] Candidate:[11/50] Flops: 442.588 Params: 5.329 Latency: 0.0 Score: 53.52 
2023/10/09 08:49:59 - mmengine - INFO - Epoch:[18/20] Candidate:[12/50] Flops: 462.283 Params: 5.401 Latency: 0.0 Score: 54.03 
2023/10/09 08:50:53 - mmengine - INFO - Epoch:[18/20] Candidate:[13/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:51:49 - mmengine - INFO - Epoch:[18/20] Candidate:[14/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:52:45 - mmengine - INFO - Epoch:[18/20] Candidate:[15/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:53:40 - mmengine - INFO - Epoch:[18/20] Candidate:[16/50] Flops: 462.508 Params: 5.43 Latency: 0.0 Score: 54.17 
2023/10/09 08:54:39 - mmengine - INFO - Epoch:[18/20] Candidate:[17/50] Flops: 458.61 Params: 4.822 Latency: 0.0 Score: 52.79 
2023/10/09 08:55:34 - mmengine - INFO - Epoch:[18/20] Candidate:[18/50] Flops: 455.769 Params: 5.455 Latency: 0.0 Score: 53.01 
2023/10/09 08:56:32 - mmengine - INFO - Epoch:[18/20] Candidate:[19/50] Flops: 443.178 Params: 5.028 Latency: 0.0 Score: 53.38 
2023/10/09 08:57:30 - mmengine - INFO - Epoch:[18/20] Candidate:[20/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 08:58:24 - mmengine - INFO - Epoch:[18/20] Candidate:[21/50] Flops: 462.584 Params: 5.407 Latency: 0.0 Score: 53.97 
2023/10/09 08:59:19 - mmengine - INFO - Epoch:[18/20] Candidate:[22/50] Flops: 448.434 Params: 5.27 Latency: 0.0 Score: 53.81 
2023/10/09 09:00:16 - mmengine - INFO - Epoch:[18/20] Candidate:[23/50] Flops: 447.252 Params: 5.352 Latency: 0.0 Score: 53.84 
2023/10/09 09:01:13 - mmengine - INFO - Epoch:[18/20] Candidate:[24/50] Flops: 445.122 Params: 5.218 Latency: 0.0 Score: 52.84 
2023/10/09 09:02:11 - mmengine - INFO - Epoch:[18/20] Candidate:[25/50] Flops: 445.671 Params: 5.344 Latency: 0.0 Score: 53.76 
2023/10/09 09:03:04 - mmengine - INFO - Epoch:[18/20] Candidate:[26/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:03:58 - mmengine - INFO - Epoch:[18/20] Candidate:[27/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:04:54 - mmengine - INFO - Epoch:[18/20] Candidate:[28/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:05:50 - mmengine - INFO - Epoch:[18/20] Candidate:[29/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:06:44 - mmengine - INFO - Epoch:[18/20] Candidate:[30/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:07:39 - mmengine - INFO - Epoch:[18/20] Candidate:[31/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:08:36 - mmengine - INFO - Epoch:[18/20] Candidate:[32/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:09:33 - mmengine - INFO - Epoch:[18/20] Candidate:[33/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:10:29 - mmengine - INFO - Epoch:[18/20] Candidate:[34/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:11:23 - mmengine - INFO - Epoch:[18/20] Candidate:[35/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:12:20 - mmengine - INFO - Epoch:[18/20] Candidate:[36/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:13:14 - mmengine - INFO - Epoch:[18/20] Candidate:[37/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:14:11 - mmengine - INFO - Epoch:[18/20] Candidate:[38/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:15:06 - mmengine - INFO - Epoch:[18/20] Candidate:[39/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:16:01 - mmengine - INFO - Epoch:[18/20] Candidate:[40/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:16:57 - mmengine - INFO - Epoch:[18/20] Candidate:[41/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:17:54 - mmengine - INFO - Epoch:[18/20] Candidate:[42/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:18:51 - mmengine - INFO - Epoch:[18/20] Candidate:[43/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:19:45 - mmengine - INFO - Epoch:[18/20] Candidate:[44/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:20:41 - mmengine - INFO - Epoch:[18/20] Candidate:[45/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:21:35 - mmengine - INFO - Epoch:[18/20] Candidate:[46/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:22:32 - mmengine - INFO - Epoch:[18/20] Candidate:[47/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:23:30 - mmengine - INFO - Epoch:[18/20] Candidate:[48/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:24:26 - mmengine - INFO - Epoch:[18/20] Candidate:[49/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:25:24 - mmengine - INFO - Epoch:[18/20] Candidate:[50/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:25:24 - mmengine - INFO - top k scores before update: [54.29, 54.29, 54.29, 54.29, 54.27, 54.27, 54.27, 54.27, 54.27, 54.27]
2023/10/09 09:25:24 - mmengine - INFO - top k scores after update: [54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29]
2023/10/09 09:25:41 - mmengine - INFO - Epoch:[19/20], top1_score: 54.29
2023/10/09 09:26:37 - mmengine - INFO - Epoch:[19/20] Candidate:[1/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:27:31 - mmengine - INFO - Epoch:[19/20] Candidate:[2/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:28:27 - mmengine - INFO - Epoch:[19/20] Candidate:[3/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:29:24 - mmengine - INFO - Epoch:[19/20] Candidate:[4/50] Flops: 448.547 Params: 5.388 Latency: 0.0 Score: 53.77 
2023/10/09 09:30:22 - mmengine - INFO - Epoch:[19/20] Candidate:[5/50] Flops: 464.089 Params: 5.438 Latency: 0.0 Score: 54.27 
2023/10/09 09:31:17 - mmengine - INFO - Epoch:[19/20] Candidate:[6/50] Flops: 453.492 Params: 4.956 Latency: 0.0 Score: 53.34 
2023/10/09 09:32:13 - mmengine - INFO - Epoch:[19/20] Candidate:[7/50] Flops: 446.418 Params: 5.348 Latency: 0.0 Score: 53.75 
2023/10/09 09:33:11 - mmengine - INFO - Epoch:[19/20] Candidate:[8/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:34:06 - mmengine - INFO - Epoch:[19/20] Candidate:[9/50] Flops: 431.845 Params: 5.372 Latency: 0.0 Score: 53.44 
2023/10/09 09:35:04 - mmengine - INFO - Epoch:[19/20] Candidate:[10/50] Flops: 441.673 Params: 4.998 Latency: 0.0 Score: 52.82 
2023/10/09 09:36:00 - mmengine - INFO - Epoch:[19/20] Candidate:[11/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:36:56 - mmengine - INFO - Epoch:[19/20] Candidate:[12/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:37:54 - mmengine - INFO - Epoch:[19/20] Candidate:[13/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:38:49 - mmengine - INFO - Epoch:[19/20] Candidate:[14/50] Flops: 453.21 Params: 5.496 Latency: 0.0 Score: 53.58 
2023/10/09 09:39:47 - mmengine - INFO - Epoch:[19/20] Candidate:[15/50] Flops: 458.218 Params: 5.431 Latency: 0.0 Score: 54.04 
2023/10/09 09:40:41 - mmengine - INFO - Epoch:[19/20] Candidate:[16/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:41:38 - mmengine - INFO - Epoch:[19/20] Candidate:[17/50] Flops: 431.989 Params: 4.824 Latency: 0.0 Score: 53.07 
2023/10/09 09:42:36 - mmengine - INFO - Epoch:[19/20] Candidate:[18/50] Flops: 452.799 Params: 5.278 Latency: 0.0 Score: 53.64 
2023/10/09 09:43:34 - mmengine - INFO - Epoch:[19/20] Candidate:[19/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:44:31 - mmengine - INFO - Epoch:[19/20] Candidate:[20/50] Flops: 449.864 Params: 5.395 Latency: 0.0 Score: 53.96 
2023/10/09 09:45:27 - mmengine - INFO - Epoch:[19/20] Candidate:[21/50] Flops: 450.058 Params: 5.15 Latency: 0.0 Score: 51.22 
2023/10/09 09:46:23 - mmengine - INFO - Epoch:[19/20] Candidate:[22/50] Flops: 446.22 Params: 5.411 Latency: 0.0 Score: 53.83 
2023/10/09 09:47:17 - mmengine - INFO - Epoch:[19/20] Candidate:[23/50] Flops: 441.983 Params: 5.325 Latency: 0.0 Score: 53.1 
2023/10/09 09:48:11 - mmengine - INFO - Epoch:[19/20] Candidate:[24/50] Flops: 457.541 Params: 5.562 Latency: 0.0 Score: 52.14 
2023/10/09 09:49:10 - mmengine - INFO - Epoch:[19/20] Candidate:[25/50] Flops: 421.345 Params: 4.322 Latency: 0.0 Score: 49.14 
2023/10/09 09:50:05 - mmengine - INFO - Epoch:[19/20] Candidate:[26/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:51:00 - mmengine - INFO - Epoch:[19/20] Candidate:[27/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:51:53 - mmengine - INFO - Epoch:[19/20] Candidate:[28/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:52:49 - mmengine - INFO - Epoch:[19/20] Candidate:[29/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:53:46 - mmengine - INFO - Epoch:[19/20] Candidate:[30/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:54:42 - mmengine - INFO - Epoch:[19/20] Candidate:[31/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:55:36 - mmengine - INFO - Epoch:[19/20] Candidate:[32/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:56:33 - mmengine - INFO - Epoch:[19/20] Candidate:[33/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:57:28 - mmengine - INFO - Epoch:[19/20] Candidate:[34/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:58:22 - mmengine - INFO - Epoch:[19/20] Candidate:[35/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 09:59:16 - mmengine - INFO - Epoch:[19/20] Candidate:[36/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:00:12 - mmengine - INFO - Epoch:[19/20] Candidate:[37/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:01:09 - mmengine - INFO - Epoch:[19/20] Candidate:[38/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:02:03 - mmengine - INFO - Epoch:[19/20] Candidate:[39/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:02:58 - mmengine - INFO - Epoch:[19/20] Candidate:[40/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:03:55 - mmengine - INFO - Epoch:[19/20] Candidate:[41/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:04:51 - mmengine - INFO - Epoch:[19/20] Candidate:[42/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:05:49 - mmengine - INFO - Epoch:[19/20] Candidate:[43/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:06:43 - mmengine - INFO - Epoch:[19/20] Candidate:[44/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:07:39 - mmengine - INFO - Epoch:[19/20] Candidate:[45/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:08:36 - mmengine - INFO - Epoch:[19/20] Candidate:[46/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:09:32 - mmengine - INFO - Epoch:[19/20] Candidate:[47/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:10:26 - mmengine - INFO - Epoch:[19/20] Candidate:[48/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:11:24 - mmengine - INFO - Epoch:[19/20] Candidate:[49/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:12:18 - mmengine - INFO - Epoch:[19/20] Candidate:[50/50] Flops: 463.035 Params: 5.432 Latency: 0.0 Score: 54.29 
2023/10/09 10:12:18 - mmengine - INFO - top k scores before update: [54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29]
2023/10/09 10:12:18 - mmengine - INFO - top k scores after update: [54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29, 54.29]
2023/10/09 10:12:37 - mmengine - INFO - Epoch:[20/20], top1_score: 54.29
2023/10/09 10:12:38 - mmengine - INFO - Subnet checkpoint subnet_20231009_1012.pth saved in /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_search
2023/10/09 10:12:38 - mmengine - INFO - Subnet config best_fix_subnet.yaml saved in /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_search.
2023/10/09 10:12:38 - mmengine - INFO - Search finished.

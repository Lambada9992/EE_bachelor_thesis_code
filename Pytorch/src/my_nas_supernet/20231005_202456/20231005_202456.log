2023/10/05 20:24:57 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1234
    GPU 0: NVIDIA GeForce RTX 4070 Ti
    CUDA_HOME: None
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1234
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/10/05 20:24:58 - mmengine - INFO - Config:
_FIRST_MUTABLE = dict(
    _scope_='mmrazor',
    candidates=dict(
        mb_k3e1=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=1,
            kernel_size=3,
            type='MBBlock')),
    type='OneShotMutableOP')
_STAGE_MUTABLE = dict(
    _scope_='mmrazor',
    candidates=dict(
        identity=dict(type='Identity'),
        mb_k3e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=3,
            type='MBBlock'),
        mb_k3e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=3,
            type='MBBlock'),
        mb_k5e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=5,
            type='MBBlock'),
        mb_k5e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=5,
            type='MBBlock'),
        mb_k7e3=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=3,
            kernel_size=7,
            type='MBBlock'),
        mb_k7e6=dict(
            act_cfg=dict(type='ReLU6'),
            expand_ratio=6,
            kernel_size=7,
            type='MBBlock')),
    type='OneShotMutableOP')
arch_setting = [
    [
        24,
        1,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                mb_k3e1=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=1,
                    kernel_size=3,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        32,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        56,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        112,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        128,
        4,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        256,
        4,
        2,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
    [
        432,
        1,
        1,
        dict(
            _scope_='mmrazor',
            candidates=dict(
                identity=dict(type='Identity'),
                mb_k3e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k3e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=3,
                    type='MBBlock'),
                mb_k5e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k5e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=5,
                    type='MBBlock'),
                mb_k7e3=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=3,
                    kernel_size=7,
                    type='MBBlock'),
                mb_k7e6=dict(
                    act_cfg=dict(type='ReLU6'),
                    expand_ratio=6,
                    kernel_size=7,
                    type='MBBlock')),
            type='OneShotMutableOP'),
    ],
]
dataset_type = 'mmcls.ImageNet'
default_hooks = dict(
    checkpoint=dict(_scope_='mmcls', interval=1, type='CheckpointHook'),
    logger=dict(_scope_='mmcls', interval=100, type='LoggerHook'),
    param_scheduler=dict(_scope_='mmcls', type='ParamSchedulerHook'),
    sampler_seed=dict(_scope_='mmcls', type='DistSamplerSeedHook'),
    timer=dict(_scope_='mmcls', type='IterTimerHook'),
    visualization=dict(
        _scope_='mmcls', enable=False, type='VisualizationHook'))
default_scope = 'mmcls'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
find_unused_parameters = True
launcher = 'none'
load_from = None
log_level = 'INFO'
model = dict(
    architecture=dict(
        _scope_='mmcls',
        backbone=dict(
            _scope_='mmrazor',
            arch_setting=[
                [
                    24,
                    1,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            mb_k3e1=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=1,
                                kernel_size=3,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    32,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    56,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    112,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    128,
                    4,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    256,
                    4,
                    2,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
                [
                    432,
                    1,
                    1,
                    dict(
                        _scope_='mmrazor',
                        candidates=dict(
                            identity=dict(type='Identity'),
                            mb_k3e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k3e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=3,
                                type='MBBlock'),
                            mb_k5e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k5e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=5,
                                type='MBBlock'),
                            mb_k7e3=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=3,
                                kernel_size=7,
                                type='MBBlock'),
                            mb_k7e6=dict(
                                act_cfg=dict(type='ReLU6'),
                                expand_ratio=6,
                                kernel_size=7,
                                type='MBBlock')),
                        type='OneShotMutableOP'),
                ],
            ],
            first_channels=40,
            last_channels=1728,
            type='SearchableMobileNetV2',
            widen_factor=1.0),
        data_preprocessor=dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True),
        head=dict(
            in_channels=1728,
            loss=dict(
                label_smooth_val=0.1,
                loss_weight=1.0,
                mode='original',
                num_classes=1000,
                type='LabelSmoothLoss'),
            num_classes=1000,
            topk=(
                1,
                5,
            ),
            type='LinearClsHead'),
        neck=dict(type='GlobalAveragePooling'),
        type='ImageClassifier'),
    mutator=dict(type='mmrazor.NasMutator'),
    type='mmrazor.SPOS')
nas_backbone = dict(
    _scope_='mmrazor',
    arch_setting=[
        [
            24,
            1,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    mb_k3e1=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=1,
                        kernel_size=3,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            32,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            56,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            112,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            128,
            4,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            256,
            4,
            2,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
        [
            432,
            1,
            1,
            dict(
                _scope_='mmrazor',
                candidates=dict(
                    identity=dict(type='Identity'),
                    mb_k3e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k3e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=3,
                        type='MBBlock'),
                    mb_k5e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k5e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=5,
                        type='MBBlock'),
                    mb_k7e3=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=3,
                        kernel_size=7,
                        type='MBBlock'),
                    mb_k7e6=dict(
                        act_cfg=dict(type='ReLU6'),
                        expand_ratio=6,
                        kernel_size=7,
                        type='MBBlock')),
                type='OneShotMutableOP'),
        ],
    ],
    first_channels=40,
    last_channels=1728,
    type='SearchableMobileNetV2',
    widen_factor=1.0)
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(
        _scope_='mmrazor',
        lr=0.045,
        momentum=0.9,
        type='SGD',
        weight_decay=4e-05),
    paramwise_cfg=dict(
        bias_decay_mult=0.0, dwconv_decay_mult=0.0, norm_decay_mult=0.0))
param_scheduler = dict(
    _scope_='mmrazor',
    by_epoch=True,
    convert_to_iter_based=True,
    end=300,
    eta_min=0.0,
    power=1.0,
    type='PolyLR')
paramwise_cfg = dict(
    bias_decay_mult=0.0, dwconv_decay_mult=0.0, norm_decay_mult=0.0)
preprocess_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
randomness = dict(deterministic=False, seed=1234)
resume = True
supernet = dict(
    _scope_='mmcls',
    backbone=dict(
        _scope_='mmrazor',
        arch_setting=[
            [
                24,
                1,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        mb_k3e1=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=1,
                            kernel_size=3,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                32,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                56,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                112,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                128,
                4,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                256,
                4,
                2,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
            [
                432,
                1,
                1,
                dict(
                    _scope_='mmrazor',
                    candidates=dict(
                        identity=dict(type='Identity'),
                        mb_k3e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k3e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=3,
                            type='MBBlock'),
                        mb_k5e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k5e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=5,
                            type='MBBlock'),
                        mb_k7e3=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=3,
                            kernel_size=7,
                            type='MBBlock'),
                        mb_k7e6=dict(
                            act_cfg=dict(type='ReLU6'),
                            expand_ratio=6,
                            kernel_size=7,
                            type='MBBlock')),
                    type='OneShotMutableOP'),
            ],
        ],
        first_channels=40,
        last_channels=1728,
        type='SearchableMobileNetV2',
        widen_factor=1.0),
    data_preprocessor=dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True),
    head=dict(
        in_channels=1728,
        loss=dict(
            label_smooth_val=0.1,
            loss_weight=1.0,
            mode='original',
            num_classes=1000,
            type='LabelSmoothLoss'),
        num_classes=1000,
        topk=(
            1,
            5,
        ),
        type='LinearClsHead'),
    neck=dict(type='GlobalAveragePooling'),
    type='ImageClassifier')
test_cfg = dict()
test_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/val.txt',
        data_prefix='val',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
            dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    _scope_='mmcls', topk=(
        1,
        5,
    ), type='Accuracy')
test_pipeline = [
    dict(_scope_='mmcls', type='LoadImageFromFile'),
    dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
    dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
    dict(_scope_='mmcls', type='PackClsInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=300)
train_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/train.txt',
        data_prefix='train',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', scale=224, type='RandomResizedCrop'),
            dict(
                _scope_='mmcls',
                brightness=0.4,
                contrast=0.4,
                saturation=0.4,
                type='ColorJitter'),
            dict(
                _scope_='mmcls',
                direction='horizontal',
                prob=0.5,
                type='RandomFlip'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(_scope_='mmcls', type='LoadImageFromFile'),
    dict(_scope_='mmcls', scale=224, type='RandomResizedCrop'),
    dict(
        _scope_='mmcls',
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        type='ColorJitter'),
    dict(_scope_='mmcls', direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(_scope_='mmcls', type='PackClsInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=56,
    dataset=dict(
        _scope_='mmrazor',
        ann_file='meta/val.txt',
        data_prefix='val',
        data_root='data/imagenet',
        pipeline=[
            dict(_scope_='mmcls', type='LoadImageFromFile'),
            dict(_scope_='mmcls', edge='short', scale=256, type='ResizeEdge'),
            dict(_scope_='mmcls', crop_size=224, type='CenterCrop'),
            dict(_scope_='mmcls', type='PackClsInputs'),
        ],
        type='mmcls.ImageNet'),
    num_workers=10,
    persistent_workers=True,
    sampler=dict(_scope_='mmrazor', shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    _scope_='mmcls', topk=(
        1,
        5,
    ), type='Accuracy')
vis_backends = [
    dict(_scope_='mmcls', type='LocalVisBackend'),
]
visualizer = dict(
    _scope_='mmcls',
    type='ClsVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'my_nas_supernet'

2023/10/05 20:25:01 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/10/05 20:25:01 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.conv1.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.conv1.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.conv.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.identity.downsample.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.layer7.0._candidates.identity.downsample.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.conv2.bn.weight:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.backbone.conv2.bn.bias:weight_decay=0.0
2023/10/05 20:25:04 - mmengine - INFO - paramwise_options -- architecture.head.fc.bias:weight_decay=0.0
Name of parameter - Initialization information

architecture.backbone.conv1.conv.weight - torch.Size([40, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

architecture.backbone.conv1.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv1.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.conv.weight - torch.Size([40, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.depthwise_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.conv.weight - torch.Size([24, 40, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer1.0._candidates.mb_k3e1.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([72, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([72, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 72, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([144, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([144, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([144, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([144]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 144, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.identity.downsample.conv.weight - torch.Size([32, 24, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.0._candidates.identity.downsample.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.0._candidates.identity.downsample.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([32, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([32, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer2.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([96, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([96, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([96, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 96, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([192, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([192, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([192, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 192, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.identity.downsample.conv.weight - torch.Size([56, 32, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.0._candidates.identity.downsample.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.0._candidates.identity.downsample.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([56, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([56, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer3.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([56]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([168, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([168, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([168, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([168, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 168, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([336, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.identity.downsample.conv.weight - torch.Size([112, 56, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.0._candidates.identity.downsample.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.0._candidates.identity.downsample.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([112, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer4.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([336, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([336, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([336, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([336, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([336]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 336, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([672, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 672, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.identity.downsample.conv.weight - torch.Size([128, 112, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.0._candidates.identity.downsample.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.0._candidates.identity.downsample.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([128, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([128, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer5.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([384, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([384, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([384, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([384, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 384, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([768, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.identity.downsample.conv.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.0._candidates.identity.downsample.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.0._candidates.identity.downsample.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.1._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.2._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([256, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([256, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer6.3._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.conv.weight - torch.Size([768, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.conv.weight - torch.Size([768, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.conv.weight - torch.Size([768, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.expand_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.conv.weight - torch.Size([768, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.depthwise_conv.bn.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.conv.weight - torch.Size([432, 768, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e3.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k3e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 5, 5]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k5e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.conv.weight - torch.Size([1536, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.expand_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.conv.weight - torch.Size([1536, 1, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.weight - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.depthwise_conv.bn.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.conv.weight - torch.Size([432, 1536, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.mb_k7e6.linear_conv.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.identity.downsample.conv.weight - torch.Size([432, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

architecture.backbone.layer7.0._candidates.identity.downsample.bn.weight - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.layer7.0._candidates.identity.downsample.bn.bias - torch.Size([432]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv2.conv.weight - torch.Size([1728, 432, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

architecture.backbone.conv2.bn.weight - torch.Size([1728]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.backbone.conv2.bn.bias - torch.Size([1728]): 
The value is the same before and after calling `init_weights` of SPOS  

architecture.head.fc.weight - torch.Size([1000, 1728]): 
NormalInit: mean=0, std=0.01, bias=0 

architecture.head.fc.bias - torch.Size([1000]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/10/05 20:25:06 - mmengine - INFO - Auto resumed from the latest checkpoint /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_supernet/epoch_44.pth.
2023/10/05 20:25:07 - mmengine - INFO - Load checkpoint from /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_supernet/epoch_44.pth
2023/10/05 20:25:07 - mmengine - INFO - resumed epoch: 44, iter: 1006632
2023/10/05 20:25:07 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/10/05 20:25:07 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/10/05 20:25:07 - mmengine - INFO - Checkpoints will be saved to /home/marcinwsl/dev/WUT_EE_bachelor_thesis_code/Pytorch/src/mmrazor/my_nas_supernet.
2023/10/05 20:25:32 - mmengine - INFO - Epoch(train)  [45][  100/22878]  base_lr: 3.8399e-02 lr: 3.8399e-02  eta: 16 days, 21:30:37  time: 0.1538  data_time: 0.0285  memory: 8050  loss: 3.3683
2023/10/05 20:25:48 - mmengine - INFO - Epoch(train)  [45][  200/22878]  base_lr: 3.8399e-02 lr: 3.8399e-02  eta: 13 days, 18:47:22  time: 0.1537  data_time: 0.0272  memory: 7692  loss: 3.3957
2023/10/05 20:26:04 - mmengine - INFO - Epoch(train)  [45][  300/22878]  base_lr: 3.8398e-02 lr: 3.8398e-02  eta: 12 days, 16:29:57  time: 0.1455  data_time: 0.0296  memory: 7614  loss: 3.4455
2023/10/05 20:26:14 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:26:19 - mmengine - INFO - Epoch(train)  [45][  400/22878]  base_lr: 3.8397e-02 lr: 3.8397e-02  eta: 12 days, 4:19:10  time: 0.1523  data_time: 0.0304  memory: 7720  loss: 3.3674
2023/10/05 20:26:35 - mmengine - INFO - Epoch(train)  [45][  500/22878]  base_lr: 3.8397e-02 lr: 3.8397e-02  eta: 11 days, 21:16:19  time: 0.1482  data_time: 0.0281  memory: 7983  loss: 3.4355
2023/10/05 20:26:51 - mmengine - INFO - Epoch(train)  [45][  600/22878]  base_lr: 3.8396e-02 lr: 3.8396e-02  eta: 11 days, 16:36:19  time: 0.1623  data_time: 0.0279  memory: 7675  loss: 3.3869
2023/10/05 20:27:07 - mmengine - INFO - Epoch(train)  [45][  700/22878]  base_lr: 3.8395e-02 lr: 3.8395e-02  eta: 11 days, 13:33:53  time: 0.1685  data_time: 0.0275  memory: 8172  loss: 3.4173
2023/10/05 20:27:23 - mmengine - INFO - Epoch(train)  [45][  800/22878]  base_lr: 3.8395e-02 lr: 3.8395e-02  eta: 11 days, 10:18:41  time: 0.1620  data_time: 0.0279  memory: 7795  loss: 3.4554
2023/10/05 20:27:39 - mmengine - INFO - Epoch(train)  [45][  900/22878]  base_lr: 3.8394e-02 lr: 3.8394e-02  eta: 11 days, 8:03:41  time: 0.1613  data_time: 0.0350  memory: 7940  loss: 3.3279
2023/10/05 20:27:54 - mmengine - INFO - Epoch(train)  [45][ 1000/22878]  base_lr: 3.8393e-02 lr: 3.8393e-02  eta: 11 days, 5:56:58  time: 0.1499  data_time: 0.0307  memory: 7918  loss: 3.3783
2023/10/05 20:28:10 - mmengine - INFO - Epoch(train)  [45][ 1100/22878]  base_lr: 3.8393e-02 lr: 3.8393e-02  eta: 11 days, 4:42:32  time: 0.1545  data_time: 0.0279  memory: 7705  loss: 3.3321
2023/10/05 20:28:25 - mmengine - INFO - Epoch(train)  [45][ 1200/22878]  base_lr: 3.8392e-02 lr: 3.8392e-02  eta: 11 days, 3:15:39  time: 0.1502  data_time: 0.0270  memory: 7673  loss: 3.4076
2023/10/05 20:28:41 - mmengine - INFO - Epoch(train)  [45][ 1300/22878]  base_lr: 3.8391e-02 lr: 3.8391e-02  eta: 11 days, 2:23:59  time: 0.1553  data_time: 0.0305  memory: 7713  loss: 3.4779
2023/10/05 20:28:52 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:28:57 - mmengine - INFO - Epoch(train)  [45][ 1400/22878]  base_lr: 3.8391e-02 lr: 3.8391e-02  eta: 11 days, 1:46:57  time: 0.1586  data_time: 0.0269  memory: 7789  loss: 3.4969
2023/10/05 20:29:13 - mmengine - INFO - Epoch(train)  [45][ 1500/22878]  base_lr: 3.8390e-02 lr: 3.8390e-02  eta: 11 days, 1:08:42  time: 0.1564  data_time: 0.0283  memory: 7671  loss: 3.4260
2023/10/05 20:29:29 - mmengine - INFO - Epoch(train)  [45][ 1600/22878]  base_lr: 3.8390e-02 lr: 3.8390e-02  eta: 11 days, 0:19:13  time: 0.1502  data_time: 0.0293  memory: 7943  loss: 3.5795
2023/10/05 20:29:45 - mmengine - INFO - Epoch(train)  [45][ 1700/22878]  base_lr: 3.8389e-02 lr: 3.8389e-02  eta: 11 days, 0:10:40  time: 0.1537  data_time: 0.0294  memory: 7687  loss: 3.2945
2023/10/05 20:30:01 - mmengine - INFO - Epoch(train)  [45][ 1800/22878]  base_lr: 3.8388e-02 lr: 3.8388e-02  eta: 10 days, 23:43:21  time: 0.1608  data_time: 0.0273  memory: 8040  loss: 3.3869
2023/10/05 20:30:16 - mmengine - INFO - Epoch(train)  [45][ 1900/22878]  base_lr: 3.8388e-02 lr: 3.8388e-02  eta: 10 days, 23:03:22  time: 0.1539  data_time: 0.0279  memory: 7667  loss: 3.5133
2023/10/05 20:30:32 - mmengine - INFO - Epoch(train)  [45][ 2000/22878]  base_lr: 3.8387e-02 lr: 3.8387e-02  eta: 10 days, 22:44:29  time: 0.1570  data_time: 0.0302  memory: 7640  loss: 3.4402
2023/10/05 20:30:48 - mmengine - INFO - Epoch(train)  [45][ 2100/22878]  base_lr: 3.8386e-02 lr: 3.8386e-02  eta: 10 days, 22:34:45  time: 0.1677  data_time: 0.0292  memory: 7824  loss: 3.3294
2023/10/05 20:31:04 - mmengine - INFO - Epoch(train)  [45][ 2200/22878]  base_lr: 3.8386e-02 lr: 3.8386e-02  eta: 10 days, 22:23:04  time: 0.1656  data_time: 0.0288  memory: 8183  loss: 3.3361
2023/10/05 20:31:20 - mmengine - INFO - Epoch(train)  [45][ 2300/22878]  base_lr: 3.8385e-02 lr: 3.8385e-02  eta: 10 days, 22:08:07  time: 0.1506  data_time: 0.0305  memory: 7907  loss: 3.4580
2023/10/05 20:31:31 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:31:36 - mmengine - INFO - Epoch(train)  [45][ 2400/22878]  base_lr: 3.8384e-02 lr: 3.8384e-02  eta: 10 days, 21:49:09  time: 0.1507  data_time: 0.0293  memory: 8052  loss: 3.3684
2023/10/05 20:31:52 - mmengine - INFO - Epoch(train)  [45][ 2500/22878]  base_lr: 3.8384e-02 lr: 3.8384e-02  eta: 10 days, 21:39:34  time: 0.1647  data_time: 0.0307  memory: 7994  loss: 3.4641
2023/10/05 20:32:08 - mmengine - INFO - Epoch(train)  [45][ 2600/22878]  base_lr: 3.8383e-02 lr: 3.8383e-02  eta: 10 days, 21:16:36  time: 0.1516  data_time: 0.0281  memory: 7548  loss: 3.4197
2023/10/05 20:32:24 - mmengine - INFO - Epoch(train)  [45][ 2700/22878]  base_lr: 3.8382e-02 lr: 3.8382e-02  eta: 10 days, 21:16:38  time: 0.1612  data_time: 0.0277  memory: 7919  loss: 3.4209
2023/10/05 20:32:40 - mmengine - INFO - Epoch(train)  [45][ 2800/22878]  base_lr: 3.8382e-02 lr: 3.8382e-02  eta: 10 days, 21:07:09  time: 0.1629  data_time: 0.0289  memory: 7883  loss: 3.3053
2023/10/05 20:32:55 - mmengine - INFO - Epoch(train)  [45][ 2900/22878]  base_lr: 3.8381e-02 lr: 3.8381e-02  eta: 10 days, 20:53:28  time: 0.1621  data_time: 0.0284  memory: 7731  loss: 3.4608
2023/10/05 20:33:11 - mmengine - INFO - Epoch(train)  [45][ 3000/22878]  base_lr: 3.8380e-02 lr: 3.8380e-02  eta: 10 days, 20:39:41  time: 0.1427  data_time: 0.0282  memory: 7331  loss: 3.3557
2023/10/05 20:33:27 - mmengine - INFO - Epoch(train)  [45][ 3100/22878]  base_lr: 3.8380e-02 lr: 3.8380e-02  eta: 10 days, 20:36:57  time: 0.1629  data_time: 0.0308  memory: 7942  loss: 3.4440
2023/10/05 20:33:43 - mmengine - INFO - Epoch(train)  [45][ 3200/22878]  base_lr: 3.8379e-02 lr: 3.8379e-02  eta: 10 days, 20:26:20  time: 0.1521  data_time: 0.0271  memory: 7944  loss: 3.4476
2023/10/05 20:33:58 - mmengine - INFO - Epoch(train)  [45][ 3300/22878]  base_lr: 3.8378e-02 lr: 3.8378e-02  eta: 10 days, 19:58:16  time: 0.1422  data_time: 0.0255  memory: 7712  loss: 3.4730
2023/10/05 20:34:08 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:34:13 - mmengine - INFO - Epoch(train)  [45][ 3400/22878]  base_lr: 3.8378e-02 lr: 3.8378e-02  eta: 10 days, 19:29:47  time: 0.1474  data_time: 0.0243  memory: 7594  loss: 3.4805
2023/10/05 20:34:28 - mmengine - INFO - Epoch(train)  [45][ 3500/22878]  base_lr: 3.8377e-02 lr: 3.8377e-02  eta: 10 days, 19:02:57  time: 0.1542  data_time: 0.0237  memory: 7774  loss: 3.5488
2023/10/05 20:34:44 - mmengine - INFO - Epoch(train)  [45][ 3600/22878]  base_lr: 3.8376e-02 lr: 3.8376e-02  eta: 10 days, 18:48:23  time: 0.1576  data_time: 0.0240  memory: 7959  loss: 3.3555
2023/10/05 20:34:59 - mmengine - INFO - Epoch(train)  [45][ 3700/22878]  base_lr: 3.8376e-02 lr: 3.8376e-02  eta: 10 days, 18:27:15  time: 0.1508  data_time: 0.0226  memory: 7762  loss: 3.4898
2023/10/05 20:35:14 - mmengine - INFO - Epoch(train)  [45][ 3800/22878]  base_lr: 3.8375e-02 lr: 3.8375e-02  eta: 10 days, 18:11:28  time: 0.1558  data_time: 0.0234  memory: 7786  loss: 3.3258
2023/10/05 20:35:30 - mmengine - INFO - Epoch(train)  [45][ 3900/22878]  base_lr: 3.8374e-02 lr: 3.8374e-02  eta: 10 days, 17:52:52  time: 0.1605  data_time: 0.0231  memory: 7427  loss: 3.2510
2023/10/05 20:35:46 - mmengine - INFO - Epoch(train)  [45][ 4000/22878]  base_lr: 3.8374e-02 lr: 3.8374e-02  eta: 10 days, 17:53:13  time: 0.1518  data_time: 0.0240  memory: 7913  loss: 3.1903
2023/10/05 20:36:01 - mmengine - INFO - Epoch(train)  [45][ 4100/22878]  base_lr: 3.8373e-02 lr: 3.8373e-02  eta: 10 days, 17:37:38  time: 0.1539  data_time: 0.0248  memory: 8079  loss: 3.5623
2023/10/05 20:36:16 - mmengine - INFO - Epoch(train)  [45][ 4200/22878]  base_lr: 3.8372e-02 lr: 3.8372e-02  eta: 10 days, 17:23:56  time: 0.1577  data_time: 0.0253  memory: 7676  loss: 3.5185
2023/10/05 20:36:32 - mmengine - INFO - Epoch(train)  [45][ 4300/22878]  base_lr: 3.8372e-02 lr: 3.8372e-02  eta: 10 days, 17:11:43  time: 0.1503  data_time: 0.0241  memory: 7867  loss: 3.4346
2023/10/05 20:36:42 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:36:47 - mmengine - INFO - Epoch(train)  [45][ 4400/22878]  base_lr: 3.8371e-02 lr: 3.8371e-02  eta: 10 days, 16:55:49  time: 0.1506  data_time: 0.0245  memory: 7722  loss: 3.3120
2023/10/05 20:37:03 - mmengine - INFO - Epoch(train)  [45][ 4500/22878]  base_lr: 3.8371e-02 lr: 3.8371e-02  eta: 10 days, 16:52:17  time: 0.1534  data_time: 0.0242  memory: 7857  loss: 3.5574
2023/10/05 20:37:18 - mmengine - INFO - Epoch(train)  [45][ 4600/22878]  base_lr: 3.8370e-02 lr: 3.8370e-02  eta: 10 days, 16:41:36  time: 0.1515  data_time: 0.0247  memory: 7613  loss: 3.5695
2023/10/05 20:37:34 - mmengine - INFO - Epoch(train)  [45][ 4700/22878]  base_lr: 3.8369e-02 lr: 3.8369e-02  eta: 10 days, 16:30:41  time: 0.1553  data_time: 0.0228  memory: 7509  loss: 3.3301
2023/10/05 20:37:49 - mmengine - INFO - Epoch(train)  [45][ 4800/22878]  base_lr: 3.8369e-02 lr: 3.8369e-02  eta: 10 days, 16:27:38  time: 0.1455  data_time: 0.0254  memory: 8123  loss: 3.3721
2023/10/05 20:38:05 - mmengine - INFO - Epoch(train)  [45][ 4900/22878]  base_lr: 3.8368e-02 lr: 3.8368e-02  eta: 10 days, 16:14:32  time: 0.1564  data_time: 0.0249  memory: 7427  loss: 3.4401
2023/10/05 20:38:20 - mmengine - INFO - Epoch(train)  [45][ 5000/22878]  base_lr: 3.8367e-02 lr: 3.8367e-02  eta: 10 days, 16:05:27  time: 0.1488  data_time: 0.0254  memory: 7671  loss: 3.4750
2023/10/05 20:38:35 - mmengine - INFO - Epoch(train)  [45][ 5100/22878]  base_lr: 3.8367e-02 lr: 3.8367e-02  eta: 10 days, 15:50:32  time: 0.1462  data_time: 0.0229  memory: 7450  loss: 3.3306
2023/10/05 20:38:50 - mmengine - INFO - Epoch(train)  [45][ 5200/22878]  base_lr: 3.8366e-02 lr: 3.8366e-02  eta: 10 days, 15:42:08  time: 0.1498  data_time: 0.0257  memory: 8017  loss: 3.5287
2023/10/05 20:39:06 - mmengine - INFO - Epoch(train)  [45][ 5300/22878]  base_lr: 3.8365e-02 lr: 3.8365e-02  eta: 10 days, 15:36:37  time: 0.1451  data_time: 0.0235  memory: 8055  loss: 3.4630
2023/10/05 20:39:16 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:39:21 - mmengine - INFO - Epoch(train)  [45][ 5400/22878]  base_lr: 3.8365e-02 lr: 3.8365e-02  eta: 10 days, 15:28:42  time: 0.1522  data_time: 0.0249  memory: 7604  loss: 3.4564
2023/10/05 20:39:37 - mmengine - INFO - Epoch(train)  [45][ 5500/22878]  base_lr: 3.8364e-02 lr: 3.8364e-02  eta: 10 days, 15:21:52  time: 0.1510  data_time: 0.0248  memory: 8149  loss: 3.4574
2023/10/05 20:39:52 - mmengine - INFO - Epoch(train)  [45][ 5600/22878]  base_lr: 3.8363e-02 lr: 3.8363e-02  eta: 10 days, 15:14:31  time: 0.1513  data_time: 0.0238  memory: 7872  loss: 3.4774
2023/10/05 20:40:08 - mmengine - INFO - Epoch(train)  [45][ 5700/22878]  base_lr: 3.8363e-02 lr: 3.8363e-02  eta: 10 days, 15:06:30  time: 0.1510  data_time: 0.0242  memory: 7580  loss: 3.5332
2023/10/05 20:40:23 - mmengine - INFO - Epoch(train)  [45][ 5800/22878]  base_lr: 3.8362e-02 lr: 3.8362e-02  eta: 10 days, 15:02:03  time: 0.1545  data_time: 0.0231  memory: 7816  loss: 3.4813
2023/10/05 20:40:39 - mmengine - INFO - Epoch(train)  [45][ 5900/22878]  base_lr: 3.8361e-02 lr: 3.8361e-02  eta: 10 days, 14:57:40  time: 0.1645  data_time: 0.0241  memory: 7731  loss: 3.3395
2023/10/05 20:40:54 - mmengine - INFO - Epoch(train)  [45][ 6000/22878]  base_lr: 3.8361e-02 lr: 3.8361e-02  eta: 10 days, 14:55:57  time: 0.1489  data_time: 0.0262  memory: 7909  loss: 3.3307
2023/10/05 20:41:10 - mmengine - INFO - Epoch(train)  [45][ 6100/22878]  base_lr: 3.8360e-02 lr: 3.8360e-02  eta: 10 days, 14:54:12  time: 0.1631  data_time: 0.0252  memory: 7844  loss: 3.4135
2023/10/05 20:41:26 - mmengine - INFO - Epoch(train)  [45][ 6200/22878]  base_lr: 3.8359e-02 lr: 3.8359e-02  eta: 10 days, 14:52:50  time: 0.1482  data_time: 0.0250  memory: 7817  loss: 3.4820
2023/10/05 20:41:41 - mmengine - INFO - Epoch(train)  [45][ 6300/22878]  base_lr: 3.8359e-02 lr: 3.8359e-02  eta: 10 days, 14:45:45  time: 0.1564  data_time: 0.0254  memory: 8027  loss: 3.3219
2023/10/05 20:41:52 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:41:57 - mmengine - INFO - Epoch(train)  [45][ 6400/22878]  base_lr: 3.8358e-02 lr: 3.8358e-02  eta: 10 days, 14:45:04  time: 0.1583  data_time: 0.0243  memory: 7738  loss: 3.3431
2023/10/05 20:42:13 - mmengine - INFO - Epoch(train)  [45][ 6500/22878]  base_lr: 3.8357e-02 lr: 3.8357e-02  eta: 10 days, 14:42:37  time: 0.1481  data_time: 0.0245  memory: 7780  loss: 3.4518
2023/10/05 20:42:28 - mmengine - INFO - Epoch(train)  [45][ 6600/22878]  base_lr: 3.8357e-02 lr: 3.8357e-02  eta: 10 days, 14:40:13  time: 0.1587  data_time: 0.0254  memory: 7688  loss: 3.4321
2023/10/05 20:42:44 - mmengine - INFO - Epoch(train)  [45][ 6700/22878]  base_lr: 3.8356e-02 lr: 3.8356e-02  eta: 10 days, 14:36:57  time: 0.1480  data_time: 0.0255  memory: 7642  loss: 3.4817
2023/10/05 20:42:59 - mmengine - INFO - Epoch(train)  [45][ 6800/22878]  base_lr: 3.8355e-02 lr: 3.8355e-02  eta: 10 days, 14:34:55  time: 0.1550  data_time: 0.0267  memory: 7899  loss: 3.2636
2023/10/05 20:43:15 - mmengine - INFO - Epoch(train)  [45][ 6900/22878]  base_lr: 3.8355e-02 lr: 3.8355e-02  eta: 10 days, 14:33:32  time: 0.1513  data_time: 0.0309  memory: 7727  loss: 3.6295
2023/10/05 20:43:30 - mmengine - INFO - Epoch(train)  [45][ 7000/22878]  base_lr: 3.8354e-02 lr: 3.8354e-02  eta: 10 days, 14:27:12  time: 0.1477  data_time: 0.0260  memory: 7493  loss: 3.5837
2023/10/05 20:43:46 - mmengine - INFO - Epoch(train)  [45][ 7100/22878]  base_lr: 3.8353e-02 lr: 3.8353e-02  eta: 10 days, 14:21:02  time: 0.1492  data_time: 0.0262  memory: 7698  loss: 3.4084
2023/10/05 20:44:01 - mmengine - INFO - Epoch(train)  [45][ 7200/22878]  base_lr: 3.8353e-02 lr: 3.8353e-02  eta: 10 days, 14:19:03  time: 0.1607  data_time: 0.0254  memory: 7919  loss: 3.4304
2023/10/05 20:44:17 - mmengine - INFO - Epoch(train)  [45][ 7300/22878]  base_lr: 3.8352e-02 lr: 3.8352e-02  eta: 10 days, 14:18:30  time: 0.1490  data_time: 0.0241  memory: 8129  loss: 3.5625
2023/10/05 20:44:28 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:44:33 - mmengine - INFO - Epoch(train)  [45][ 7400/22878]  base_lr: 3.8351e-02 lr: 3.8351e-02  eta: 10 days, 14:17:06  time: 0.1547  data_time: 0.0275  memory: 7865  loss: 3.3191
2023/10/05 20:44:48 - mmengine - INFO - Epoch(train)  [45][ 7500/22878]  base_lr: 3.8351e-02 lr: 3.8351e-02  eta: 10 days, 14:09:17  time: 0.1447  data_time: 0.0250  memory: 7747  loss: 3.4903
2023/10/05 20:45:03 - mmengine - INFO - Epoch(train)  [45][ 7600/22878]  base_lr: 3.8350e-02 lr: 3.8350e-02  eta: 10 days, 14:07:35  time: 0.1543  data_time: 0.0271  memory: 7777  loss: 3.4723
2023/10/05 20:45:19 - mmengine - INFO - Epoch(train)  [45][ 7700/22878]  base_lr: 3.8350e-02 lr: 3.8350e-02  eta: 10 days, 14:02:27  time: 0.1415  data_time: 0.0261  memory: 7770  loss: 3.4915
2023/10/05 20:45:34 - mmengine - INFO - Epoch(train)  [45][ 7800/22878]  base_lr: 3.8349e-02 lr: 3.8349e-02  eta: 10 days, 13:57:41  time: 0.1482  data_time: 0.0280  memory: 7853  loss: 3.5213
2023/10/05 20:45:50 - mmengine - INFO - Epoch(train)  [45][ 7900/22878]  base_lr: 3.8348e-02 lr: 3.8348e-02  eta: 10 days, 13:53:34  time: 0.1549  data_time: 0.0249  memory: 7537  loss: 3.4298
2023/10/05 20:46:05 - mmengine - INFO - Epoch(train)  [45][ 8000/22878]  base_lr: 3.8348e-02 lr: 3.8348e-02  eta: 10 days, 13:53:27  time: 0.1583  data_time: 0.0276  memory: 7665  loss: 3.3189
2023/10/05 20:46:21 - mmengine - INFO - Epoch(train)  [45][ 8100/22878]  base_lr: 3.8347e-02 lr: 3.8347e-02  eta: 10 days, 13:50:24  time: 0.1534  data_time: 0.0270  memory: 7902  loss: 3.4352
2023/10/05 20:46:36 - mmengine - INFO - Epoch(train)  [45][ 8200/22878]  base_lr: 3.8346e-02 lr: 3.8346e-02  eta: 10 days, 13:47:07  time: 0.1491  data_time: 0.0243  memory: 7977  loss: 3.4956
2023/10/05 20:46:52 - mmengine - INFO - Epoch(train)  [45][ 8300/22878]  base_lr: 3.8346e-02 lr: 3.8346e-02  eta: 10 days, 13:48:09  time: 0.1601  data_time: 0.0259  memory: 7777  loss: 3.5102
2023/10/05 20:47:03 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:47:08 - mmengine - INFO - Epoch(train)  [45][ 8400/22878]  base_lr: 3.8345e-02 lr: 3.8345e-02  eta: 10 days, 13:45:34  time: 0.1608  data_time: 0.0324  memory: 8100  loss: 3.6572
2023/10/05 20:47:23 - mmengine - INFO - Epoch(train)  [45][ 8500/22878]  base_lr: 3.8344e-02 lr: 3.8344e-02  eta: 10 days, 13:43:43  time: 0.1512  data_time: 0.0256  memory: 7609  loss: 3.5698
2023/10/05 20:47:39 - mmengine - INFO - Epoch(train)  [45][ 8600/22878]  base_lr: 3.8344e-02 lr: 3.8344e-02  eta: 10 days, 13:41:31  time: 0.1460  data_time: 0.0258  memory: 8015  loss: 3.4548
2023/10/05 20:47:54 - mmengine - INFO - Epoch(train)  [45][ 8700/22878]  base_lr: 3.8343e-02 lr: 3.8343e-02  eta: 10 days, 13:36:21  time: 0.1521  data_time: 0.0257  memory: 7854  loss: 3.3164
2023/10/05 20:48:10 - mmengine - INFO - Epoch(train)  [45][ 8800/22878]  base_lr: 3.8342e-02 lr: 3.8342e-02  eta: 10 days, 13:37:15  time: 0.1588  data_time: 0.0249  memory: 7879  loss: 3.4201
2023/10/05 20:48:25 - mmengine - INFO - Epoch(train)  [45][ 8900/22878]  base_lr: 3.8342e-02 lr: 3.8342e-02  eta: 10 days, 13:32:36  time: 0.1521  data_time: 0.0249  memory: 7761  loss: 3.3799
2023/10/05 20:48:41 - mmengine - INFO - Epoch(train)  [45][ 9000/22878]  base_lr: 3.8341e-02 lr: 3.8341e-02  eta: 10 days, 13:32:26  time: 0.1547  data_time: 0.0273  memory: 7749  loss: 3.4501
2023/10/05 20:48:57 - mmengine - INFO - Epoch(train)  [45][ 9100/22878]  base_lr: 3.8340e-02 lr: 3.8340e-02  eta: 10 days, 13:31:36  time: 0.1577  data_time: 0.0258  memory: 8194  loss: 3.4213
2023/10/05 20:49:12 - mmengine - INFO - Epoch(train)  [45][ 9200/22878]  base_lr: 3.8340e-02 lr: 3.8340e-02  eta: 10 days, 13:29:58  time: 0.1587  data_time: 0.0275  memory: 7702  loss: 3.2742
2023/10/05 20:49:28 - mmengine - INFO - Epoch(train)  [45][ 9300/22878]  base_lr: 3.8339e-02 lr: 3.8339e-02  eta: 10 days, 13:28:16  time: 0.1570  data_time: 0.0262  memory: 7838  loss: 3.4720
2023/10/05 20:49:38 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:49:43 - mmengine - INFO - Epoch(train)  [45][ 9400/22878]  base_lr: 3.8338e-02 lr: 3.8338e-02  eta: 10 days, 13:24:28  time: 0.1533  data_time: 0.0247  memory: 7636  loss: 3.2869
2023/10/05 20:49:58 - mmengine - INFO - Epoch(train)  [45][ 9500/22878]  base_lr: 3.8338e-02 lr: 3.8338e-02  eta: 10 days, 13:19:27  time: 0.1596  data_time: 0.0262  memory: 7745  loss: 3.4134
2023/10/05 20:50:14 - mmengine - INFO - Epoch(train)  [45][ 9600/22878]  base_lr: 3.8337e-02 lr: 3.8337e-02  eta: 10 days, 13:19:54  time: 0.1522  data_time: 0.0249  memory: 7975  loss: 3.4467
2023/10/05 20:50:29 - mmengine - INFO - Epoch(train)  [45][ 9700/22878]  base_lr: 3.8336e-02 lr: 3.8336e-02  eta: 10 days, 13:15:40  time: 0.1549  data_time: 0.0265  memory: 7991  loss: 3.4508
2023/10/05 20:50:45 - mmengine - INFO - Epoch(train)  [45][ 9800/22878]  base_lr: 3.8336e-02 lr: 3.8336e-02  eta: 10 days, 13:13:26  time: 0.1579  data_time: 0.0235  memory: 7693  loss: 3.3243
2023/10/05 20:51:00 - mmengine - INFO - Epoch(train)  [45][ 9900/22878]  base_lr: 3.8335e-02 lr: 3.8335e-02  eta: 10 days, 13:12:06  time: 0.1561  data_time: 0.0301  memory: 7551  loss: 3.4483
2023/10/05 20:51:16 - mmengine - INFO - Epoch(train)  [45][10000/22878]  base_lr: 3.8334e-02 lr: 3.8334e-02  eta: 10 days, 13:11:11  time: 0.1572  data_time: 0.0242  memory: 7874  loss: 3.3455
2023/10/05 20:51:32 - mmengine - INFO - Epoch(train)  [45][10100/22878]  base_lr: 3.8334e-02 lr: 3.8334e-02  eta: 10 days, 13:09:19  time: 0.1566  data_time: 0.0263  memory: 8040  loss: 3.4271
2023/10/05 20:51:47 - mmengine - INFO - Epoch(train)  [45][10200/22878]  base_lr: 3.8333e-02 lr: 3.8333e-02  eta: 10 days, 13:02:59  time: 0.1565  data_time: 0.0257  memory: 7500  loss: 3.5136
2023/10/05 20:52:02 - mmengine - INFO - Epoch(train)  [45][10300/22878]  base_lr: 3.8332e-02 lr: 3.8332e-02  eta: 10 days, 13:01:07  time: 0.1578  data_time: 0.0258  memory: 8008  loss: 3.3187
2023/10/05 20:52:13 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:52:17 - mmengine - INFO - Epoch(train)  [45][10400/22878]  base_lr: 3.8332e-02 lr: 3.8332e-02  eta: 10 days, 12:56:11  time: 0.1435  data_time: 0.0254  memory: 7789  loss: 3.3881
2023/10/05 20:52:33 - mmengine - INFO - Epoch(train)  [45][10500/22878]  base_lr: 3.8331e-02 lr: 3.8331e-02  eta: 10 days, 12:54:30  time: 0.1494  data_time: 0.0254  memory: 7613  loss: 3.5233
2023/10/05 20:52:48 - mmengine - INFO - Epoch(train)  [45][10600/22878]  base_lr: 3.8331e-02 lr: 3.8331e-02  eta: 10 days, 12:52:10  time: 0.1536  data_time: 0.0254  memory: 8128  loss: 3.3249
2023/10/05 20:53:04 - mmengine - INFO - Epoch(train)  [45][10700/22878]  base_lr: 3.8330e-02 lr: 3.8330e-02  eta: 10 days, 12:49:51  time: 0.1524  data_time: 0.0238  memory: 7703  loss: 3.5253
2023/10/05 20:53:19 - mmengine - INFO - Epoch(train)  [45][10800/22878]  base_lr: 3.8329e-02 lr: 3.8329e-02  eta: 10 days, 12:46:54  time: 0.1493  data_time: 0.0249  memory: 8035  loss: 3.4529
2023/10/05 20:53:34 - mmengine - INFO - Epoch(train)  [45][10900/22878]  base_lr: 3.8329e-02 lr: 3.8329e-02  eta: 10 days, 12:42:41  time: 0.1569  data_time: 0.0271  memory: 7649  loss: 3.3994
2023/10/05 20:53:50 - mmengine - INFO - Epoch(train)  [45][11000/22878]  base_lr: 3.8328e-02 lr: 3.8328e-02  eta: 10 days, 12:39:02  time: 0.1529  data_time: 0.0254  memory: 7800  loss: 3.3030
2023/10/05 20:54:05 - mmengine - INFO - Epoch(train)  [45][11100/22878]  base_lr: 3.8327e-02 lr: 3.8327e-02  eta: 10 days, 12:38:40  time: 0.1487  data_time: 0.0267  memory: 7583  loss: 3.2940
2023/10/05 20:54:21 - mmengine - INFO - Epoch(train)  [45][11200/22878]  base_lr: 3.8327e-02 lr: 3.8327e-02  eta: 10 days, 12:36:45  time: 0.1492  data_time: 0.0259  memory: 7550  loss: 3.5516
2023/10/05 20:54:36 - mmengine - INFO - Epoch(train)  [45][11300/22878]  base_lr: 3.8326e-02 lr: 3.8326e-02  eta: 10 days, 12:34:44  time: 0.1559  data_time: 0.0260  memory: 8034  loss: 3.4449
2023/10/05 20:54:47 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:54:52 - mmengine - INFO - Epoch(train)  [45][11400/22878]  base_lr: 3.8325e-02 lr: 3.8325e-02  eta: 10 days, 12:32:35  time: 0.1635  data_time: 0.0318  memory: 8027  loss: 3.4376
2023/10/05 20:55:07 - mmengine - INFO - Epoch(train)  [45][11500/22878]  base_lr: 3.8325e-02 lr: 3.8325e-02  eta: 10 days, 12:28:14  time: 0.1477  data_time: 0.0277  memory: 7799  loss: 3.5193
2023/10/05 20:55:22 - mmengine - INFO - Epoch(train)  [45][11600/22878]  base_lr: 3.8324e-02 lr: 3.8324e-02  eta: 10 days, 12:25:47  time: 0.1579  data_time: 0.0249  memory: 7840  loss: 3.3953
2023/10/05 20:55:37 - mmengine - INFO - Epoch(train)  [45][11700/22878]  base_lr: 3.8323e-02 lr: 3.8323e-02  eta: 10 days, 12:21:35  time: 0.1496  data_time: 0.0250  memory: 7638  loss: 3.2656
2023/10/05 20:55:52 - mmengine - INFO - Epoch(train)  [45][11800/22878]  base_lr: 3.8323e-02 lr: 3.8323e-02  eta: 10 days, 12:15:41  time: 0.1483  data_time: 0.0261  memory: 8029  loss: 3.4209
2023/10/05 20:56:08 - mmengine - INFO - Epoch(train)  [45][11900/22878]  base_lr: 3.8322e-02 lr: 3.8322e-02  eta: 10 days, 12:13:34  time: 0.1596  data_time: 0.0263  memory: 8095  loss: 3.5242
2023/10/05 20:56:23 - mmengine - INFO - Epoch(train)  [45][12000/22878]  base_lr: 3.8321e-02 lr: 3.8321e-02  eta: 10 days, 12:11:07  time: 0.1510  data_time: 0.0262  memory: 7907  loss: 3.5271
2023/10/05 20:56:39 - mmengine - INFO - Epoch(train)  [45][12100/22878]  base_lr: 3.8321e-02 lr: 3.8321e-02  eta: 10 days, 12:13:48  time: 0.1644  data_time: 0.0253  memory: 7894  loss: 3.4174
2023/10/05 20:56:55 - mmengine - INFO - Epoch(train)  [45][12200/22878]  base_lr: 3.8320e-02 lr: 3.8320e-02  eta: 10 days, 12:15:22  time: 0.1554  data_time: 0.0242  memory: 7684  loss: 3.3661
2023/10/05 20:57:11 - mmengine - INFO - Epoch(train)  [45][12300/22878]  base_lr: 3.8319e-02 lr: 3.8319e-02  eta: 10 days, 12:15:43  time: 0.1546  data_time: 0.0241  memory: 7991  loss: 3.4647
2023/10/05 20:57:21 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 20:57:26 - mmengine - INFO - Epoch(train)  [45][12400/22878]  base_lr: 3.8319e-02 lr: 3.8319e-02  eta: 10 days, 12:14:21  time: 0.1524  data_time: 0.0257  memory: 7792  loss: 3.5180
2023/10/05 20:57:42 - mmengine - INFO - Epoch(train)  [45][12500/22878]  base_lr: 3.8318e-02 lr: 3.8318e-02  eta: 10 days, 12:13:23  time: 0.1402  data_time: 0.0248  memory: 7975  loss: 3.7140
2023/10/05 20:57:57 - mmengine - INFO - Epoch(train)  [45][12600/22878]  base_lr: 3.8317e-02 lr: 3.8317e-02  eta: 10 days, 12:13:23  time: 0.1510  data_time: 0.0279  memory: 7614  loss: 3.3904
2023/10/05 20:58:13 - mmengine - INFO - Epoch(train)  [45][12700/22878]  base_lr: 3.8317e-02 lr: 3.8317e-02  eta: 10 days, 12:13:20  time: 0.1601  data_time: 0.0263  memory: 7956  loss: 3.4208
2023/10/05 20:58:29 - mmengine - INFO - Epoch(train)  [45][12800/22878]  base_lr: 3.8316e-02 lr: 3.8316e-02  eta: 10 days, 12:14:40  time: 0.1628  data_time: 0.0263  memory: 7589  loss: 3.3244
2023/10/05 20:58:44 - mmengine - INFO - Epoch(train)  [45][12900/22878]  base_lr: 3.8315e-02 lr: 3.8315e-02  eta: 10 days, 12:13:45  time: 0.1701  data_time: 0.0293  memory: 7929  loss: 3.4366
2023/10/05 20:59:00 - mmengine - INFO - Epoch(train)  [45][13000/22878]  base_lr: 3.8315e-02 lr: 3.8315e-02  eta: 10 days, 12:10:54  time: 0.1650  data_time: 0.0250  memory: 7955  loss: 3.4093
2023/10/05 20:59:16 - mmengine - INFO - Epoch(train)  [45][13100/22878]  base_lr: 3.8314e-02 lr: 3.8314e-02  eta: 10 days, 12:11:47  time: 0.1560  data_time: 0.0254  memory: 8054  loss: 3.4137
2023/10/05 20:59:31 - mmengine - INFO - Epoch(train)  [45][13200/22878]  base_lr: 3.8313e-02 lr: 3.8313e-02  eta: 10 days, 12:07:59  time: 0.1496  data_time: 0.0257  memory: 7798  loss: 3.4690
2023/10/05 20:59:46 - mmengine - INFO - Epoch(train)  [45][13300/22878]  base_lr: 3.8313e-02 lr: 3.8313e-02  eta: 10 days, 12:06:54  time: 0.1588  data_time: 0.0262  memory: 8068  loss: 3.5394
2023/10/05 20:59:57 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:00:02 - mmengine - INFO - Epoch(train)  [45][13400/22878]  base_lr: 3.8312e-02 lr: 3.8312e-02  eta: 10 days, 12:07:33  time: 0.1570  data_time: 0.0245  memory: 7434  loss: 3.4590
2023/10/05 21:00:17 - mmengine - INFO - Epoch(train)  [45][13500/22878]  base_lr: 3.8311e-02 lr: 3.8311e-02  eta: 10 days, 12:04:56  time: 0.1532  data_time: 0.0252  memory: 7805  loss: 3.4524
2023/10/05 21:00:33 - mmengine - INFO - Epoch(train)  [45][13600/22878]  base_lr: 3.8311e-02 lr: 3.8311e-02  eta: 10 days, 12:03:37  time: 0.1527  data_time: 0.0236  memory: 8020  loss: 3.3325
2023/10/05 21:00:49 - mmengine - INFO - Epoch(train)  [45][13700/22878]  base_lr: 3.8310e-02 lr: 3.8310e-02  eta: 10 days, 12:05:16  time: 0.1641  data_time: 0.0226  memory: 7863  loss: 3.3922
2023/10/05 21:01:05 - mmengine - INFO - Epoch(train)  [45][13800/22878]  base_lr: 3.8310e-02 lr: 3.8310e-02  eta: 10 days, 12:06:35  time: 0.1534  data_time: 0.0233  memory: 7652  loss: 3.4086
2023/10/05 21:01:20 - mmengine - INFO - Epoch(train)  [45][13900/22878]  base_lr: 3.8309e-02 lr: 3.8309e-02  eta: 10 days, 12:05:02  time: 0.1496  data_time: 0.0221  memory: 7960  loss: 3.3375
2023/10/05 21:01:36 - mmengine - INFO - Epoch(train)  [45][14000/22878]  base_lr: 3.8308e-02 lr: 3.8308e-02  eta: 10 days, 12:04:51  time: 0.1593  data_time: 0.0241  memory: 7855  loss: 3.4620
2023/10/05 21:01:51 - mmengine - INFO - Epoch(train)  [45][14100/22878]  base_lr: 3.8308e-02 lr: 3.8308e-02  eta: 10 days, 12:03:01  time: 0.1486  data_time: 0.0246  memory: 8080  loss: 3.2071
2023/10/05 21:02:06 - mmengine - INFO - Epoch(train)  [45][14200/22878]  base_lr: 3.8307e-02 lr: 3.8307e-02  eta: 10 days, 12:00:47  time: 0.1581  data_time: 0.0255  memory: 7867  loss: 3.3452
2023/10/05 21:02:22 - mmengine - INFO - Epoch(train)  [45][14300/22878]  base_lr: 3.8306e-02 lr: 3.8306e-02  eta: 10 days, 11:59:04  time: 0.1488  data_time: 0.0256  memory: 7523  loss: 3.4805
2023/10/05 21:02:32 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:02:37 - mmengine - INFO - Epoch(train)  [45][14400/22878]  base_lr: 3.8306e-02 lr: 3.8306e-02  eta: 10 days, 11:57:05  time: 0.1485  data_time: 0.0238  memory: 7841  loss: 3.4689
2023/10/05 21:02:53 - mmengine - INFO - Epoch(train)  [45][14500/22878]  base_lr: 3.8305e-02 lr: 3.8305e-02  eta: 10 days, 11:56:47  time: 0.1496  data_time: 0.0258  memory: 7946  loss: 3.5606
2023/10/05 21:03:08 - mmengine - INFO - Epoch(train)  [45][14600/22878]  base_lr: 3.8304e-02 lr: 3.8304e-02  eta: 10 days, 11:53:01  time: 0.1467  data_time: 0.0248  memory: 7839  loss: 3.5445
2023/10/05 21:03:23 - mmengine - INFO - Epoch(train)  [45][14700/22878]  base_lr: 3.8304e-02 lr: 3.8304e-02  eta: 10 days, 11:52:54  time: 0.1500  data_time: 0.0253  memory: 7768  loss: 3.3925
2023/10/05 21:03:39 - mmengine - INFO - Epoch(train)  [45][14800/22878]  base_lr: 3.8303e-02 lr: 3.8303e-02  eta: 10 days, 11:50:27  time: 0.1527  data_time: 0.0312  memory: 7552  loss: 3.4404
2023/10/05 21:03:54 - mmengine - INFO - Epoch(train)  [45][14900/22878]  base_lr: 3.8302e-02 lr: 3.8302e-02  eta: 10 days, 11:47:36  time: 0.1495  data_time: 0.0269  memory: 7634  loss: 3.3737
2023/10/05 21:04:09 - mmengine - INFO - Epoch(train)  [45][15000/22878]  base_lr: 3.8302e-02 lr: 3.8302e-02  eta: 10 days, 11:45:53  time: 0.1564  data_time: 0.0238  memory: 7829  loss: 3.3146
2023/10/05 21:04:25 - mmengine - INFO - Epoch(train)  [45][15100/22878]  base_lr: 3.8301e-02 lr: 3.8301e-02  eta: 10 days, 11:45:17  time: 0.1569  data_time: 0.0236  memory: 7729  loss: 3.4089
2023/10/05 21:04:40 - mmengine - INFO - Epoch(train)  [45][15200/22878]  base_lr: 3.8300e-02 lr: 3.8300e-02  eta: 10 days, 11:43:44  time: 0.1635  data_time: 0.0255  memory: 7691  loss: 3.4577
2023/10/05 21:04:56 - mmengine - INFO - Epoch(train)  [45][15300/22878]  base_lr: 3.8300e-02 lr: 3.8300e-02  eta: 10 days, 11:41:35  time: 0.1594  data_time: 0.0317  memory: 7907  loss: 3.4696
2023/10/05 21:05:06 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:05:11 - mmengine - INFO - Epoch(train)  [45][15400/22878]  base_lr: 3.8299e-02 lr: 3.8299e-02  eta: 10 days, 11:39:50  time: 0.1580  data_time: 0.0240  memory: 7894  loss: 3.5490
2023/10/05 21:05:26 - mmengine - INFO - Epoch(train)  [45][15500/22878]  base_lr: 3.8298e-02 lr: 3.8298e-02  eta: 10 days, 11:38:34  time: 0.1490  data_time: 0.0239  memory: 7781  loss: 3.4300
2023/10/05 21:05:42 - mmengine - INFO - Epoch(train)  [45][15600/22878]  base_lr: 3.8298e-02 lr: 3.8298e-02  eta: 10 days, 11:36:02  time: 0.1597  data_time: 0.0250  memory: 7491  loss: 3.5044
2023/10/05 21:05:57 - mmengine - INFO - Epoch(train)  [45][15700/22878]  base_lr: 3.8297e-02 lr: 3.8297e-02  eta: 10 days, 11:36:13  time: 0.1556  data_time: 0.0237  memory: 7697  loss: 3.4942
2023/10/05 21:06:13 - mmengine - INFO - Epoch(train)  [45][15800/22878]  base_lr: 3.8296e-02 lr: 3.8296e-02  eta: 10 days, 11:35:53  time: 0.1547  data_time: 0.0236  memory: 7742  loss: 3.5878
2023/10/05 21:06:28 - mmengine - INFO - Epoch(train)  [45][15900/22878]  base_lr: 3.8296e-02 lr: 3.8296e-02  eta: 10 days, 11:33:28  time: 0.1518  data_time: 0.0261  memory: 8024  loss: 3.6741
2023/10/05 21:06:44 - mmengine - INFO - Epoch(train)  [45][16000/22878]  base_lr: 3.8295e-02 lr: 3.8295e-02  eta: 10 days, 11:33:33  time: 0.1607  data_time: 0.0239  memory: 7818  loss: 3.3421
2023/10/05 21:06:59 - mmengine - INFO - Epoch(train)  [45][16100/22878]  base_lr: 3.8294e-02 lr: 3.8294e-02  eta: 10 days, 11:33:00  time: 0.1573  data_time: 0.0250  memory: 8351  loss: 3.3495
2023/10/05 21:07:15 - mmengine - INFO - Epoch(train)  [45][16200/22878]  base_lr: 3.8294e-02 lr: 3.8294e-02  eta: 10 days, 11:31:12  time: 0.1505  data_time: 0.0231  memory: 7628  loss: 3.5829
2023/10/05 21:07:30 - mmengine - INFO - Epoch(train)  [45][16300/22878]  base_lr: 3.8293e-02 lr: 3.8293e-02  eta: 10 days, 11:27:16  time: 0.1449  data_time: 0.0260  memory: 7861  loss: 3.5483
2023/10/05 21:07:40 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:07:45 - mmengine - INFO - Epoch(train)  [45][16400/22878]  base_lr: 3.8292e-02 lr: 3.8292e-02  eta: 10 days, 11:27:17  time: 0.1550  data_time: 0.0225  memory: 7818  loss: 3.6256
2023/10/05 21:08:01 - mmengine - INFO - Epoch(train)  [45][16500/22878]  base_lr: 3.8292e-02 lr: 3.8292e-02  eta: 10 days, 11:26:56  time: 0.1705  data_time: 0.0301  memory: 7881  loss: 3.5003
2023/10/05 21:08:16 - mmengine - INFO - Epoch(train)  [45][16600/22878]  base_lr: 3.8291e-02 lr: 3.8291e-02  eta: 10 days, 11:25:43  time: 0.1517  data_time: 0.0246  memory: 8047  loss: 3.3752
2023/10/05 21:08:32 - mmengine - INFO - Epoch(train)  [45][16700/22878]  base_lr: 3.8291e-02 lr: 3.8291e-02  eta: 10 days, 11:25:31  time: 0.1564  data_time: 0.0235  memory: 7915  loss: 3.4237
2023/10/05 21:08:48 - mmengine - INFO - Epoch(train)  [45][16800/22878]  base_lr: 3.8290e-02 lr: 3.8290e-02  eta: 10 days, 11:24:58  time: 0.1569  data_time: 0.0232  memory: 7727  loss: 3.3299
2023/10/05 21:09:03 - mmengine - INFO - Epoch(train)  [45][16900/22878]  base_lr: 3.8289e-02 lr: 3.8289e-02  eta: 10 days, 11:23:32  time: 0.1540  data_time: 0.0233  memory: 7688  loss: 3.4461
2023/10/05 21:09:18 - mmengine - INFO - Epoch(train)  [45][17000/22878]  base_lr: 3.8289e-02 lr: 3.8289e-02  eta: 10 days, 11:22:12  time: 0.1596  data_time: 0.0318  memory: 7985  loss: 3.4573
2023/10/05 21:09:33 - mmengine - INFO - Epoch(train)  [45][17100/22878]  base_lr: 3.8288e-02 lr: 3.8288e-02  eta: 10 days, 11:19:19  time: 0.1438  data_time: 0.0266  memory: 8350  loss: 3.3457
2023/10/05 21:09:49 - mmengine - INFO - Epoch(train)  [45][17200/22878]  base_lr: 3.8287e-02 lr: 3.8287e-02  eta: 10 days, 11:16:44  time: 0.1492  data_time: 0.0258  memory: 8257  loss: 3.4759
2023/10/05 21:10:04 - mmengine - INFO - Epoch(train)  [45][17300/22878]  base_lr: 3.8287e-02 lr: 3.8287e-02  eta: 10 days, 11:13:48  time: 0.1467  data_time: 0.0255  memory: 7819  loss: 3.4827
2023/10/05 21:10:14 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:10:20 - mmengine - INFO - Epoch(train)  [45][17400/22878]  base_lr: 3.8286e-02 lr: 3.8286e-02  eta: 10 days, 11:14:43  time: 0.1575  data_time: 0.0262  memory: 7753  loss: 3.3818
2023/10/05 21:10:35 - mmengine - INFO - Epoch(train)  [45][17500/22878]  base_lr: 3.8285e-02 lr: 3.8285e-02  eta: 10 days, 11:11:30  time: 0.1583  data_time: 0.0258  memory: 7718  loss: 3.3842
2023/10/05 21:10:50 - mmengine - INFO - Epoch(train)  [45][17600/22878]  base_lr: 3.8285e-02 lr: 3.8285e-02  eta: 10 days, 11:11:13  time: 0.1543  data_time: 0.0270  memory: 7540  loss: 3.3847
2023/10/05 21:11:06 - mmengine - INFO - Epoch(train)  [45][17700/22878]  base_lr: 3.8284e-02 lr: 3.8284e-02  eta: 10 days, 11:09:58  time: 0.1496  data_time: 0.0246  memory: 7723  loss: 3.6099
2023/10/05 21:11:21 - mmengine - INFO - Epoch(train)  [45][17800/22878]  base_lr: 3.8283e-02 lr: 3.8283e-02  eta: 10 days, 11:07:24  time: 0.1466  data_time: 0.0249  memory: 7785  loss: 3.5283
2023/10/05 21:11:36 - mmengine - INFO - Epoch(train)  [45][17900/22878]  base_lr: 3.8283e-02 lr: 3.8283e-02  eta: 10 days, 11:05:07  time: 0.1555  data_time: 0.0246  memory: 7934  loss: 3.3719
2023/10/05 21:11:51 - mmengine - INFO - Epoch(train)  [45][18000/22878]  base_lr: 3.8282e-02 lr: 3.8282e-02  eta: 10 days, 11:04:08  time: 0.1532  data_time: 0.0254  memory: 7887  loss: 3.3944
2023/10/05 21:12:07 - mmengine - INFO - Epoch(train)  [45][18100/22878]  base_lr: 3.8281e-02 lr: 3.8281e-02  eta: 10 days, 11:02:05  time: 0.1386  data_time: 0.0235  memory: 7811  loss: 3.4737
2023/10/05 21:12:22 - mmengine - INFO - Epoch(train)  [45][18200/22878]  base_lr: 3.8281e-02 lr: 3.8281e-02  eta: 10 days, 10:59:22  time: 0.1619  data_time: 0.0314  memory: 7801  loss: 3.4572
2023/10/05 21:12:37 - mmengine - INFO - Epoch(train)  [45][18300/22878]  base_lr: 3.8280e-02 lr: 3.8280e-02  eta: 10 days, 10:58:10  time: 0.1529  data_time: 0.0244  memory: 7679  loss: 3.3593
2023/10/05 21:12:48 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:12:53 - mmengine - INFO - Epoch(train)  [45][18400/22878]  base_lr: 3.8279e-02 lr: 3.8279e-02  eta: 10 days, 10:56:59  time: 0.1529  data_time: 0.0221  memory: 7643  loss: 3.3884
2023/10/05 21:13:08 - mmengine - INFO - Epoch(train)  [45][18500/22878]  base_lr: 3.8279e-02 lr: 3.8279e-02  eta: 10 days, 10:56:59  time: 0.1539  data_time: 0.0239  memory: 8080  loss: 3.2383
2023/10/05 21:13:24 - mmengine - INFO - Epoch(train)  [45][18600/22878]  base_lr: 3.8278e-02 lr: 3.8278e-02  eta: 10 days, 10:57:00  time: 0.1542  data_time: 0.0248  memory: 8041  loss: 3.6009
2023/10/05 21:13:39 - mmengine - INFO - Epoch(train)  [45][18700/22878]  base_lr: 3.8277e-02 lr: 3.8277e-02  eta: 10 days, 10:57:04  time: 0.1609  data_time: 0.0307  memory: 8425  loss: 3.5316
2023/10/05 21:13:55 - mmengine - INFO - Epoch(train)  [45][18800/22878]  base_lr: 3.8277e-02 lr: 3.8277e-02  eta: 10 days, 10:56:52  time: 0.1507  data_time: 0.0267  memory: 7883  loss: 3.3953
2023/10/05 21:14:11 - mmengine - INFO - Epoch(train)  [45][18900/22878]  base_lr: 3.8276e-02 lr: 3.8276e-02  eta: 10 days, 10:56:53  time: 0.1563  data_time: 0.0258  memory: 7768  loss: 3.4976
2023/10/05 21:14:26 - mmengine - INFO - Epoch(train)  [45][19000/22878]  base_lr: 3.8275e-02 lr: 3.8275e-02  eta: 10 days, 10:55:39  time: 0.1495  data_time: 0.0253  memory: 8148  loss: 3.5472
2023/10/05 21:14:42 - mmengine - INFO - Epoch(train)  [45][19100/22878]  base_lr: 3.8275e-02 lr: 3.8275e-02  eta: 10 days, 10:56:24  time: 0.1565  data_time: 0.0256  memory: 8098  loss: 3.3718
2023/10/05 21:14:58 - mmengine - INFO - Epoch(train)  [45][19200/22878]  base_lr: 3.8274e-02 lr: 3.8274e-02  eta: 10 days, 10:57:02  time: 0.1571  data_time: 0.0254  memory: 7689  loss: 3.3866
2023/10/05 21:15:13 - mmengine - INFO - Epoch(train)  [45][19300/22878]  base_lr: 3.8273e-02 lr: 3.8273e-02  eta: 10 days, 10:56:41  time: 0.1539  data_time: 0.0261  memory: 7589  loss: 3.4168
2023/10/05 21:15:24 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:15:28 - mmengine - INFO - Epoch(train)  [45][19400/22878]  base_lr: 3.8273e-02 lr: 3.8273e-02  eta: 10 days, 10:54:51  time: 0.1484  data_time: 0.0234  memory: 7758  loss: 3.6024
2023/10/05 21:15:44 - mmengine - INFO - Epoch(train)  [45][19500/22878]  base_lr: 3.8272e-02 lr: 3.8272e-02  eta: 10 days, 10:52:50  time: 0.1496  data_time: 0.0268  memory: 7875  loss: 3.4804
2023/10/05 21:15:59 - mmengine - INFO - Epoch(train)  [45][19600/22878]  base_lr: 3.8271e-02 lr: 3.8271e-02  eta: 10 days, 10:52:13  time: 0.1561  data_time: 0.0250  memory: 7604  loss: 3.4583
2023/10/05 21:16:15 - mmengine - INFO - Epoch(train)  [45][19700/22878]  base_lr: 3.8271e-02 lr: 3.8271e-02  eta: 10 days, 10:51:44  time: 0.1483  data_time: 0.0241  memory: 7642  loss: 3.5052
2023/10/05 21:16:30 - mmengine - INFO - Epoch(train)  [45][19800/22878]  base_lr: 3.8270e-02 lr: 3.8270e-02  eta: 10 days, 10:51:39  time: 0.1548  data_time: 0.0258  memory: 7691  loss: 3.4366
2023/10/05 21:16:46 - mmengine - INFO - Epoch(train)  [45][19900/22878]  base_lr: 3.8270e-02 lr: 3.8270e-02  eta: 10 days, 10:50:15  time: 0.1599  data_time: 0.0300  memory: 7604  loss: 3.5589
2023/10/05 21:17:01 - mmengine - INFO - Epoch(train)  [45][20000/22878]  base_lr: 3.8269e-02 lr: 3.8269e-02  eta: 10 days, 10:49:34  time: 0.1495  data_time: 0.0247  memory: 7760  loss: 3.3973
2023/10/05 21:17:16 - mmengine - INFO - Epoch(train)  [45][20100/22878]  base_lr: 3.8268e-02 lr: 3.8268e-02  eta: 10 days, 10:47:58  time: 0.1486  data_time: 0.0255  memory: 7549  loss: 3.3755
2023/10/05 21:17:32 - mmengine - INFO - Epoch(train)  [45][20200/22878]  base_lr: 3.8268e-02 lr: 3.8268e-02  eta: 10 days, 10:47:51  time: 0.1522  data_time: 0.0267  memory: 7821  loss: 3.5189
2023/10/05 21:17:47 - mmengine - INFO - Epoch(train)  [45][20300/22878]  base_lr: 3.8267e-02 lr: 3.8267e-02  eta: 10 days, 10:45:58  time: 0.1527  data_time: 0.0259  memory: 7528  loss: 3.4914
2023/10/05 21:17:57 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:18:02 - mmengine - INFO - Epoch(train)  [45][20400/22878]  base_lr: 3.8266e-02 lr: 3.8266e-02  eta: 10 days, 10:43:24  time: 0.1558  data_time: 0.0326  memory: 7572  loss: 3.5669
2023/10/05 21:18:17 - mmengine - INFO - Epoch(train)  [45][20500/22878]  base_lr: 3.8266e-02 lr: 3.8266e-02  eta: 10 days, 10:41:32  time: 0.1532  data_time: 0.0252  memory: 7818  loss: 3.3255
2023/10/05 21:18:33 - mmengine - INFO - Epoch(train)  [45][20600/22878]  base_lr: 3.8265e-02 lr: 3.8265e-02  eta: 10 days, 10:39:22  time: 0.1472  data_time: 0.0259  memory: 8148  loss: 3.4631
2023/10/05 21:18:48 - mmengine - INFO - Epoch(train)  [45][20700/22878]  base_lr: 3.8264e-02 lr: 3.8264e-02  eta: 10 days, 10:36:56  time: 0.1529  data_time: 0.0274  memory: 7515  loss: 3.4948
2023/10/05 21:19:03 - mmengine - INFO - Epoch(train)  [45][20800/22878]  base_lr: 3.8264e-02 lr: 3.8264e-02  eta: 10 days, 10:35:53  time: 0.1477  data_time: 0.0235  memory: 7913  loss: 3.4765
2023/10/05 21:19:19 - mmengine - INFO - Epoch(train)  [45][20900/22878]  base_lr: 3.8263e-02 lr: 3.8263e-02  eta: 10 days, 10:35:09  time: 0.1567  data_time: 0.0258  memory: 8119  loss: 3.4801
2023/10/05 21:19:34 - mmengine - INFO - Epoch(train)  [45][21000/22878]  base_lr: 3.8262e-02 lr: 3.8262e-02  eta: 10 days, 10:32:10  time: 0.1541  data_time: 0.0254  memory: 7248  loss: 3.3941
2023/10/05 21:19:49 - mmengine - INFO - Epoch(train)  [45][21100/22878]  base_lr: 3.8262e-02 lr: 3.8262e-02  eta: 10 days, 10:31:49  time: 0.1499  data_time: 0.0253  memory: 8244  loss: 3.3485
2023/10/05 21:20:05 - mmengine - INFO - Epoch(train)  [45][21200/22878]  base_lr: 3.8261e-02 lr: 3.8261e-02  eta: 10 days, 10:30:53  time: 0.1490  data_time: 0.0248  memory: 7432  loss: 3.5341
2023/10/05 21:20:20 - mmengine - INFO - Epoch(train)  [45][21300/22878]  base_lr: 3.8260e-02 lr: 3.8260e-02  eta: 10 days, 10:30:29  time: 0.1497  data_time: 0.0266  memory: 7631  loss: 3.4426
2023/10/05 21:20:30 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:20:35 - mmengine - INFO - Epoch(train)  [45][21400/22878]  base_lr: 3.8260e-02 lr: 3.8260e-02  eta: 10 days, 10:28:13  time: 0.1480  data_time: 0.0251  memory: 7762  loss: 3.5541
2023/10/05 21:20:50 - mmengine - INFO - Epoch(train)  [45][21500/22878]  base_lr: 3.8259e-02 lr: 3.8259e-02  eta: 10 days, 10:26:23  time: 0.1458  data_time: 0.0249  memory: 7842  loss: 3.4807
2023/10/05 21:21:06 - mmengine - INFO - Epoch(train)  [45][21600/22878]  base_lr: 3.8258e-02 lr: 3.8258e-02  eta: 10 days, 10:25:16  time: 0.1584  data_time: 0.0320  memory: 7894  loss: 3.4529
2023/10/05 21:21:21 - mmengine - INFO - Epoch(train)  [45][21700/22878]  base_lr: 3.8258e-02 lr: 3.8258e-02  eta: 10 days, 10:24:29  time: 0.1477  data_time: 0.0252  memory: 7676  loss: 3.4027
2023/10/05 21:21:37 - mmengine - INFO - Epoch(train)  [45][21800/22878]  base_lr: 3.8257e-02 lr: 3.8257e-02  eta: 10 days, 10:24:55  time: 0.1505  data_time: 0.0241  memory: 7753  loss: 3.3082
2023/10/05 21:21:52 - mmengine - INFO - Epoch(train)  [45][21900/22878]  base_lr: 3.8256e-02 lr: 3.8256e-02  eta: 10 days, 10:24:16  time: 0.1589  data_time: 0.0267  memory: 7462  loss: 3.3396
2023/10/05 21:22:08 - mmengine - INFO - Epoch(train)  [45][22000/22878]  base_lr: 3.8256e-02 lr: 3.8256e-02  eta: 10 days, 10:23:39  time: 0.1566  data_time: 0.0255  memory: 7871  loss: 3.4474
2023/10/05 21:22:23 - mmengine - INFO - Epoch(train)  [45][22100/22878]  base_lr: 3.8255e-02 lr: 3.8255e-02  eta: 10 days, 10:23:27  time: 0.1565  data_time: 0.0336  memory: 7878  loss: 3.4571
2023/10/05 21:22:39 - mmengine - INFO - Epoch(train)  [45][22200/22878]  base_lr: 3.8254e-02 lr: 3.8254e-02  eta: 10 days, 10:22:42  time: 0.1620  data_time: 0.0257  memory: 8112  loss: 3.3928
2023/10/05 21:22:54 - mmengine - INFO - Epoch(train)  [45][22300/22878]  base_lr: 3.8254e-02 lr: 3.8254e-02  eta: 10 days, 10:22:37  time: 0.1566  data_time: 0.0235  memory: 7639  loss: 3.4103
2023/10/05 21:23:05 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:23:10 - mmengine - INFO - Epoch(train)  [45][22400/22878]  base_lr: 3.8253e-02 lr: 3.8253e-02  eta: 10 days, 10:21:36  time: 0.1504  data_time: 0.0225  memory: 7610  loss: 3.4169
2023/10/05 21:23:25 - mmengine - INFO - Epoch(train)  [45][22500/22878]  base_lr: 3.8252e-02 lr: 3.8252e-02  eta: 10 days, 10:21:08  time: 0.1568  data_time: 0.0267  memory: 7791  loss: 3.4090
2023/10/05 21:23:41 - mmengine - INFO - Epoch(train)  [45][22600/22878]  base_lr: 3.8252e-02 lr: 3.8252e-02  eta: 10 days, 10:21:01  time: 0.1602  data_time: 0.0247  memory: 7963  loss: 3.5302
2023/10/05 21:23:56 - mmengine - INFO - Epoch(train)  [45][22700/22878]  base_lr: 3.8251e-02 lr: 3.8251e-02  eta: 10 days, 10:19:44  time: 0.1536  data_time: 0.0271  memory: 7789  loss: 3.4201
2023/10/05 21:24:11 - mmengine - INFO - Epoch(train)  [45][22800/22878]  base_lr: 3.8251e-02 lr: 3.8251e-02  eta: 10 days, 10:18:32  time: 0.1445  data_time: 0.0254  memory: 7916  loss: 3.3806
2023/10/05 21:24:23 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:24:23 - mmengine - INFO - Saving checkpoint at 45 epochs
2023/10/05 21:24:32 - mmengine - INFO - Epoch(val)  [45][100/893]    eta: 0:00:58  time: 0.0663  data_time: 0.0287  memory: 7951  
2023/10/05 21:24:39 - mmengine - INFO - Epoch(val)  [45][200/893]    eta: 0:00:48  time: 0.0642  data_time: 0.0283  memory: 1101  
2023/10/05 21:24:45 - mmengine - INFO - Epoch(val)  [45][300/893]    eta: 0:00:40  time: 0.0661  data_time: 0.0286  memory: 1101  
2023/10/05 21:24:52 - mmengine - INFO - Epoch(val)  [45][400/893]    eta: 0:00:33  time: 0.0639  data_time: 0.0282  memory: 1101  
2023/10/05 21:24:59 - mmengine - INFO - Epoch(val)  [45][500/893]    eta: 0:00:26  time: 0.0714  data_time: 0.0342  memory: 1101  
2023/10/05 21:25:05 - mmengine - INFO - Epoch(val)  [45][600/893]    eta: 0:00:19  time: 0.0657  data_time: 0.0287  memory: 1101  
2023/10/05 21:25:12 - mmengine - INFO - Epoch(val)  [45][700/893]    eta: 0:00:12  time: 0.0651  data_time: 0.0284  memory: 1101  
2023/10/05 21:25:19 - mmengine - INFO - Epoch(val)  [45][800/893]    eta: 0:00:06  time: 0.0655  data_time: 0.0283  memory: 1101  
2023/10/05 21:25:25 - mmengine - INFO - Epoch(val) [45][893/893]    accuracy/top1: 37.9160  accuracy/top5: 63.7160  data_time: 0.0295  time: 0.0669
2023/10/05 21:25:41 - mmengine - INFO - Epoch(train)  [46][  100/22878]  base_lr: 3.8249e-02 lr: 3.8249e-02  eta: 10 days, 10:17:44  time: 0.1542  data_time: 0.0226  memory: 7930  loss: 3.4694
2023/10/05 21:25:56 - mmengine - INFO - Epoch(train)  [46][  200/22878]  base_lr: 3.8249e-02 lr: 3.8249e-02  eta: 10 days, 10:15:09  time: 0.1439  data_time: 0.0201  memory: 7432  loss: 3.4091
2023/10/05 21:26:11 - mmengine - INFO - Epoch(train)  [46][  300/22878]  base_lr: 3.8248e-02 lr: 3.8248e-02  eta: 10 days, 10:13:25  time: 0.1534  data_time: 0.0218  memory: 8215  loss: 3.2394
2023/10/05 21:26:26 - mmengine - INFO - Epoch(train)  [46][  400/22878]  base_lr: 3.8247e-02 lr: 3.8247e-02  eta: 10 days, 10:10:57  time: 0.1497  data_time: 0.0215  memory: 7394  loss: 3.3182
2023/10/05 21:26:40 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:26:41 - mmengine - INFO - Epoch(train)  [46][  500/22878]  base_lr: 3.8247e-02 lr: 3.8247e-02  eta: 10 days, 10:09:08  time: 0.1520  data_time: 0.0231  memory: 7651  loss: 3.4216
2023/10/05 21:26:57 - mmengine - INFO - Epoch(train)  [46][  600/22878]  base_lr: 3.8246e-02 lr: 3.8246e-02  eta: 10 days, 10:07:46  time: 0.1514  data_time: 0.0211  memory: 7713  loss: 3.4807
2023/10/05 21:27:12 - mmengine - INFO - Epoch(train)  [46][  700/22878]  base_lr: 3.8245e-02 lr: 3.8245e-02  eta: 10 days, 10:06:35  time: 0.1469  data_time: 0.0219  memory: 7580  loss: 3.3902
2023/10/05 21:27:27 - mmengine - INFO - Epoch(train)  [46][  800/22878]  base_lr: 3.8245e-02 lr: 3.8245e-02  eta: 10 days, 10:04:51  time: 0.1560  data_time: 0.0211  memory: 8026  loss: 3.4197
2023/10/05 21:27:43 - mmengine - INFO - Epoch(train)  [46][  900/22878]  base_lr: 3.8244e-02 lr: 3.8244e-02  eta: 10 days, 10:04:30  time: 0.1535  data_time: 0.0224  memory: 7934  loss: 3.4446
2023/10/05 21:27:58 - mmengine - INFO - Epoch(train)  [46][ 1000/22878]  base_lr: 3.8243e-02 lr: 3.8243e-02  eta: 10 days, 10:01:55  time: 0.1410  data_time: 0.0226  memory: 7991  loss: 3.4283
2023/10/05 21:28:13 - mmengine - INFO - Epoch(train)  [46][ 1100/22878]  base_lr: 3.8243e-02 lr: 3.8243e-02  eta: 10 days, 9:59:48  time: 0.1419  data_time: 0.0213  memory: 8009  loss: 3.4182
2023/10/05 21:28:28 - mmengine - INFO - Epoch(train)  [46][ 1200/22878]  base_lr: 3.8242e-02 lr: 3.8242e-02  eta: 10 days, 9:57:43  time: 0.1577  data_time: 0.0220  memory: 7599  loss: 3.4212
2023/10/05 21:28:43 - mmengine - INFO - Epoch(train)  [46][ 1300/22878]  base_lr: 3.8241e-02 lr: 3.8241e-02  eta: 10 days, 9:55:08  time: 0.1441  data_time: 0.0200  memory: 8310  loss: 3.4102
2023/10/05 21:28:58 - mmengine - INFO - Epoch(train)  [46][ 1400/22878]  base_lr: 3.8241e-02 lr: 3.8241e-02  eta: 10 days, 9:52:28  time: 0.1446  data_time: 0.0197  memory: 7806  loss: 3.4982
2023/10/05 21:29:11 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:29:13 - mmengine - INFO - Epoch(train)  [46][ 1500/22878]  base_lr: 3.8240e-02 lr: 3.8240e-02  eta: 10 days, 9:50:20  time: 0.1544  data_time: 0.0219  memory: 7720  loss: 3.4832
2023/10/05 21:29:28 - mmengine - INFO - Epoch(train)  [46][ 1600/22878]  base_lr: 3.8240e-02 lr: 3.8240e-02  eta: 10 days, 9:50:41  time: 0.1584  data_time: 0.0213  memory: 7913  loss: 3.4668
2023/10/05 21:29:44 - mmengine - INFO - Epoch(train)  [46][ 1700/22878]  base_lr: 3.8239e-02 lr: 3.8239e-02  eta: 10 days, 9:49:23  time: 0.1489  data_time: 0.0236  memory: 7494  loss: 3.5634
2023/10/05 21:29:59 - mmengine - INFO - Epoch(train)  [46][ 1800/22878]  base_lr: 3.8238e-02 lr: 3.8238e-02  eta: 10 days, 9:48:38  time: 0.1488  data_time: 0.0247  memory: 7942  loss: 3.2126
2023/10/05 21:30:15 - mmengine - INFO - Epoch(train)  [46][ 1900/22878]  base_lr: 3.8238e-02 lr: 3.8238e-02  eta: 10 days, 9:48:37  time: 0.1570  data_time: 0.0228  memory: 8475  loss: 3.2542
2023/10/05 21:30:30 - mmengine - INFO - Epoch(train)  [46][ 2000/22878]  base_lr: 3.8237e-02 lr: 3.8237e-02  eta: 10 days, 9:46:55  time: 0.1518  data_time: 0.0216  memory: 7963  loss: 3.3472
2023/10/05 21:30:45 - mmengine - INFO - Epoch(train)  [46][ 2100/22878]  base_lr: 3.8236e-02 lr: 3.8236e-02  eta: 10 days, 9:45:27  time: 0.1504  data_time: 0.0238  memory: 7753  loss: 3.5654
2023/10/05 21:31:00 - mmengine - INFO - Epoch(train)  [46][ 2200/22878]  base_lr: 3.8236e-02 lr: 3.8236e-02  eta: 10 days, 9:43:36  time: 0.1549  data_time: 0.0284  memory: 7713  loss: 3.2745
2023/10/05 21:31:15 - mmengine - INFO - Epoch(train)  [46][ 2300/22878]  base_lr: 3.8235e-02 lr: 3.8235e-02  eta: 10 days, 9:41:36  time: 0.1502  data_time: 0.0229  memory: 7570  loss: 3.4099
2023/10/05 21:31:30 - mmengine - INFO - Epoch(train)  [46][ 2400/22878]  base_lr: 3.8234e-02 lr: 3.8234e-02  eta: 10 days, 9:39:57  time: 0.1463  data_time: 0.0214  memory: 7894  loss: 3.4926
2023/10/05 21:31:44 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:31:46 - mmengine - INFO - Epoch(train)  [46][ 2500/22878]  base_lr: 3.8234e-02 lr: 3.8234e-02  eta: 10 days, 9:38:42  time: 0.1462  data_time: 0.0229  memory: 7787  loss: 3.3746
2023/10/05 21:32:01 - mmengine - INFO - Epoch(train)  [46][ 2600/22878]  base_lr: 3.8233e-02 lr: 3.8233e-02  eta: 10 days, 9:37:08  time: 0.1453  data_time: 0.0241  memory: 7753  loss: 3.4822
2023/10/05 21:32:16 - mmengine - INFO - Epoch(train)  [46][ 2700/22878]  base_lr: 3.8232e-02 lr: 3.8232e-02  eta: 10 days, 9:35:35  time: 0.1401  data_time: 0.0221  memory: 7637  loss: 3.6138
2023/10/05 21:32:31 - mmengine - INFO - Epoch(train)  [46][ 2800/22878]  base_lr: 3.8232e-02 lr: 3.8232e-02  eta: 10 days, 9:34:01  time: 0.1537  data_time: 0.0229  memory: 7641  loss: 3.3884
2023/10/05 21:32:47 - mmengine - INFO - Epoch(train)  [46][ 2900/22878]  base_lr: 3.8231e-02 lr: 3.8231e-02  eta: 10 days, 9:34:26  time: 0.1638  data_time: 0.0214  memory: 8060  loss: 3.3368
2023/10/05 21:33:02 - mmengine - INFO - Epoch(train)  [46][ 3000/22878]  base_lr: 3.8230e-02 lr: 3.8230e-02  eta: 10 days, 9:33:59  time: 0.1607  data_time: 0.0247  memory: 7711  loss: 3.4175
2023/10/05 21:33:18 - mmengine - INFO - Epoch(train)  [46][ 3100/22878]  base_lr: 3.8230e-02 lr: 3.8230e-02  eta: 10 days, 9:33:26  time: 0.1522  data_time: 0.0224  memory: 7849  loss: 3.3926
2023/10/05 21:33:33 - mmengine - INFO - Epoch(train)  [46][ 3200/22878]  base_lr: 3.8229e-02 lr: 3.8229e-02  eta: 10 days, 9:33:21  time: 0.1530  data_time: 0.0223  memory: 7750  loss: 3.2389
2023/10/05 21:33:49 - mmengine - INFO - Epoch(train)  [46][ 3300/22878]  base_lr: 3.8228e-02 lr: 3.8228e-02  eta: 10 days, 9:31:53  time: 0.1430  data_time: 0.0244  memory: 7375  loss: 3.6345
2023/10/05 21:34:04 - mmengine - INFO - Epoch(train)  [46][ 3400/22878]  base_lr: 3.8228e-02 lr: 3.8228e-02  eta: 10 days, 9:31:09  time: 0.1558  data_time: 0.0248  memory: 7694  loss: 3.2474
2023/10/05 21:34:18 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:34:19 - mmengine - INFO - Epoch(train)  [46][ 3500/22878]  base_lr: 3.8227e-02 lr: 3.8227e-02  eta: 10 days, 9:29:58  time: 0.1573  data_time: 0.0235  memory: 7972  loss: 3.4818
2023/10/05 21:34:34 - mmengine - INFO - Epoch(train)  [46][ 3600/22878]  base_lr: 3.8226e-02 lr: 3.8226e-02  eta: 10 days, 9:28:17  time: 0.1582  data_time: 0.0235  memory: 7641  loss: 3.4449
2023/10/05 21:34:50 - mmengine - INFO - Epoch(train)  [46][ 3700/22878]  base_lr: 3.8226e-02 lr: 3.8226e-02  eta: 10 days, 9:27:51  time: 0.1554  data_time: 0.0230  memory: 8098  loss: 3.3297
2023/10/05 21:35:05 - mmengine - INFO - Epoch(train)  [46][ 3800/22878]  base_lr: 3.8225e-02 lr: 3.8225e-02  eta: 10 days, 9:26:01  time: 0.1472  data_time: 0.0227  memory: 7493  loss: 3.5114
2023/10/05 21:35:20 - mmengine - INFO - Epoch(train)  [46][ 3900/22878]  base_lr: 3.8224e-02 lr: 3.8224e-02  eta: 10 days, 9:25:09  time: 0.1487  data_time: 0.0286  memory: 7737  loss: 3.3926
2023/10/05 21:35:36 - mmengine - INFO - Epoch(train)  [46][ 4000/22878]  base_lr: 3.8224e-02 lr: 3.8224e-02  eta: 10 days, 9:24:06  time: 0.1536  data_time: 0.0237  memory: 7416  loss: 3.3174
2023/10/05 21:35:51 - mmengine - INFO - Epoch(train)  [46][ 4100/22878]  base_lr: 3.8223e-02 lr: 3.8223e-02  eta: 10 days, 9:23:11  time: 0.1538  data_time: 0.0221  memory: 7883  loss: 3.4049
2023/10/05 21:36:06 - mmengine - INFO - Epoch(train)  [46][ 4200/22878]  base_lr: 3.8222e-02 lr: 3.8222e-02  eta: 10 days, 9:23:06  time: 0.1542  data_time: 0.0234  memory: 8057  loss: 3.3587
2023/10/05 21:36:22 - mmengine - INFO - Epoch(train)  [46][ 4300/22878]  base_lr: 3.8222e-02 lr: 3.8222e-02  eta: 10 days, 9:21:40  time: 0.1432  data_time: 0.0228  memory: 7600  loss: 3.4116
2023/10/05 21:36:37 - mmengine - INFO - Epoch(train)  [46][ 4400/22878]  base_lr: 3.8221e-02 lr: 3.8221e-02  eta: 10 days, 9:21:38  time: 0.1619  data_time: 0.0226  memory: 7526  loss: 3.3063
2023/10/05 21:36:51 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:36:52 - mmengine - INFO - Epoch(train)  [46][ 4500/22878]  base_lr: 3.8221e-02 lr: 3.8221e-02  eta: 10 days, 9:20:34  time: 0.1551  data_time: 0.0227  memory: 7691  loss: 3.3877
2023/10/05 21:37:08 - mmengine - INFO - Epoch(train)  [46][ 4600/22878]  base_lr: 3.8220e-02 lr: 3.8220e-02  eta: 10 days, 9:19:14  time: 0.1564  data_time: 0.0232  memory: 7864  loss: 3.3027
2023/10/05 21:37:23 - mmengine - INFO - Epoch(train)  [46][ 4700/22878]  base_lr: 3.8219e-02 lr: 3.8219e-02  eta: 10 days, 9:18:20  time: 0.1500  data_time: 0.0225  memory: 7712  loss: 3.5335
2023/10/05 21:37:38 - mmengine - INFO - Epoch(train)  [46][ 4800/22878]  base_lr: 3.8219e-02 lr: 3.8219e-02  eta: 10 days, 9:17:41  time: 0.1563  data_time: 0.0246  memory: 7637  loss: 3.4205
2023/10/05 21:37:54 - mmengine - INFO - Epoch(train)  [46][ 4900/22878]  base_lr: 3.8218e-02 lr: 3.8218e-02  eta: 10 days, 9:16:27  time: 0.1479  data_time: 0.0240  memory: 7636  loss: 3.4288
2023/10/05 21:38:09 - mmengine - INFO - Epoch(train)  [46][ 5000/22878]  base_lr: 3.8217e-02 lr: 3.8217e-02  eta: 10 days, 9:15:50  time: 0.1518  data_time: 0.0219  memory: 7888  loss: 3.3497
2023/10/05 21:38:25 - mmengine - INFO - Epoch(train)  [46][ 5100/22878]  base_lr: 3.8217e-02 lr: 3.8217e-02  eta: 10 days, 9:15:54  time: 0.1574  data_time: 0.0230  memory: 7926  loss: 3.4242
2023/10/05 21:38:40 - mmengine - INFO - Epoch(train)  [46][ 5200/22878]  base_lr: 3.8216e-02 lr: 3.8216e-02  eta: 10 days, 9:14:58  time: 0.1470  data_time: 0.0220  memory: 7704  loss: 3.3251
2023/10/05 21:38:56 - mmengine - INFO - Epoch(train)  [46][ 5300/22878]  base_lr: 3.8215e-02 lr: 3.8215e-02  eta: 10 days, 9:15:05  time: 0.1509  data_time: 0.0233  memory: 7782  loss: 3.3323
2023/10/05 21:39:11 - mmengine - INFO - Epoch(train)  [46][ 5400/22878]  base_lr: 3.8215e-02 lr: 3.8215e-02  eta: 10 days, 9:14:46  time: 0.1530  data_time: 0.0232  memory: 8124  loss: 3.3873
2023/10/05 21:39:25 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:39:27 - mmengine - INFO - Epoch(train)  [46][ 5500/22878]  base_lr: 3.8214e-02 lr: 3.8214e-02  eta: 10 days, 9:15:14  time: 0.1582  data_time: 0.0252  memory: 8040  loss: 3.3207
2023/10/05 21:39:42 - mmengine - INFO - Epoch(train)  [46][ 5600/22878]  base_lr: 3.8213e-02 lr: 3.8213e-02  eta: 10 days, 9:14:22  time: 0.1652  data_time: 0.0304  memory: 8111  loss: 3.4057
2023/10/05 21:39:58 - mmengine - INFO - Epoch(train)  [46][ 5700/22878]  base_lr: 3.8213e-02 lr: 3.8213e-02  eta: 10 days, 9:14:28  time: 0.1555  data_time: 0.0232  memory: 7740  loss: 3.4210
2023/10/05 21:40:13 - mmengine - INFO - Epoch(train)  [46][ 5800/22878]  base_lr: 3.8212e-02 lr: 3.8212e-02  eta: 10 days, 9:13:35  time: 0.1542  data_time: 0.0233  memory: 7679  loss: 3.3752
2023/10/05 21:40:28 - mmengine - INFO - Epoch(train)  [46][ 5900/22878]  base_lr: 3.8211e-02 lr: 3.8211e-02  eta: 10 days, 9:13:04  time: 0.1540  data_time: 0.0231  memory: 7930  loss: 3.3552
2023/10/05 21:40:44 - mmengine - INFO - Epoch(train)  [46][ 6000/22878]  base_lr: 3.8211e-02 lr: 3.8211e-02  eta: 10 days, 9:12:44  time: 0.1522  data_time: 0.0253  memory: 7586  loss: 3.4259
2023/10/05 21:40:59 - mmengine - INFO - Epoch(train)  [46][ 6100/22878]  base_lr: 3.8210e-02 lr: 3.8210e-02  eta: 10 days, 9:10:59  time: 0.1457  data_time: 0.0233  memory: 7911  loss: 3.3608
2023/10/05 21:41:15 - mmengine - INFO - Epoch(train)  [46][ 6200/22878]  base_lr: 3.8209e-02 lr: 3.8209e-02  eta: 10 days, 9:10:40  time: 0.1454  data_time: 0.0220  memory: 7846  loss: 3.5657
2023/10/05 21:41:30 - mmengine - INFO - Epoch(train)  [46][ 6300/22878]  base_lr: 3.8209e-02 lr: 3.8209e-02  eta: 10 days, 9:10:05  time: 0.1477  data_time: 0.0240  memory: 7834  loss: 3.4205
2023/10/05 21:41:45 - mmengine - INFO - Epoch(train)  [46][ 6400/22878]  base_lr: 3.8208e-02 lr: 3.8208e-02  eta: 10 days, 9:09:23  time: 0.1531  data_time: 0.0214  memory: 7985  loss: 3.4597
2023/10/05 21:41:59 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:42:01 - mmengine - INFO - Epoch(train)  [46][ 6500/22878]  base_lr: 3.8207e-02 lr: 3.8207e-02  eta: 10 days, 9:08:14  time: 0.1474  data_time: 0.0240  memory: 7511  loss: 3.5738
2023/10/05 21:42:16 - mmengine - INFO - Epoch(train)  [46][ 6600/22878]  base_lr: 3.8207e-02 lr: 3.8207e-02  eta: 10 days, 9:07:12  time: 0.1489  data_time: 0.0239  memory: 8109  loss: 3.4576
2023/10/05 21:42:31 - mmengine - INFO - Epoch(train)  [46][ 6700/22878]  base_lr: 3.8206e-02 lr: 3.8206e-02  eta: 10 days, 9:06:39  time: 0.1580  data_time: 0.0242  memory: 8130  loss: 3.4805
2023/10/05 21:42:47 - mmengine - INFO - Epoch(train)  [46][ 6800/22878]  base_lr: 3.8205e-02 lr: 3.8205e-02  eta: 10 days, 9:06:28  time: 0.1554  data_time: 0.0212  memory: 7398  loss: 3.3912
2023/10/05 21:43:02 - mmengine - INFO - Epoch(train)  [46][ 6900/22878]  base_lr: 3.8205e-02 lr: 3.8205e-02  eta: 10 days, 9:06:21  time: 0.1552  data_time: 0.0235  memory: 8037  loss: 3.3978
2023/10/05 21:43:18 - mmengine - INFO - Epoch(train)  [46][ 7000/22878]  base_lr: 3.8204e-02 lr: 3.8204e-02  eta: 10 days, 9:05:45  time: 0.1547  data_time: 0.0217  memory: 7852  loss: 3.2859
2023/10/05 21:43:33 - mmengine - INFO - Epoch(train)  [46][ 7100/22878]  base_lr: 3.8203e-02 lr: 3.8203e-02  eta: 10 days, 9:05:46  time: 0.1567  data_time: 0.0222  memory: 7877  loss: 3.3938
2023/10/05 21:43:49 - mmengine - INFO - Epoch(train)  [46][ 7200/22878]  base_lr: 3.8203e-02 lr: 3.8203e-02  eta: 10 days, 9:04:40  time: 0.1563  data_time: 0.0238  memory: 8022  loss: 3.4478
2023/10/05 21:44:04 - mmengine - INFO - Epoch(train)  [46][ 7300/22878]  base_lr: 3.8202e-02 lr: 3.8202e-02  eta: 10 days, 9:04:12  time: 0.1546  data_time: 0.0284  memory: 7690  loss: 3.4287
2023/10/05 21:44:19 - mmengine - INFO - Epoch(train)  [46][ 7400/22878]  base_lr: 3.8201e-02 lr: 3.8201e-02  eta: 10 days, 9:03:53  time: 0.1586  data_time: 0.0225  memory: 7609  loss: 3.4429
2023/10/05 21:44:34 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:44:35 - mmengine - INFO - Epoch(train)  [46][ 7500/22878]  base_lr: 3.8201e-02 lr: 3.8201e-02  eta: 10 days, 9:04:38  time: 0.1449  data_time: 0.0225  memory: 7516  loss: 3.4522
2023/10/05 21:44:50 - mmengine - INFO - Epoch(train)  [46][ 7600/22878]  base_lr: 3.8200e-02 lr: 3.8200e-02  eta: 10 days, 9:03:30  time: 0.1582  data_time: 0.0238  memory: 7939  loss: 3.3877
2023/10/05 21:45:06 - mmengine - INFO - Epoch(train)  [46][ 7700/22878]  base_lr: 3.8200e-02 lr: 3.8200e-02  eta: 10 days, 9:02:08  time: 0.1541  data_time: 0.0239  memory: 7520  loss: 3.4763
2023/10/05 21:45:21 - mmengine - INFO - Epoch(train)  [46][ 7800/22878]  base_lr: 3.8199e-02 lr: 3.8199e-02  eta: 10 days, 9:01:30  time: 0.1546  data_time: 0.0236  memory: 7921  loss: 3.4022
2023/10/05 21:45:36 - mmengine - INFO - Epoch(train)  [46][ 7900/22878]  base_lr: 3.8198e-02 lr: 3.8198e-02  eta: 10 days, 8:59:51  time: 0.1420  data_time: 0.0225  memory: 7618  loss: 3.5077
2023/10/05 21:45:51 - mmengine - INFO - Epoch(train)  [46][ 8000/22878]  base_lr: 3.8198e-02 lr: 3.8198e-02  eta: 10 days, 8:58:51  time: 0.1469  data_time: 0.0225  memory: 7689  loss: 3.5243
2023/10/05 21:46:07 - mmengine - INFO - Epoch(train)  [46][ 8100/22878]  base_lr: 3.8197e-02 lr: 3.8197e-02  eta: 10 days, 8:57:49  time: 0.1525  data_time: 0.0221  memory: 8442  loss: 3.4430
2023/10/05 21:46:22 - mmengine - INFO - Epoch(train)  [46][ 8200/22878]  base_lr: 3.8196e-02 lr: 3.8196e-02  eta: 10 days, 8:56:40  time: 0.1454  data_time: 0.0225  memory: 7586  loss: 3.4897
2023/10/05 21:46:37 - mmengine - INFO - Epoch(train)  [46][ 8300/22878]  base_lr: 3.8196e-02 lr: 3.8196e-02  eta: 10 days, 8:56:22  time: 0.1445  data_time: 0.0216  memory: 7867  loss: 3.3204
2023/10/05 21:46:52 - mmengine - INFO - Epoch(train)  [46][ 8400/22878]  base_lr: 3.8195e-02 lr: 3.8195e-02  eta: 10 days, 8:55:02  time: 0.1485  data_time: 0.0227  memory: 7885  loss: 3.3410
2023/10/05 21:47:06 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:47:08 - mmengine - INFO - Epoch(train)  [46][ 8500/22878]  base_lr: 3.8194e-02 lr: 3.8194e-02  eta: 10 days, 8:54:47  time: 0.1494  data_time: 0.0225  memory: 8183  loss: 3.3031
2023/10/05 21:47:23 - mmengine - INFO - Epoch(train)  [46][ 8600/22878]  base_lr: 3.8194e-02 lr: 3.8194e-02  eta: 10 days, 8:54:37  time: 0.1593  data_time: 0.0224  memory: 8089  loss: 3.4276
2023/10/05 21:47:39 - mmengine - INFO - Epoch(train)  [46][ 8700/22878]  base_lr: 3.8193e-02 lr: 3.8193e-02  eta: 10 days, 8:53:45  time: 0.1487  data_time: 0.0222  memory: 8374  loss: 3.5063
2023/10/05 21:47:54 - mmengine - INFO - Epoch(train)  [46][ 8800/22878]  base_lr: 3.8192e-02 lr: 3.8192e-02  eta: 10 days, 8:52:38  time: 0.1613  data_time: 0.0236  memory: 8072  loss: 3.3004
2023/10/05 21:48:09 - mmengine - INFO - Epoch(train)  [46][ 8900/22878]  base_lr: 3.8192e-02 lr: 3.8192e-02  eta: 10 days, 8:51:33  time: 0.1518  data_time: 0.0221  memory: 7887  loss: 3.4047
2023/10/05 21:48:25 - mmengine - INFO - Epoch(train)  [46][ 9000/22878]  base_lr: 3.8191e-02 lr: 3.8191e-02  eta: 10 days, 8:51:21  time: 0.1630  data_time: 0.0309  memory: 7778  loss: 3.4714
2023/10/05 21:48:40 - mmengine - INFO - Epoch(train)  [46][ 9100/22878]  base_lr: 3.8190e-02 lr: 3.8190e-02  eta: 10 days, 8:50:39  time: 0.1633  data_time: 0.0245  memory: 7988  loss: 3.4576
2023/10/05 21:48:56 - mmengine - INFO - Epoch(train)  [46][ 9200/22878]  base_lr: 3.8190e-02 lr: 3.8190e-02  eta: 10 days, 8:50:37  time: 0.1576  data_time: 0.0227  memory: 7676  loss: 3.5330
2023/10/05 21:49:11 - mmengine - INFO - Epoch(train)  [46][ 9300/22878]  base_lr: 3.8189e-02 lr: 3.8189e-02  eta: 10 days, 8:49:14  time: 0.1506  data_time: 0.0231  memory: 8232  loss: 3.5840
2023/10/05 21:49:26 - mmengine - INFO - Epoch(train)  [46][ 9400/22878]  base_lr: 3.8188e-02 lr: 3.8188e-02  eta: 10 days, 8:48:44  time: 0.1559  data_time: 0.0207  memory: 7799  loss: 3.3382
2023/10/05 21:49:40 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:49:41 - mmengine - INFO - Epoch(train)  [46][ 9500/22878]  base_lr: 3.8188e-02 lr: 3.8188e-02  eta: 10 days, 8:47:04  time: 0.1527  data_time: 0.0228  memory: 8150  loss: 3.2875
2023/10/05 21:49:57 - mmengine - INFO - Epoch(train)  [46][ 9600/22878]  base_lr: 3.8187e-02 lr: 3.8187e-02  eta: 10 days, 8:46:28  time: 0.1551  data_time: 0.0258  memory: 7533  loss: 3.3793
2023/10/05 21:50:12 - mmengine - INFO - Epoch(train)  [46][ 9700/22878]  base_lr: 3.8186e-02 lr: 3.8186e-02  eta: 10 days, 8:45:27  time: 0.1606  data_time: 0.0224  memory: 7668  loss: 3.3375
2023/10/05 21:50:27 - mmengine - INFO - Epoch(train)  [46][ 9800/22878]  base_lr: 3.8186e-02 lr: 3.8186e-02  eta: 10 days, 8:44:11  time: 0.1468  data_time: 0.0224  memory: 7782  loss: 3.5541
2023/10/05 21:50:43 - mmengine - INFO - Epoch(train)  [46][ 9900/22878]  base_lr: 3.8185e-02 lr: 3.8185e-02  eta: 10 days, 8:44:16  time: 0.1525  data_time: 0.0229  memory: 7696  loss: 3.4495
2023/10/05 21:50:58 - mmengine - INFO - Epoch(train)  [46][10000/22878]  base_lr: 3.8184e-02 lr: 3.8184e-02  eta: 10 days, 8:43:08  time: 0.1407  data_time: 0.0229  memory: 7793  loss: 3.4738
2023/10/05 21:51:13 - mmengine - INFO - Epoch(train)  [46][10100/22878]  base_lr: 3.8184e-02 lr: 3.8184e-02  eta: 10 days, 8:42:30  time: 0.1503  data_time: 0.0230  memory: 8147  loss: 3.6263
2023/10/05 21:51:28 - mmengine - INFO - Epoch(train)  [46][10200/22878]  base_lr: 3.8183e-02 lr: 3.8183e-02  eta: 10 days, 8:41:49  time: 0.1614  data_time: 0.0236  memory: 7639  loss: 3.4680
2023/10/05 21:51:44 - mmengine - INFO - Epoch(train)  [46][10300/22878]  base_lr: 3.8182e-02 lr: 3.8182e-02  eta: 10 days, 8:41:36  time: 0.1528  data_time: 0.0238  memory: 7987  loss: 3.4858
2023/10/05 21:51:59 - mmengine - INFO - Epoch(train)  [46][10400/22878]  base_lr: 3.8182e-02 lr: 3.8182e-02  eta: 10 days, 8:40:36  time: 0.1521  data_time: 0.0243  memory: 7674  loss: 3.5565
2023/10/05 21:52:13 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:52:14 - mmengine - INFO - Epoch(train)  [46][10500/22878]  base_lr: 3.8181e-02 lr: 3.8181e-02  eta: 10 days, 8:39:48  time: 0.1457  data_time: 0.0226  memory: 7801  loss: 3.4213
2023/10/05 21:52:30 - mmengine - INFO - Epoch(train)  [46][10600/22878]  base_lr: 3.8181e-02 lr: 3.8181e-02  eta: 10 days, 8:39:20  time: 0.1540  data_time: 0.0232  memory: 7716  loss: 3.4207
2023/10/05 21:52:45 - mmengine - INFO - Epoch(train)  [46][10700/22878]  base_lr: 3.8180e-02 lr: 3.8180e-02  eta: 10 days, 8:39:08  time: 0.1580  data_time: 0.0316  memory: 7795  loss: 3.4831
2023/10/05 21:53:01 - mmengine - INFO - Epoch(train)  [46][10800/22878]  base_lr: 3.8179e-02 lr: 3.8179e-02  eta: 10 days, 8:38:33  time: 0.1509  data_time: 0.0229  memory: 7726  loss: 3.4890
2023/10/05 21:53:16 - mmengine - INFO - Epoch(train)  [46][10900/22878]  base_lr: 3.8179e-02 lr: 3.8179e-02  eta: 10 days, 8:38:04  time: 0.1481  data_time: 0.0219  memory: 7839  loss: 3.4766
2023/10/05 21:53:32 - mmengine - INFO - Epoch(train)  [46][11000/22878]  base_lr: 3.8178e-02 lr: 3.8178e-02  eta: 10 days, 8:37:36  time: 0.1420  data_time: 0.0205  memory: 7966  loss: 3.4231
2023/10/05 21:53:47 - mmengine - INFO - Epoch(train)  [46][11100/22878]  base_lr: 3.8177e-02 lr: 3.8177e-02  eta: 10 days, 8:36:32  time: 0.1543  data_time: 0.0250  memory: 7968  loss: 3.4456
2023/10/05 21:54:02 - mmengine - INFO - Epoch(train)  [46][11200/22878]  base_lr: 3.8177e-02 lr: 3.8177e-02  eta: 10 days, 8:36:18  time: 0.1495  data_time: 0.0231  memory: 8004  loss: 3.4767
2023/10/05 21:54:18 - mmengine - INFO - Epoch(train)  [46][11300/22878]  base_lr: 3.8176e-02 lr: 3.8176e-02  eta: 10 days, 8:35:56  time: 0.1519  data_time: 0.0241  memory: 7742  loss: 3.4823
2023/10/05 21:54:33 - mmengine - INFO - Epoch(train)  [46][11400/22878]  base_lr: 3.8175e-02 lr: 3.8175e-02  eta: 10 days, 8:35:20  time: 0.1600  data_time: 0.0230  memory: 8031  loss: 3.4064
2023/10/05 21:54:47 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:54:48 - mmengine - INFO - Epoch(train)  [46][11500/22878]  base_lr: 3.8175e-02 lr: 3.8175e-02  eta: 10 days, 8:34:32  time: 0.1573  data_time: 0.0233  memory: 8231  loss: 3.2988
2023/10/05 21:55:04 - mmengine - INFO - Epoch(train)  [46][11600/22878]  base_lr: 3.8174e-02 lr: 3.8174e-02  eta: 10 days, 8:34:28  time: 0.1495  data_time: 0.0239  memory: 7946  loss: 3.4631
2023/10/05 21:55:19 - mmengine - INFO - Epoch(train)  [46][11700/22878]  base_lr: 3.8173e-02 lr: 3.8173e-02  eta: 10 days, 8:33:44  time: 0.1454  data_time: 0.0222  memory: 7905  loss: 3.5636
2023/10/05 21:55:35 - mmengine - INFO - Epoch(train)  [46][11800/22878]  base_lr: 3.8173e-02 lr: 3.8173e-02  eta: 10 days, 8:33:45  time: 0.1635  data_time: 0.0231  memory: 7966  loss: 3.3392
2023/10/05 21:55:50 - mmengine - INFO - Epoch(train)  [46][11900/22878]  base_lr: 3.8172e-02 lr: 3.8172e-02  eta: 10 days, 8:33:36  time: 0.1556  data_time: 0.0225  memory: 7724  loss: 3.3831
2023/10/05 21:56:06 - mmengine - INFO - Epoch(train)  [46][12000/22878]  base_lr: 3.8171e-02 lr: 3.8171e-02  eta: 10 days, 8:32:55  time: 0.1590  data_time: 0.0231  memory: 8176  loss: 3.5309
2023/10/05 21:56:21 - mmengine - INFO - Epoch(train)  [46][12100/22878]  base_lr: 3.8171e-02 lr: 3.8171e-02  eta: 10 days, 8:32:31  time: 0.1532  data_time: 0.0228  memory: 7568  loss: 3.4310
2023/10/05 21:56:36 - mmengine - INFO - Epoch(train)  [46][12200/22878]  base_lr: 3.8170e-02 lr: 3.8170e-02  eta: 10 days, 8:31:47  time: 0.1547  data_time: 0.0241  memory: 7667  loss: 3.3684
2023/10/05 21:56:52 - mmengine - INFO - Epoch(train)  [46][12300/22878]  base_lr: 3.8169e-02 lr: 3.8169e-02  eta: 10 days, 8:30:53  time: 0.1525  data_time: 0.0232  memory: 8212  loss: 3.4615
2023/10/05 21:57:07 - mmengine - INFO - Epoch(train)  [46][12400/22878]  base_lr: 3.8169e-02 lr: 3.8169e-02  eta: 10 days, 8:30:26  time: 0.1641  data_time: 0.0297  memory: 7919  loss: 3.3896
2023/10/05 21:57:21 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:57:23 - mmengine - INFO - Epoch(train)  [46][12500/22878]  base_lr: 3.8168e-02 lr: 3.8168e-02  eta: 10 days, 8:30:11  time: 0.1501  data_time: 0.0232  memory: 7544  loss: 3.4969
2023/10/05 21:57:38 - mmengine - INFO - Epoch(train)  [46][12600/22878]  base_lr: 3.8167e-02 lr: 3.8167e-02  eta: 10 days, 8:29:20  time: 0.1552  data_time: 0.0233  memory: 7613  loss: 3.3094
2023/10/05 21:57:53 - mmengine - INFO - Epoch(train)  [46][12700/22878]  base_lr: 3.8167e-02 lr: 3.8167e-02  eta: 10 days, 8:29:24  time: 0.1462  data_time: 0.0237  memory: 7777  loss: 3.3623
2023/10/05 21:58:09 - mmengine - INFO - Epoch(train)  [46][12800/22878]  base_lr: 3.8166e-02 lr: 3.8166e-02  eta: 10 days, 8:29:22  time: 0.1544  data_time: 0.0238  memory: 7630  loss: 3.4165
2023/10/05 21:58:24 - mmengine - INFO - Epoch(train)  [46][12900/22878]  base_lr: 3.8165e-02 lr: 3.8165e-02  eta: 10 days, 8:28:30  time: 0.1584  data_time: 0.0233  memory: 7816  loss: 3.3856
2023/10/05 21:58:40 - mmengine - INFO - Epoch(train)  [46][13000/22878]  base_lr: 3.8165e-02 lr: 3.8165e-02  eta: 10 days, 8:28:17  time: 0.1497  data_time: 0.0240  memory: 8133  loss: 3.5352
2023/10/05 21:58:55 - mmengine - INFO - Epoch(train)  [46][13100/22878]  base_lr: 3.8164e-02 lr: 3.8164e-02  eta: 10 days, 8:27:37  time: 0.1546  data_time: 0.0217  memory: 7499  loss: 3.3557
2023/10/05 21:59:10 - mmengine - INFO - Epoch(train)  [46][13200/22878]  base_lr: 3.8163e-02 lr: 3.8163e-02  eta: 10 days, 8:26:58  time: 0.1506  data_time: 0.0236  memory: 7443  loss: 3.4352
2023/10/05 21:59:26 - mmengine - INFO - Epoch(train)  [46][13300/22878]  base_lr: 3.8163e-02 lr: 3.8163e-02  eta: 10 days, 8:26:21  time: 0.1508  data_time: 0.0224  memory: 7779  loss: 3.2491
2023/10/05 21:59:41 - mmengine - INFO - Epoch(train)  [46][13400/22878]  base_lr: 3.8162e-02 lr: 3.8162e-02  eta: 10 days, 8:24:58  time: 0.1510  data_time: 0.0225  memory: 7582  loss: 3.5333
2023/10/05 21:59:55 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 21:59:56 - mmengine - INFO - Epoch(train)  [46][13500/22878]  base_lr: 3.8161e-02 lr: 3.8161e-02  eta: 10 days, 8:25:06  time: 0.1467  data_time: 0.0224  memory: 7777  loss: 3.4590
2023/10/05 22:00:12 - mmengine - INFO - Epoch(train)  [46][13600/22878]  base_lr: 3.8161e-02 lr: 3.8161e-02  eta: 10 days, 8:24:19  time: 0.1491  data_time: 0.0238  memory: 7769  loss: 3.4758
2023/10/05 22:00:27 - mmengine - INFO - Epoch(train)  [46][13700/22878]  base_lr: 3.8160e-02 lr: 3.8160e-02  eta: 10 days, 8:23:32  time: 0.1472  data_time: 0.0242  memory: 7966  loss: 3.4760
2023/10/05 22:00:42 - mmengine - INFO - Epoch(train)  [46][13800/22878]  base_lr: 3.8160e-02 lr: 3.8160e-02  eta: 10 days, 8:23:15  time: 0.1460  data_time: 0.0222  memory: 7531  loss: 3.4206
2023/10/05 22:00:58 - mmengine - INFO - Epoch(train)  [46][13900/22878]  base_lr: 3.8159e-02 lr: 3.8159e-02  eta: 10 days, 8:23:09  time: 0.1480  data_time: 0.0227  memory: 7859  loss: 3.4814
2023/10/05 22:01:13 - mmengine - INFO - Epoch(train)  [46][14000/22878]  base_lr: 3.8158e-02 lr: 3.8158e-02  eta: 10 days, 8:22:52  time: 0.1488  data_time: 0.0215  memory: 7706  loss: 3.5053
2023/10/05 22:01:29 - mmengine - INFO - Epoch(train)  [46][14100/22878]  base_lr: 3.8158e-02 lr: 3.8158e-02  eta: 10 days, 8:22:13  time: 0.1616  data_time: 0.0300  memory: 8100  loss: 3.3980
2023/10/05 22:01:44 - mmengine - INFO - Epoch(train)  [46][14200/22878]  base_lr: 3.8157e-02 lr: 3.8157e-02  eta: 10 days, 8:21:53  time: 0.1515  data_time: 0.0228  memory: 7463  loss: 3.4395
2023/10/05 22:02:00 - mmengine - INFO - Epoch(train)  [46][14300/22878]  base_lr: 3.8156e-02 lr: 3.8156e-02  eta: 10 days, 8:21:42  time: 0.1574  data_time: 0.0247  memory: 8227  loss: 3.3627
2023/10/05 22:02:15 - mmengine - INFO - Epoch(train)  [46][14400/22878]  base_lr: 3.8156e-02 lr: 3.8156e-02  eta: 10 days, 8:20:35  time: 0.1507  data_time: 0.0236  memory: 7896  loss: 3.5379
2023/10/05 22:02:29 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:02:30 - mmengine - INFO - Epoch(train)  [46][14500/22878]  base_lr: 3.8155e-02 lr: 3.8155e-02  eta: 10 days, 8:19:59  time: 0.1450  data_time: 0.0222  memory: 7499  loss: 3.4342
2023/10/05 22:02:45 - mmengine - INFO - Epoch(train)  [46][14600/22878]  base_lr: 3.8154e-02 lr: 3.8154e-02  eta: 10 days, 8:19:05  time: 0.1468  data_time: 0.0233  memory: 7845  loss: 3.3927
2023/10/05 22:03:01 - mmengine - INFO - Epoch(train)  [46][14700/22878]  base_lr: 3.8154e-02 lr: 3.8154e-02  eta: 10 days, 8:18:29  time: 0.1487  data_time: 0.0245  memory: 7809  loss: 3.4093
2023/10/05 22:03:16 - mmengine - INFO - Epoch(train)  [46][14800/22878]  base_lr: 3.8153e-02 lr: 3.8153e-02  eta: 10 days, 8:17:39  time: 0.1519  data_time: 0.0222  memory: 7936  loss: 3.6831
2023/10/05 22:03:32 - mmengine - INFO - Epoch(train)  [46][14900/22878]  base_lr: 3.8152e-02 lr: 3.8152e-02  eta: 10 days, 8:17:36  time: 0.1471  data_time: 0.0240  memory: 7906  loss: 3.5599
2023/10/05 22:03:47 - mmengine - INFO - Epoch(train)  [46][15000/22878]  base_lr: 3.8152e-02 lr: 3.8152e-02  eta: 10 days, 8:17:19  time: 0.1480  data_time: 0.0236  memory: 7935  loss: 3.4520
2023/10/05 22:04:02 - mmengine - INFO - Epoch(train)  [46][15100/22878]  base_lr: 3.8151e-02 lr: 3.8151e-02  eta: 10 days, 8:15:36  time: 0.1499  data_time: 0.0245  memory: 7421  loss: 3.4783
2023/10/05 22:04:17 - mmengine - INFO - Epoch(train)  [46][15200/22878]  base_lr: 3.8150e-02 lr: 3.8150e-02  eta: 10 days, 8:14:14  time: 0.1451  data_time: 0.0223  memory: 7804  loss: 3.4402
2023/10/05 22:04:32 - mmengine - INFO - Epoch(train)  [46][15300/22878]  base_lr: 3.8150e-02 lr: 3.8150e-02  eta: 10 days, 8:12:54  time: 0.1418  data_time: 0.0256  memory: 7637  loss: 3.4483
2023/10/05 22:04:48 - mmengine - INFO - Epoch(train)  [46][15400/22878]  base_lr: 3.8149e-02 lr: 3.8149e-02  eta: 10 days, 8:12:45  time: 0.1557  data_time: 0.0229  memory: 7942  loss: 3.3722
2023/10/05 22:05:01 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:05:03 - mmengine - INFO - Epoch(train)  [46][15500/22878]  base_lr: 3.8148e-02 lr: 3.8148e-02  eta: 10 days, 8:12:20  time: 0.1479  data_time: 0.0221  memory: 8093  loss: 3.3297
2023/10/05 22:05:18 - mmengine - INFO - Epoch(train)  [46][15600/22878]  base_lr: 3.8148e-02 lr: 3.8148e-02  eta: 10 days, 8:10:53  time: 0.1430  data_time: 0.0210  memory: 7500  loss: 3.5039
2023/10/05 22:05:34 - mmengine - INFO - Epoch(train)  [46][15700/22878]  base_lr: 3.8147e-02 lr: 3.8147e-02  eta: 10 days, 8:11:00  time: 0.1540  data_time: 0.0219  memory: 7998  loss: 3.5142
2023/10/05 22:05:49 - mmengine - INFO - Epoch(train)  [46][15800/22878]  base_lr: 3.8146e-02 lr: 3.8146e-02  eta: 10 days, 8:09:45  time: 0.1693  data_time: 0.0320  memory: 7892  loss: 3.3711
2023/10/05 22:06:04 - mmengine - INFO - Epoch(train)  [46][15900/22878]  base_lr: 3.8146e-02 lr: 3.8146e-02  eta: 10 days, 8:09:04  time: 0.1574  data_time: 0.0234  memory: 7999  loss: 3.4613
2023/10/05 22:06:19 - mmengine - INFO - Epoch(train)  [46][16000/22878]  base_lr: 3.8145e-02 lr: 3.8145e-02  eta: 10 days, 8:07:42  time: 0.1495  data_time: 0.0220  memory: 7322  loss: 3.3598
2023/10/05 22:06:35 - mmengine - INFO - Epoch(train)  [46][16100/22878]  base_lr: 3.8144e-02 lr: 3.8144e-02  eta: 10 days, 8:10:07  time: 0.1667  data_time: 0.0192  memory: 8395  loss: 3.4246
2023/10/05 22:06:52 - mmengine - INFO - Epoch(train)  [46][16200/22878]  base_lr: 3.8144e-02 lr: 3.8144e-02  eta: 10 days, 8:11:28  time: 0.1708  data_time: 0.0225  memory: 7803  loss: 3.4283
2023/10/05 22:07:08 - mmengine - INFO - Epoch(train)  [46][16300/22878]  base_lr: 3.8143e-02 lr: 3.8143e-02  eta: 10 days, 8:13:18  time: 0.1725  data_time: 0.0232  memory: 7553  loss: 3.6189
2023/10/05 22:07:25 - mmengine - INFO - Epoch(train)  [46][16400/22878]  base_lr: 3.8142e-02 lr: 3.8142e-02  eta: 10 days, 8:16:29  time: 0.1669  data_time: 0.0235  memory: 7920  loss: 3.5789
2023/10/05 22:07:39 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:07:41 - mmengine - INFO - Epoch(train)  [46][16500/22878]  base_lr: 3.8142e-02 lr: 3.8142e-02  eta: 10 days, 8:17:59  time: 0.1602  data_time: 0.0220  memory: 7741  loss: 3.3978
2023/10/05 22:07:57 - mmengine - INFO - Epoch(train)  [46][16600/22878]  base_lr: 3.8141e-02 lr: 3.8141e-02  eta: 10 days, 8:18:24  time: 0.1638  data_time: 0.0229  memory: 8025  loss: 3.4303
2023/10/05 22:08:13 - mmengine - INFO - Epoch(train)  [46][16700/22878]  base_lr: 3.8141e-02 lr: 3.8141e-02  eta: 10 days, 8:20:44  time: 0.1726  data_time: 0.0235  memory: 7784  loss: 3.4854
2023/10/05 22:08:30 - mmengine - INFO - Epoch(train)  [46][16800/22878]  base_lr: 3.8140e-02 lr: 3.8140e-02  eta: 10 days, 8:23:07  time: 0.1605  data_time: 0.0215  memory: 8250  loss: 3.4723
2023/10/05 22:08:46 - mmengine - INFO - Epoch(train)  [46][16900/22878]  base_lr: 3.8139e-02 lr: 3.8139e-02  eta: 10 days, 8:25:45  time: 0.1699  data_time: 0.0207  memory: 8006  loss: 3.4068
2023/10/05 22:09:03 - mmengine - INFO - Epoch(train)  [46][17000/22878]  base_lr: 3.8139e-02 lr: 3.8139e-02  eta: 10 days, 8:27:53  time: 0.1658  data_time: 0.0206  memory: 7905  loss: 3.5249
2023/10/05 22:09:20 - mmengine - INFO - Epoch(train)  [46][17100/22878]  base_lr: 3.8138e-02 lr: 3.8138e-02  eta: 10 days, 8:30:31  time: 0.1599  data_time: 0.0227  memory: 7808  loss: 3.4985
2023/10/05 22:09:36 - mmengine - INFO - Epoch(train)  [46][17200/22878]  base_lr: 3.8137e-02 lr: 3.8137e-02  eta: 10 days, 8:33:15  time: 0.1658  data_time: 0.0234  memory: 7326  loss: 3.4812
2023/10/05 22:09:53 - mmengine - INFO - Epoch(train)  [46][17300/22878]  base_lr: 3.8137e-02 lr: 3.8137e-02  eta: 10 days, 8:35:52  time: 0.1699  data_time: 0.0190  memory: 7630  loss: 3.3532
2023/10/05 22:10:10 - mmengine - INFO - Epoch(train)  [46][17400/22878]  base_lr: 3.8136e-02 lr: 3.8136e-02  eta: 10 days, 8:38:03  time: 0.1761  data_time: 0.0220  memory: 8329  loss: 3.4422
2023/10/05 22:10:25 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:10:26 - mmengine - INFO - Epoch(train)  [46][17500/22878]  base_lr: 3.8135e-02 lr: 3.8135e-02  eta: 10 days, 8:40:42  time: 0.1611  data_time: 0.0327  memory: 7752  loss: 3.4425
2023/10/05 22:10:43 - mmengine - INFO - Epoch(train)  [46][17600/22878]  base_lr: 3.8135e-02 lr: 3.8135e-02  eta: 10 days, 8:42:37  time: 0.1683  data_time: 0.0193  memory: 7726  loss: 3.4414
2023/10/05 22:10:59 - mmengine - INFO - Epoch(train)  [46][17700/22878]  base_lr: 3.8134e-02 lr: 3.8134e-02  eta: 10 days, 8:44:28  time: 0.1614  data_time: 0.0245  memory: 7509  loss: 3.5087
2023/10/05 22:11:16 - mmengine - INFO - Epoch(train)  [46][17800/22878]  base_lr: 3.8133e-02 lr: 3.8133e-02  eta: 10 days, 8:46:30  time: 0.1810  data_time: 0.0218  memory: 7955  loss: 3.5299
2023/10/05 22:11:32 - mmengine - INFO - Epoch(train)  [46][17900/22878]  base_lr: 3.8133e-02 lr: 3.8133e-02  eta: 10 days, 8:48:57  time: 0.1853  data_time: 0.0228  memory: 7956  loss: 3.4204
2023/10/05 22:11:48 - mmengine - INFO - Epoch(train)  [46][18000/22878]  base_lr: 3.8132e-02 lr: 3.8132e-02  eta: 10 days, 8:49:55  time: 0.1634  data_time: 0.0229  memory: 7642  loss: 3.5202
2023/10/05 22:12:05 - mmengine - INFO - Epoch(train)  [46][18100/22878]  base_lr: 3.8131e-02 lr: 3.8131e-02  eta: 10 days, 8:52:22  time: 0.1518  data_time: 0.0201  memory: 7751  loss: 3.3385
2023/10/05 22:12:22 - mmengine - INFO - Epoch(train)  [46][18200/22878]  base_lr: 3.8131e-02 lr: 3.8131e-02  eta: 10 days, 8:54:48  time: 0.1687  data_time: 0.0241  memory: 7768  loss: 3.3793
2023/10/05 22:12:38 - mmengine - INFO - Epoch(train)  [46][18300/22878]  base_lr: 3.8130e-02 lr: 3.8130e-02  eta: 10 days, 8:57:03  time: 0.1643  data_time: 0.0227  memory: 7868  loss: 3.6489
2023/10/05 22:12:54 - mmengine - INFO - Epoch(train)  [46][18400/22878]  base_lr: 3.8129e-02 lr: 3.8129e-02  eta: 10 days, 8:58:34  time: 0.1715  data_time: 0.0227  memory: 7753  loss: 3.4094
2023/10/05 22:13:09 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:13:11 - mmengine - INFO - Epoch(train)  [46][18500/22878]  base_lr: 3.8129e-02 lr: 3.8129e-02  eta: 10 days, 9:00:38  time: 0.1673  data_time: 0.0226  memory: 7718  loss: 3.5276
2023/10/05 22:13:27 - mmengine - INFO - Epoch(train)  [46][18600/22878]  base_lr: 3.8128e-02 lr: 3.8128e-02  eta: 10 days, 9:01:25  time: 0.1485  data_time: 0.0239  memory: 7818  loss: 3.4076
2023/10/05 22:13:44 - mmengine - INFO - Epoch(train)  [46][18700/22878]  base_lr: 3.8127e-02 lr: 3.8127e-02  eta: 10 days, 9:03:49  time: 0.1600  data_time: 0.0238  memory: 7933  loss: 3.2956
2023/10/05 22:14:00 - mmengine - INFO - Epoch(train)  [46][18800/22878]  base_lr: 3.8127e-02 lr: 3.8127e-02  eta: 10 days, 9:05:52  time: 0.1576  data_time: 0.0223  memory: 7669  loss: 3.4017
2023/10/05 22:14:17 - mmengine - INFO - Epoch(train)  [46][18900/22878]  base_lr: 3.8126e-02 lr: 3.8126e-02  eta: 10 days, 9:08:38  time: 0.1598  data_time: 0.0260  memory: 8052  loss: 3.3173
2023/10/05 22:14:33 - mmengine - INFO - Epoch(train)  [46][19000/22878]  base_lr: 3.8125e-02 lr: 3.8125e-02  eta: 10 days, 9:09:49  time: 0.1746  data_time: 0.0232  memory: 7712  loss: 3.3720
2023/10/05 22:14:50 - mmengine - INFO - Epoch(train)  [46][19100/22878]  base_lr: 3.8125e-02 lr: 3.8125e-02  eta: 10 days, 9:11:55  time: 0.1828  data_time: 0.0200  memory: 7785  loss: 3.4394
2023/10/05 22:15:06 - mmengine - INFO - Epoch(train)  [46][19200/22878]  base_lr: 3.8124e-02 lr: 3.8124e-02  eta: 10 days, 9:14:07  time: 0.1901  data_time: 0.0314  memory: 8128  loss: 3.2603
2023/10/05 22:15:23 - mmengine - INFO - Epoch(train)  [46][19300/22878]  base_lr: 3.8123e-02 lr: 3.8123e-02  eta: 10 days, 9:16:04  time: 0.1627  data_time: 0.0243  memory: 7579  loss: 3.4849
2023/10/05 22:15:39 - mmengine - INFO - Epoch(train)  [46][19400/22878]  base_lr: 3.8123e-02 lr: 3.8123e-02  eta: 10 days, 9:17:29  time: 0.1458  data_time: 0.0231  memory: 7555  loss: 3.4074
2023/10/05 22:15:54 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:15:55 - mmengine - INFO - Epoch(train)  [46][19500/22878]  base_lr: 3.8122e-02 lr: 3.8122e-02  eta: 10 days, 9:18:47  time: 0.1522  data_time: 0.0228  memory: 7987  loss: 3.4001
2023/10/05 22:16:12 - mmengine - INFO - Epoch(train)  [46][19600/22878]  base_lr: 3.8121e-02 lr: 3.8121e-02  eta: 10 days, 9:20:41  time: 0.1775  data_time: 0.0213  memory: 8112  loss: 3.5194
2023/10/05 22:16:28 - mmengine - INFO - Epoch(train)  [46][19700/22878]  base_lr: 3.8121e-02 lr: 3.8121e-02  eta: 10 days, 9:22:14  time: 0.1679  data_time: 0.0229  memory: 8052  loss: 3.3679
2023/10/05 22:16:45 - mmengine - INFO - Epoch(train)  [46][19800/22878]  base_lr: 3.8120e-02 lr: 3.8120e-02  eta: 10 days, 9:24:12  time: 0.1610  data_time: 0.0224  memory: 7452  loss: 3.3859
2023/10/05 22:17:01 - mmengine - INFO - Epoch(train)  [46][19900/22878]  base_lr: 3.8120e-02 lr: 3.8120e-02  eta: 10 days, 9:25:40  time: 0.1711  data_time: 0.0242  memory: 8012  loss: 3.4268
2023/10/05 22:17:18 - mmengine - INFO - Epoch(train)  [46][20000/22878]  base_lr: 3.8119e-02 lr: 3.8119e-02  eta: 10 days, 9:28:17  time: 0.1651  data_time: 0.0226  memory: 7705  loss: 3.5467
2023/10/05 22:17:34 - mmengine - INFO - Epoch(train)  [46][20100/22878]  base_lr: 3.8118e-02 lr: 3.8118e-02  eta: 10 days, 9:29:54  time: 0.1557  data_time: 0.0214  memory: 7765  loss: 3.4798
2023/10/05 22:17:50 - mmengine - INFO - Epoch(train)  [46][20200/22878]  base_lr: 3.8118e-02 lr: 3.8118e-02  eta: 10 days, 9:31:09  time: 0.1540  data_time: 0.0193  memory: 8038  loss: 3.4618
2023/10/05 22:18:07 - mmengine - INFO - Epoch(train)  [46][20300/22878]  base_lr: 3.8117e-02 lr: 3.8117e-02  eta: 10 days, 9:33:32  time: 0.1744  data_time: 0.0230  memory: 7806  loss: 3.5147
2023/10/05 22:18:24 - mmengine - INFO - Epoch(train)  [46][20400/22878]  base_lr: 3.8116e-02 lr: 3.8116e-02  eta: 10 days, 9:35:10  time: 0.1696  data_time: 0.0249  memory: 7718  loss: 3.5071
2023/10/05 22:18:38 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:18:40 - mmengine - INFO - Epoch(train)  [46][20500/22878]  base_lr: 3.8116e-02 lr: 3.8116e-02  eta: 10 days, 9:36:29  time: 0.1687  data_time: 0.0264  memory: 7626  loss: 3.5208
2023/10/05 22:18:56 - mmengine - INFO - Epoch(train)  [46][20600/22878]  base_lr: 3.8115e-02 lr: 3.8115e-02  eta: 10 days, 9:37:29  time: 0.1572  data_time: 0.0226  memory: 7705  loss: 3.4445
2023/10/05 22:19:12 - mmengine - INFO - Epoch(train)  [46][20700/22878]  base_lr: 3.8114e-02 lr: 3.8114e-02  eta: 10 days, 9:38:14  time: 0.1560  data_time: 0.0238  memory: 8179  loss: 3.4253
2023/10/05 22:19:28 - mmengine - INFO - Epoch(train)  [46][20800/22878]  base_lr: 3.8114e-02 lr: 3.8114e-02  eta: 10 days, 9:38:20  time: 0.1612  data_time: 0.0226  memory: 7697  loss: 3.4943
2023/10/05 22:19:44 - mmengine - INFO - Epoch(train)  [46][20900/22878]  base_lr: 3.8113e-02 lr: 3.8113e-02  eta: 10 days, 9:39:31  time: 0.1639  data_time: 0.0299  memory: 7550  loss: 3.3938
2023/10/05 22:20:00 - mmengine - INFO - Epoch(train)  [46][21000/22878]  base_lr: 3.8112e-02 lr: 3.8112e-02  eta: 10 days, 9:41:21  time: 0.1660  data_time: 0.0214  memory: 7625  loss: 3.4958
2023/10/05 22:20:17 - mmengine - INFO - Epoch(train)  [46][21100/22878]  base_lr: 3.8112e-02 lr: 3.8112e-02  eta: 10 days, 9:43:48  time: 0.1656  data_time: 0.0207  memory: 7633  loss: 3.6147
2023/10/05 22:20:34 - mmengine - INFO - Epoch(train)  [46][21200/22878]  base_lr: 3.8111e-02 lr: 3.8111e-02  eta: 10 days, 9:46:02  time: 0.1502  data_time: 0.0222  memory: 8029  loss: 3.3882
2023/10/05 22:20:51 - mmengine - INFO - Epoch(train)  [46][21300/22878]  base_lr: 3.8110e-02 lr: 3.8110e-02  eta: 10 days, 9:48:11  time: 0.1622  data_time: 0.0214  memory: 7814  loss: 3.4606
2023/10/05 22:21:07 - mmengine - INFO - Epoch(train)  [46][21400/22878]  base_lr: 3.8110e-02 lr: 3.8110e-02  eta: 10 days, 9:50:36  time: 0.1625  data_time: 0.0235  memory: 7912  loss: 3.4768
2023/10/05 22:21:22 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:21:24 - mmengine - INFO - Epoch(train)  [46][21500/22878]  base_lr: 3.8109e-02 lr: 3.8109e-02  eta: 10 days, 9:52:10  time: 0.1673  data_time: 0.0196  memory: 7899  loss: 3.2259
2023/10/05 22:21:40 - mmengine - INFO - Epoch(train)  [46][21600/22878]  base_lr: 3.8108e-02 lr: 3.8108e-02  eta: 10 days, 9:53:39  time: 0.1734  data_time: 0.0206  memory: 7592  loss: 3.5601
2023/10/05 22:21:57 - mmengine - INFO - Epoch(train)  [46][21700/22878]  base_lr: 3.8108e-02 lr: 3.8108e-02  eta: 10 days, 9:55:40  time: 0.1531  data_time: 0.0233  memory: 7611  loss: 3.5099
2023/10/05 22:22:14 - mmengine - INFO - Epoch(train)  [46][21800/22878]  base_lr: 3.8107e-02 lr: 3.8107e-02  eta: 10 days, 9:57:55  time: 0.1624  data_time: 0.0242  memory: 7803  loss: 3.3885
2023/10/05 22:22:30 - mmengine - INFO - Epoch(train)  [46][21900/22878]  base_lr: 3.8106e-02 lr: 3.8106e-02  eta: 10 days, 9:59:17  time: 0.1640  data_time: 0.0232  memory: 7709  loss: 3.5490
2023/10/05 22:22:46 - mmengine - INFO - Epoch(train)  [46][22000/22878]  base_lr: 3.8106e-02 lr: 3.8106e-02  eta: 10 days, 10:00:40  time: 0.1506  data_time: 0.0188  memory: 7518  loss: 3.3616
2023/10/05 22:23:03 - mmengine - INFO - Epoch(train)  [46][22100/22878]  base_lr: 3.8105e-02 lr: 3.8105e-02  eta: 10 days, 10:03:22  time: 0.1563  data_time: 0.0189  memory: 8191  loss: 3.4311
2023/10/05 22:23:20 - mmengine - INFO - Epoch(train)  [46][22200/22878]  base_lr: 3.8104e-02 lr: 3.8104e-02  eta: 10 days, 10:05:19  time: 0.1526  data_time: 0.0203  memory: 7946  loss: 3.5111
2023/10/05 22:23:36 - mmengine - INFO - Epoch(train)  [46][22300/22878]  base_lr: 3.8104e-02 lr: 3.8104e-02  eta: 10 days, 10:06:49  time: 0.1624  data_time: 0.0188  memory: 8100  loss: 3.5692
2023/10/05 22:23:53 - mmengine - INFO - Epoch(train)  [46][22400/22878]  base_lr: 3.8103e-02 lr: 3.8103e-02  eta: 10 days, 10:07:44  time: 0.1693  data_time: 0.0237  memory: 7817  loss: 3.4206
2023/10/05 22:24:07 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:24:09 - mmengine - INFO - Epoch(train)  [46][22500/22878]  base_lr: 3.8102e-02 lr: 3.8102e-02  eta: 10 days, 10:09:13  time: 0.1644  data_time: 0.0241  memory: 7925  loss: 3.5192
2023/10/05 22:24:26 - mmengine - INFO - Epoch(train)  [46][22600/22878]  base_lr: 3.8102e-02 lr: 3.8102e-02  eta: 10 days, 10:11:48  time: 0.1786  data_time: 0.0304  memory: 7501  loss: 3.3919
2023/10/05 22:24:42 - mmengine - INFO - Epoch(train)  [46][22700/22878]  base_lr: 3.8101e-02 lr: 3.8101e-02  eta: 10 days, 10:13:22  time: 0.1507  data_time: 0.0233  memory: 7531  loss: 3.3586
2023/10/05 22:24:59 - mmengine - INFO - Epoch(train)  [46][22800/22878]  base_lr: 3.8101e-02 lr: 3.8101e-02  eta: 10 days, 10:15:12  time: 0.1585  data_time: 0.0223  memory: 7951  loss: 3.3536
2023/10/05 22:25:12 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:25:12 - mmengine - INFO - Saving checkpoint at 46 epochs
2023/10/05 22:25:22 - mmengine - INFO - Epoch(val)  [46][100/893]    eta: 0:01:04  time: 0.0772  data_time: 0.0296  memory: 7845  
2023/10/05 22:25:29 - mmengine - INFO - Epoch(val)  [46][200/893]    eta: 0:00:55  time: 0.0779  data_time: 0.0296  memory: 1101  
2023/10/05 22:25:37 - mmengine - INFO - Epoch(val)  [46][300/893]    eta: 0:00:47  time: 0.0784  data_time: 0.0296  memory: 1101  
2023/10/05 22:25:45 - mmengine - INFO - Epoch(val)  [46][400/893]    eta: 0:00:39  time: 0.0796  data_time: 0.0303  memory: 1101  
2023/10/05 22:25:53 - mmengine - INFO - Epoch(val)  [46][500/893]    eta: 0:00:31  time: 0.0792  data_time: 0.0308  memory: 1101  
2023/10/05 22:26:01 - mmengine - INFO - Epoch(val)  [46][600/893]    eta: 0:00:23  time: 0.0785  data_time: 0.0300  memory: 1101  
2023/10/05 22:26:09 - mmengine - INFO - Epoch(val)  [46][700/893]    eta: 0:00:15  time: 0.0801  data_time: 0.0306  memory: 1101  
2023/10/05 22:26:17 - mmengine - INFO - Epoch(val)  [46][800/893]    eta: 0:00:07  time: 0.0794  data_time: 0.0307  memory: 1101  
2023/10/05 22:26:25 - mmengine - INFO - Epoch(val) [46][893/893]    accuracy/top1: 47.0740  accuracy/top5: 72.2260  data_time: 0.0308  time: 0.0795
2023/10/05 22:26:42 - mmengine - INFO - Epoch(train)  [47][  100/22878]  base_lr: 3.8099e-02 lr: 3.8099e-02  eta: 10 days, 10:19:47  time: 0.1756  data_time: 0.0270  memory: 7659  loss: 3.4423
2023/10/05 22:26:59 - mmengine - INFO - Epoch(train)  [47][  200/22878]  base_lr: 3.8099e-02 lr: 3.8099e-02  eta: 10 days, 10:21:16  time: 0.1609  data_time: 0.0247  memory: 7412  loss: 3.3454
2023/10/05 22:27:16 - mmengine - INFO - Epoch(train)  [47][  300/22878]  base_lr: 3.8098e-02 lr: 3.8098e-02  eta: 10 days, 10:23:15  time: 0.1524  data_time: 0.0294  memory: 8039  loss: 3.2909
2023/10/05 22:27:33 - mmengine - INFO - Epoch(train)  [47][  400/22878]  base_lr: 3.8097e-02 lr: 3.8097e-02  eta: 10 days, 10:25:59  time: 0.1692  data_time: 0.0230  memory: 7736  loss: 3.2772
2023/10/05 22:27:49 - mmengine - INFO - Epoch(train)  [47][  500/22878]  base_lr: 3.8097e-02 lr: 3.8097e-02  eta: 10 days, 10:27:49  time: 0.1489  data_time: 0.0191  memory: 7726  loss: 3.2201
2023/10/05 22:28:06 - mmengine - INFO - Epoch(train)  [47][  600/22878]  base_lr: 3.8096e-02 lr: 3.8096e-02  eta: 10 days, 10:30:47  time: 0.1772  data_time: 0.0330  memory: 8024  loss: 3.2644
2023/10/05 22:28:09 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:28:23 - mmengine - INFO - Epoch(train)  [47][  700/22878]  base_lr: 3.8095e-02 lr: 3.8095e-02  eta: 10 days, 10:33:18  time: 0.1529  data_time: 0.0280  memory: 7911  loss: 3.5394
2023/10/05 22:28:40 - mmengine - INFO - Epoch(train)  [47][  800/22878]  base_lr: 3.8095e-02 lr: 3.8095e-02  eta: 10 days, 10:35:51  time: 0.1730  data_time: 0.0278  memory: 7815  loss: 3.3628
2023/10/05 22:28:57 - mmengine - INFO - Epoch(train)  [47][  900/22878]  base_lr: 3.8094e-02 lr: 3.8094e-02  eta: 10 days, 10:37:52  time: 0.1701  data_time: 0.0288  memory: 7498  loss: 3.2282
2023/10/05 22:29:14 - mmengine - INFO - Epoch(train)  [47][ 1000/22878]  base_lr: 3.8093e-02 lr: 3.8093e-02  eta: 10 days, 10:39:50  time: 0.1561  data_time: 0.0290  memory: 7754  loss: 3.4176
2023/10/05 22:29:31 - mmengine - INFO - Epoch(train)  [47][ 1100/22878]  base_lr: 3.8093e-02 lr: 3.8093e-02  eta: 10 days, 10:42:43  time: 0.1714  data_time: 0.0275  memory: 7764  loss: 3.4367
2023/10/05 22:29:48 - mmengine - INFO - Epoch(train)  [47][ 1200/22878]  base_lr: 3.8092e-02 lr: 3.8092e-02  eta: 10 days, 10:45:43  time: 0.1631  data_time: 0.0278  memory: 7782  loss: 3.4463
2023/10/05 22:30:06 - mmengine - INFO - Epoch(train)  [47][ 1300/22878]  base_lr: 3.8091e-02 lr: 3.8091e-02  eta: 10 days, 10:49:00  time: 0.1596  data_time: 0.0255  memory: 7818  loss: 3.4192
2023/10/05 22:30:23 - mmengine - INFO - Epoch(train)  [47][ 1400/22878]  base_lr: 3.8091e-02 lr: 3.8091e-02  eta: 10 days, 10:52:18  time: 0.1849  data_time: 0.0243  memory: 7575  loss: 3.3707
2023/10/05 22:30:40 - mmengine - INFO - Epoch(train)  [47][ 1500/22878]  base_lr: 3.8090e-02 lr: 3.8090e-02  eta: 10 days, 10:54:48  time: 0.1675  data_time: 0.0275  memory: 7657  loss: 3.2962
2023/10/05 22:30:56 - mmengine - INFO - Epoch(train)  [47][ 1600/22878]  base_lr: 3.8090e-02 lr: 3.8090e-02  eta: 10 days, 10:56:09  time: 0.1549  data_time: 0.0260  memory: 7649  loss: 3.5978
2023/10/05 22:30:59 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:31:14 - mmengine - INFO - Epoch(train)  [47][ 1700/22878]  base_lr: 3.8089e-02 lr: 3.8089e-02  eta: 10 days, 10:59:14  time: 0.1700  data_time: 0.0266  memory: 8078  loss: 3.4621
2023/10/05 22:31:30 - mmengine - INFO - Epoch(train)  [47][ 1800/22878]  base_lr: 3.8088e-02 lr: 3.8088e-02  eta: 10 days, 11:00:45  time: 0.1548  data_time: 0.0268  memory: 7724  loss: 3.4530
2023/10/05 22:31:47 - mmengine - INFO - Epoch(train)  [47][ 1900/22878]  base_lr: 3.8088e-02 lr: 3.8088e-02  eta: 10 days, 11:03:41  time: 0.1667  data_time: 0.0273  memory: 7919  loss: 3.4198
2023/10/05 22:32:04 - mmengine - INFO - Epoch(train)  [47][ 2000/22878]  base_lr: 3.8087e-02 lr: 3.8087e-02  eta: 10 days, 11:04:50  time: 0.1636  data_time: 0.0297  memory: 7502  loss: 3.5083
2023/10/05 22:32:21 - mmengine - INFO - Epoch(train)  [47][ 2100/22878]  base_lr: 3.8086e-02 lr: 3.8086e-02  eta: 10 days, 11:07:53  time: 0.1671  data_time: 0.0242  memory: 7862  loss: 3.4002
2023/10/05 22:32:38 - mmengine - INFO - Epoch(train)  [47][ 2200/22878]  base_lr: 3.8086e-02 lr: 3.8086e-02  eta: 10 days, 11:10:01  time: 0.1606  data_time: 0.0252  memory: 7817  loss: 3.5098
2023/10/05 22:32:54 - mmengine - INFO - Epoch(train)  [47][ 2300/22878]  base_lr: 3.8085e-02 lr: 3.8085e-02  eta: 10 days, 11:11:04  time: 0.1623  data_time: 0.0257  memory: 7870  loss: 3.3858
2023/10/05 22:33:12 - mmengine - INFO - Epoch(train)  [47][ 2400/22878]  base_lr: 3.8084e-02 lr: 3.8084e-02  eta: 10 days, 11:14:13  time: 0.1686  data_time: 0.0268  memory: 7663  loss: 3.3567
2023/10/05 22:33:28 - mmengine - INFO - Epoch(train)  [47][ 2500/22878]  base_lr: 3.8084e-02 lr: 3.8084e-02  eta: 10 days, 11:15:56  time: 0.1514  data_time: 0.0237  memory: 7697  loss: 3.5926
2023/10/05 22:33:45 - mmengine - INFO - Epoch(train)  [47][ 2600/22878]  base_lr: 3.8083e-02 lr: 3.8083e-02  eta: 10 days, 11:16:49  time: 0.1650  data_time: 0.0247  memory: 8003  loss: 3.2452
2023/10/05 22:33:47 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:34:01 - mmengine - INFO - Epoch(train)  [47][ 2700/22878]  base_lr: 3.8082e-02 lr: 3.8082e-02  eta: 10 days, 11:17:55  time: 0.1610  data_time: 0.0271  memory: 7991  loss: 3.3746
2023/10/05 22:34:18 - mmengine - INFO - Epoch(train)  [47][ 2800/22878]  base_lr: 3.8082e-02 lr: 3.8082e-02  eta: 10 days, 11:19:17  time: 0.1862  data_time: 0.0359  memory: 7713  loss: 3.2660
2023/10/05 22:34:34 - mmengine - INFO - Epoch(train)  [47][ 2900/22878]  base_lr: 3.8081e-02 lr: 3.8081e-02  eta: 10 days, 11:20:44  time: 0.1643  data_time: 0.0268  memory: 7584  loss: 3.4740
2023/10/05 22:34:51 - mmengine - INFO - Epoch(train)  [47][ 3000/22878]  base_lr: 3.8080e-02 lr: 3.8080e-02  eta: 10 days, 11:22:18  time: 0.1601  data_time: 0.0254  memory: 7583  loss: 3.4701
2023/10/05 22:35:07 - mmengine - INFO - Epoch(train)  [47][ 3100/22878]  base_lr: 3.8080e-02 lr: 3.8080e-02  eta: 10 days, 11:24:15  time: 0.1622  data_time: 0.0227  memory: 7937  loss: 3.4530
2023/10/05 22:35:24 - mmengine - INFO - Epoch(train)  [47][ 3200/22878]  base_lr: 3.8079e-02 lr: 3.8079e-02  eta: 10 days, 11:26:12  time: 0.1654  data_time: 0.0296  memory: 7469  loss: 3.2619
2023/10/05 22:35:41 - mmengine - INFO - Epoch(train)  [47][ 3300/22878]  base_lr: 3.8078e-02 lr: 3.8078e-02  eta: 10 days, 11:28:19  time: 0.1644  data_time: 0.0217  memory: 7465  loss: 3.4301
2023/10/05 22:35:57 - mmengine - INFO - Epoch(train)  [47][ 3400/22878]  base_lr: 3.8078e-02 lr: 3.8078e-02  eta: 10 days, 11:28:48  time: 0.1571  data_time: 0.0251  memory: 7679  loss: 3.4042
2023/10/05 22:36:13 - mmengine - INFO - Epoch(train)  [47][ 3500/22878]  base_lr: 3.8077e-02 lr: 3.8077e-02  eta: 10 days, 11:29:28  time: 0.1471  data_time: 0.0243  memory: 7812  loss: 3.4331
2023/10/05 22:36:30 - mmengine - INFO - Epoch(train)  [47][ 3600/22878]  base_lr: 3.8076e-02 lr: 3.8076e-02  eta: 10 days, 11:31:00  time: 0.1630  data_time: 0.0276  memory: 7905  loss: 3.3274
2023/10/05 22:36:32 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:36:47 - mmengine - INFO - Epoch(train)  [47][ 3700/22878]  base_lr: 3.8076e-02 lr: 3.8076e-02  eta: 10 days, 11:32:51  time: 0.1719  data_time: 0.0285  memory: 8143  loss: 3.3648
2023/10/05 22:37:04 - mmengine - INFO - Epoch(train)  [47][ 3800/22878]  base_lr: 3.8075e-02 lr: 3.8075e-02  eta: 10 days, 11:34:38  time: 0.1812  data_time: 0.0261  memory: 8143  loss: 3.4199
2023/10/05 22:37:20 - mmengine - INFO - Epoch(train)  [47][ 3900/22878]  base_lr: 3.8074e-02 lr: 3.8074e-02  eta: 10 days, 11:36:10  time: 0.1771  data_time: 0.0337  memory: 8313  loss: 3.3997
2023/10/05 22:37:37 - mmengine - INFO - Epoch(train)  [47][ 4000/22878]  base_lr: 3.8074e-02 lr: 3.8074e-02  eta: 10 days, 11:37:19  time: 0.1700  data_time: 0.0249  memory: 7990  loss: 3.4925
2023/10/05 22:37:53 - mmengine - INFO - Epoch(train)  [47][ 4100/22878]  base_lr: 3.8073e-02 lr: 3.8073e-02  eta: 10 days, 11:39:03  time: 0.1613  data_time: 0.0245  memory: 7691  loss: 3.4916
2023/10/05 22:38:10 - mmengine - INFO - Epoch(train)  [47][ 4200/22878]  base_lr: 3.8072e-02 lr: 3.8072e-02  eta: 10 days, 11:40:08  time: 0.1620  data_time: 0.0235  memory: 8384  loss: 3.4055
2023/10/05 22:38:27 - mmengine - INFO - Epoch(train)  [47][ 4300/22878]  base_lr: 3.8072e-02 lr: 3.8072e-02  eta: 10 days, 11:41:48  time: 0.1778  data_time: 0.0206  memory: 7787  loss: 3.4324
2023/10/05 22:38:43 - mmengine - INFO - Epoch(train)  [47][ 4400/22878]  base_lr: 3.8071e-02 lr: 3.8071e-02  eta: 10 days, 11:43:34  time: 0.1688  data_time: 0.0220  memory: 7875  loss: 3.4699
2023/10/05 22:39:00 - mmengine - INFO - Epoch(train)  [47][ 4500/22878]  base_lr: 3.8071e-02 lr: 3.8071e-02  eta: 10 days, 11:45:03  time: 0.1625  data_time: 0.0228  memory: 7883  loss: 3.3424
2023/10/05 22:39:16 - mmengine - INFO - Epoch(train)  [47][ 4600/22878]  base_lr: 3.8070e-02 lr: 3.8070e-02  eta: 10 days, 11:46:15  time: 0.1759  data_time: 0.0324  memory: 8076  loss: 3.4044
2023/10/05 22:39:18 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:39:33 - mmengine - INFO - Epoch(train)  [47][ 4700/22878]  base_lr: 3.8069e-02 lr: 3.8069e-02  eta: 10 days, 11:48:10  time: 0.1763  data_time: 0.0282  memory: 7584  loss: 3.3457
2023/10/05 22:39:50 - mmengine - INFO - Epoch(train)  [47][ 4800/22878]  base_lr: 3.8069e-02 lr: 3.8069e-02  eta: 10 days, 11:50:19  time: 0.1820  data_time: 0.0256  memory: 7617  loss: 3.3333
2023/10/05 22:40:07 - mmengine - INFO - Epoch(train)  [47][ 4900/22878]  base_lr: 3.8068e-02 lr: 3.8068e-02  eta: 10 days, 11:52:11  time: 0.1750  data_time: 0.0276  memory: 7665  loss: 3.3037
2023/10/05 22:40:23 - mmengine - INFO - Epoch(train)  [47][ 5000/22878]  base_lr: 3.8067e-02 lr: 3.8067e-02  eta: 10 days, 11:53:13  time: 0.1637  data_time: 0.0281  memory: 7944  loss: 3.3741
2023/10/05 22:40:40 - mmengine - INFO - Epoch(train)  [47][ 5100/22878]  base_lr: 3.8067e-02 lr: 3.8067e-02  eta: 10 days, 11:55:01  time: 0.1785  data_time: 0.0273  memory: 8033  loss: 3.5033
2023/10/05 22:40:57 - mmengine - INFO - Epoch(train)  [47][ 5200/22878]  base_lr: 3.8066e-02 lr: 3.8066e-02  eta: 10 days, 11:56:15  time: 0.1484  data_time: 0.0202  memory: 7714  loss: 3.5873
2023/10/05 22:41:13 - mmengine - INFO - Epoch(train)  [47][ 5300/22878]  base_lr: 3.8065e-02 lr: 3.8065e-02  eta: 10 days, 11:57:20  time: 0.1669  data_time: 0.0299  memory: 7841  loss: 3.3850
2023/10/05 22:41:30 - mmengine - INFO - Epoch(train)  [47][ 5400/22878]  base_lr: 3.8065e-02 lr: 3.8065e-02  eta: 10 days, 11:59:42  time: 0.1674  data_time: 0.0247  memory: 7941  loss: 3.4046
2023/10/05 22:41:47 - mmengine - INFO - Epoch(train)  [47][ 5500/22878]  base_lr: 3.8064e-02 lr: 3.8064e-02  eta: 10 days, 12:01:14  time: 0.1763  data_time: 0.0287  memory: 8000  loss: 3.4453
2023/10/05 22:42:04 - mmengine - INFO - Epoch(train)  [47][ 5600/22878]  base_lr: 3.8063e-02 lr: 3.8063e-02  eta: 10 days, 12:02:24  time: 0.1741  data_time: 0.0258  memory: 7684  loss: 3.3386
2023/10/05 22:42:06 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:42:20 - mmengine - INFO - Epoch(train)  [47][ 5700/22878]  base_lr: 3.8063e-02 lr: 3.8063e-02  eta: 10 days, 12:04:19  time: 0.1806  data_time: 0.0265  memory: 8161  loss: 3.3745
2023/10/05 22:42:37 - mmengine - INFO - Epoch(train)  [47][ 5800/22878]  base_lr: 3.8062e-02 lr: 3.8062e-02  eta: 10 days, 12:04:40  time: 0.1528  data_time: 0.0272  memory: 7668  loss: 3.4660
2023/10/05 22:42:53 - mmengine - INFO - Epoch(train)  [47][ 5900/22878]  base_lr: 3.8061e-02 lr: 3.8061e-02  eta: 10 days, 12:06:12  time: 0.1638  data_time: 0.0242  memory: 7812  loss: 3.3621
2023/10/05 22:43:10 - mmengine - INFO - Epoch(train)  [47][ 6000/22878]  base_lr: 3.8061e-02 lr: 3.8061e-02  eta: 10 days, 12:08:05  time: 0.1705  data_time: 0.0327  memory: 8068  loss: 3.3758
2023/10/05 22:43:27 - mmengine - INFO - Epoch(train)  [47][ 6100/22878]  base_lr: 3.8060e-02 lr: 3.8060e-02  eta: 10 days, 12:09:49  time: 0.1527  data_time: 0.0240  memory: 7988  loss: 3.4683
2023/10/05 22:43:44 - mmengine - INFO - Epoch(train)  [47][ 6200/22878]  base_lr: 3.8059e-02 lr: 3.8059e-02  eta: 10 days, 12:11:28  time: 0.1769  data_time: 0.0288  memory: 7524  loss: 3.3936
2023/10/05 22:44:00 - mmengine - INFO - Epoch(train)  [47][ 6300/22878]  base_lr: 3.8059e-02 lr: 3.8059e-02  eta: 10 days, 12:13:00  time: 0.1663  data_time: 0.0269  memory: 7755  loss: 3.5464
2023/10/05 22:44:18 - mmengine - INFO - Epoch(train)  [47][ 6400/22878]  base_lr: 3.8058e-02 lr: 3.8058e-02  eta: 10 days, 12:15:53  time: 0.1835  data_time: 0.0250  memory: 8220  loss: 3.2827
2023/10/05 22:44:34 - mmengine - INFO - Epoch(train)  [47][ 6500/22878]  base_lr: 3.8057e-02 lr: 3.8057e-02  eta: 10 days, 12:16:51  time: 0.1703  data_time: 0.0268  memory: 7858  loss: 3.5105
2023/10/05 22:44:51 - mmengine - INFO - Epoch(train)  [47][ 6600/22878]  base_lr: 3.8057e-02 lr: 3.8057e-02  eta: 10 days, 12:17:55  time: 0.1664  data_time: 0.0251  memory: 7933  loss: 3.5221
2023/10/05 22:44:53 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:45:07 - mmengine - INFO - Epoch(train)  [47][ 6700/22878]  base_lr: 3.8056e-02 lr: 3.8056e-02  eta: 10 days, 12:18:43  time: 0.1658  data_time: 0.0285  memory: 7797  loss: 3.5371
2023/10/05 22:45:24 - mmengine - INFO - Epoch(train)  [47][ 6800/22878]  base_lr: 3.8055e-02 lr: 3.8055e-02  eta: 10 days, 12:19:35  time: 0.1663  data_time: 0.0240  memory: 7902  loss: 3.5149
2023/10/05 22:45:40 - mmengine - INFO - Epoch(train)  [47][ 6900/22878]  base_lr: 3.8055e-02 lr: 3.8055e-02  eta: 10 days, 12:20:46  time: 0.1520  data_time: 0.0246  memory: 7628  loss: 3.3289
2023/10/05 22:45:57 - mmengine - INFO - Epoch(train)  [47][ 7000/22878]  base_lr: 3.8054e-02 lr: 3.8054e-02  eta: 10 days, 12:22:43  time: 0.1655  data_time: 0.0274  memory: 7733  loss: 3.4339
2023/10/05 22:46:14 - mmengine - INFO - Epoch(train)  [47][ 7100/22878]  base_lr: 3.8053e-02 lr: 3.8053e-02  eta: 10 days, 12:24:10  time: 0.1794  data_time: 0.0247  memory: 7879  loss: 3.5601
2023/10/05 22:46:30 - mmengine - INFO - Epoch(train)  [47][ 7200/22878]  base_lr: 3.8053e-02 lr: 3.8053e-02  eta: 10 days, 12:25:45  time: 0.1540  data_time: 0.0227  memory: 7719  loss: 3.4152
2023/10/05 22:46:47 - mmengine - INFO - Epoch(train)  [47][ 7300/22878]  base_lr: 3.8052e-02 lr: 3.8052e-02  eta: 10 days, 12:26:32  time: 0.1663  data_time: 0.0280  memory: 7627  loss: 3.4473
2023/10/05 22:47:04 - mmengine - INFO - Epoch(train)  [47][ 7400/22878]  base_lr: 3.8051e-02 lr: 3.8051e-02  eta: 10 days, 12:28:48  time: 0.1654  data_time: 0.0252  memory: 7795  loss: 3.4641
2023/10/05 22:47:21 - mmengine - INFO - Epoch(train)  [47][ 7500/22878]  base_lr: 3.8051e-02 lr: 3.8051e-02  eta: 10 days, 12:30:03  time: 0.1678  data_time: 0.0261  memory: 7563  loss: 3.5097
2023/10/05 22:47:37 - mmengine - INFO - Epoch(train)  [47][ 7600/22878]  base_lr: 3.8050e-02 lr: 3.8050e-02  eta: 10 days, 12:31:34  time: 0.1601  data_time: 0.0282  memory: 8013  loss: 3.3867
2023/10/05 22:47:40 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:47:54 - mmengine - INFO - Epoch(train)  [47][ 7700/22878]  base_lr: 3.8050e-02 lr: 3.8050e-02  eta: 10 days, 12:32:37  time: 0.1654  data_time: 0.0245  memory: 7769  loss: 3.3249
2023/10/05 22:48:10 - mmengine - INFO - Epoch(train)  [47][ 7800/22878]  base_lr: 3.8049e-02 lr: 3.8049e-02  eta: 10 days, 12:33:51  time: 0.1662  data_time: 0.0272  memory: 7902  loss: 3.5240
2023/10/05 22:48:28 - mmengine - INFO - Epoch(train)  [47][ 7900/22878]  base_lr: 3.8048e-02 lr: 3.8048e-02  eta: 10 days, 12:36:10  time: 0.1945  data_time: 0.0248  memory: 7658  loss: 3.3701
2023/10/05 22:48:44 - mmengine - INFO - Epoch(train)  [47][ 8000/22878]  base_lr: 3.8048e-02 lr: 3.8048e-02  eta: 10 days, 12:37:42  time: 0.1552  data_time: 0.0244  memory: 7685  loss: 3.3827
2023/10/05 22:49:01 - mmengine - INFO - Epoch(train)  [47][ 8100/22878]  base_lr: 3.8047e-02 lr: 3.8047e-02  eta: 10 days, 12:38:49  time: 0.1693  data_time: 0.0220  memory: 7553  loss: 3.4862
2023/10/05 22:49:18 - mmengine - INFO - Epoch(train)  [47][ 8200/22878]  base_lr: 3.8046e-02 lr: 3.8046e-02  eta: 10 days, 12:39:53  time: 0.1576  data_time: 0.0223  memory: 8091  loss: 3.4647
2023/10/05 22:49:34 - mmengine - INFO - Epoch(train)  [47][ 8300/22878]  base_lr: 3.8046e-02 lr: 3.8046e-02  eta: 10 days, 12:40:34  time: 0.1641  data_time: 0.0261  memory: 7526  loss: 3.6453
2023/10/05 22:49:51 - mmengine - INFO - Epoch(train)  [47][ 8400/22878]  base_lr: 3.8045e-02 lr: 3.8045e-02  eta: 10 days, 12:42:36  time: 0.1683  data_time: 0.0284  memory: 7908  loss: 3.5647
2023/10/05 22:50:07 - mmengine - INFO - Epoch(train)  [47][ 8500/22878]  base_lr: 3.8044e-02 lr: 3.8044e-02  eta: 10 days, 12:43:25  time: 0.1635  data_time: 0.0227  memory: 7594  loss: 3.5838
2023/10/05 22:50:24 - mmengine - INFO - Epoch(train)  [47][ 8600/22878]  base_lr: 3.8044e-02 lr: 3.8044e-02  eta: 10 days, 12:45:03  time: 0.1693  data_time: 0.0275  memory: 7598  loss: 3.5647
2023/10/05 22:50:26 - mmengine - INFO - Exp name: spos_mobilenet_supernet_8xb128_in1k_20231005_202456
2023/10/05 22:50:41 - mmengine - INFO - Epoch(train)  [47][ 8700/22878]  base_lr: 3.8043e-02 lr: 3.8043e-02  eta: 10 days, 12:45:55  time: 0.1570  data_time: 0.0277  memory: 8034  loss: 3.3376
2023/10/05 22:50:57 - mmengine - INFO - Epoch(train)  [47][ 8800/22878]  base_lr: 3.8042e-02 lr: 3.8042e-02  eta: 10 days, 12:46:42  time: 0.1812  data_time: 0.0274  memory: 8088  loss: 3.2876
2023/10/05 22:51:13 - mmengine - INFO - Epoch(train)  [47][ 8900/22878]  base_lr: 3.8042e-02 lr: 3.8042e-02  eta: 10 days, 12:47:30  time: 0.1703  data_time: 0.0275  memory: 7787  loss: 3.3785
2023/10/05 22:51:30 - mmengine - INFO - Epoch(train)  [47][ 9000/22878]  base_lr: 3.8041e-02 lr: 3.8041e-02  eta: 10 days, 12:48:53  time: 0.1474  data_time: 0.0296  memory: 7956  loss: 3.5144
2023/10/05 22:51:47 - mmengine - INFO - Epoch(train)  [47][ 9100/22878]  base_lr: 3.8040e-02 lr: 3.8040e-02  eta: 10 days, 12:49:54  time: 0.1836  data_time: 0.0270  memory: 7721  loss: 3.4017
2023/10/05 22:52:04 - mmengine - INFO - Epoch(train)  [47][ 9200/22878]  base_lr: 3.8040e-02 lr: 3.8040e-02  eta: 10 days, 12:51:30  time: 0.1748  data_time: 0.0283  memory: 7802  loss: 3.5095
2023/10/05 22:52:21 - mmengine - INFO - Epoch(train)  [47][ 9300/22878]  base_lr: 3.8039e-02 lr: 3.8039e-02  eta: 10 days, 12:53:43  time: 0.2017  data_time: 0.0305  memory: 7866  loss: 3.4851
2023/10/05 22:52:37 - mmengine - INFO - Epoch(train)  [47][ 9400/22878]  base_lr: 3.8038e-02 lr: 3.8038e-02  eta: 10 days, 12:54:49  time: 0.1611  data_time: 0.0293  memory: 8101  loss: 3.5797
2023/10/05 22:52:54 - mmengine - INFO - Epoch(train)  [47][ 9500/22878]  base_lr: 3.8038e-02 lr: 3.8038e-02  eta: 10 days, 12:55:51  time: 0.1612  data_time: 0.0254  memory: 7776  loss: 3.4203
